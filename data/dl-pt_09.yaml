- en: What Next?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下一步是什么？
- en: You made it! Thanks for reading *Deep Learning with PyTorch*. You should have
    a firm understanding of the core mechanisms and the **application program interface**
    (**API**) required for building deep learning applications using PyTorch. By now,
    you should be comfortable in using all the fundamental blocks that power most
    of the modern-day deep learning algorithms.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你做到了！感谢阅读《使用PyTorch进行深度学习》。你应该已经对构建深度学习应用所需的核心机制和**应用程序接口**（**API**）有了坚实的理解。到目前为止，你应该已经能够熟练使用支撑大部分现代深度学习算法的所有基本组件。
- en: What next?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来是什么？
- en: In this chapter, we will summarize what we learned in this book and further
    explore different projects and resources. These projects and resources will help
    you further in the journey of keeping yourself up-to-date with the latest research.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将总结我们在本书中学到的内容，并进一步探讨不同的项目和资源。这些项目和资源将有助于你在保持与最新研究同步的旅程中更进一步。
- en: Overview
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概览
- en: 'This section provides a bird''s-eye view of what we learned across the book:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了我们在整本书中学到的一个鸟瞰视角：
- en: History of **artificial intelligence** (**AI**), machine learning—how various
    improvements in hardware and algorithms triggered huge successes in the implementation
    of deep learning across different applications.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人工智能（**AI**）历史，机器学习的历史——硬件和算法的各种改进如何在不同应用中触发了深度学习的巨大成功。
- en: How to use various building blocks of PyTorch, such as variables, tensors, and
    `nn.module`, to develop neural networks.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用PyTorch的各种构建模块，如变量、张量和`nn.module`，来开发神经网络。
- en: Understanding the different processes involved in training a neural network,
    such as the PyTorch dataset for data preparation, data loaders for batching tensors,
    the `torch.nn` package for creating network architectures, and using PyTorch loss
    functions and optimizers.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解训练神经网络涉及的不同过程，例如用于数据准备的PyTorch数据集，用于批处理张量的数据加载器，用于创建网络架构的`torch.nn`包，以及使用PyTorch损失函数和优化器。
- en: We saw different types of machine learning problems along with challenges, such
    as overfitting and underfitting. We also went through different techniques, such
    as data augmentation, adding dropouts, and using batch normalization to prevent
    overfitting.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们看到了不同类型的机器学习问题以及挑战，例如过拟合和欠拟合。我们还通过了不同的技术，如数据增强、添加 dropout，以及使用批归一化来防止过拟合。
- en: We learned the different building blocks of **Convolution Neural Networks**
    (**CNNs**), and also learned about transfer learning, which helps us to use a
    pretrained model. We also saw techniques, such as using pre-convoluted features,
    which helps in reducing the time taken to train the models.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们学习了**卷积神经网络**（**CNNs**）的不同构建模块，并学习了迁移学习，这有助于我们使用预训练模型。我们还了解了使用预卷积特征等技术，有助于减少模型训练所需的时间。
- en: We learned about word embeddings and how to use them for text classification
    problems. We also explored how we can use pretrained word embedding. We explored
    **recurrent neural network** (**RNN**), its variants such as **Long Short-Term Memory** (**LSTM**),
    and how to use them for text classification problems.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们学习了词嵌入（word embeddings）及其在文本分类问题中的应用。我们还探索了如何使用预训练的词嵌入。我们研究了**循环神经网络**（**RNN**）及其变种，如**长短期记忆网络**（**LSTM**），以及如何将它们用于文本分类问题。
- en: We explored generative models and learned how PyTorch can be used for creating
    artistic style transfer, and for creating new CIFAR images using a **generative
    adversarial network** (**GAN**). We also explored language modeling techniques
    which can be used to generate new text or to create domain-specific embedding.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们探索了生成模型，并学习了如何使用PyTorch进行艺术风格转换，以及如何使用生成对抗网络（**GAN**）创建新的CIFAR图像。我们还探索了语言建模技术，这些技术可以用于生成新文本或创建特定领域的嵌入。
- en: We explored modern architectures, such as ResNet, Inception, DenseNet and encode-decoder
    architecture. We also saw how these models can be used for transfer learning.
    We also built an ensemble model by combining all these models.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们探索了现代架构，如ResNet、Inception、DenseNet和编码-解码架构。我们还看到了这些模型如何用于迁移学习。我们还通过结合所有这些模型构建了一个集成模型。
- en: Interesting ideas to explore
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索有趣的想法
- en: Most of the concepts that we learned in the book form the foundation of modern
    applications that are powered by deep learning. In this section, we will look
    at the different interesting projects that we can do that are related to computer
    vision and **natural language processing** (**NLP**).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在书中学到的大部分概念构成了由深度学习驱动的现代应用程序的基础。在本节中，我们将探讨与计算机视觉和**自然语言处理** (**NLP**) 相关的不同有趣项目。
- en: Object detection
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标检测
- en: 'All the examples we have seen in this book help you in detecting whether a
    given image is this (cat) or that (dog). But, to solve some of the problems in
    the real world, you may need to identify different objects in an image, such as
    shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中看到的所有例子都有助于检测给定图像是这个（猫）还是那个（狗）。但是，要解决现实世界中的一些问题，你可能需要识别图像中的不同对象，例如这里显示的：
- en: '![](img/6fd9df64-6905-4ae4-9e33-c7f3741c6211.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6fd9df64-6905-4ae4-9e33-c7f3741c6211.png)'
- en: Output of object detection algorithm
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 目标检测算法的输出
- en: 'This image shows the output of an object detection algorithm where the algorithm
    is detecting objects such as a beautiful dog and cat . Just as there are off-the-shelf
    algorithms for image classification, there are a bunch of amazing algorithms that
    can help in building object recognition systems. Here is a list of some of the
    important algorithms and the papers that mention them:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图片显示了一个目标检测算法的输出，算法正在检测诸如一只漂亮的狗和猫等对象。就像有现成的图像分类算法一样，有许多令人惊奇的算法可以帮助构建对象识别系统。以下是一些重要算法及其提到的论文列表：
- en: '**Single Shot Multibox Detector** (**SSD**) [https://arxiv.org/abs/1512.02325](https://arxiv.org/abs/1512.02325)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单次检测多盒子探测器** (**SSD**) [https://arxiv.org/abs/1512.02325](https://arxiv.org/abs/1512.02325)'
- en: Faster RCNN [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Faster RCNN [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
- en: YOLO2 [https://arxiv.org/abs/1612.08242](https://arxiv.org/abs/1612.08242)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YOLO2 [https://arxiv.org/abs/1612.08242](https://arxiv.org/abs/1612.08242)
- en: Image segmentation
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像分割
- en: 'Let''s assume you are reading this book from the terrace of a building. What
    do you see around you? Can you draw an outline of what you see? If you are a good
    artist, unlike me, then you would have probably drawn a couple of buildings, trees,
    birds, and a few more interesting things surrounding you. Image segmentation algorithms
    try to capture something similar. Given an image, they generate a prediction for
    each pixel, identifying which class each pixel belongs to. The following image
    shows what image segmentation algorithms identify:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在楼顶阅读这本书。你周围看到了什么？你能勾勒出你看到的东西吗？如果你是个好艺术家，不像我，那么你可能已经画了几座建筑物、树木、鸟类以及周围更多有趣的事物。图像分割算法试图捕捉类似的东西。给定一张图像，它们会为每个像素生成一个预测，识别每个像素属于哪个类别。以下图片展示了图像分割算法的识别结果：
- en: '![](img/abfd63aa-4643-4910-9faf-e447a4956a40.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/abfd63aa-4643-4910-9faf-e447a4956a40.png)'
- en: Output of image segmentation algorithm
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割算法的输出
- en: 'Some of the important algorithms that you may want to explore for image segmentation
    are:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能希望探索用于图像分割的一些重要算法：
- en: R-CNN [https://arxiv.org/abs/1311.2524](https://arxiv.org/abs/1311.2524)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R-CNN [https://arxiv.org/abs/1311.2524](https://arxiv.org/abs/1311.2524)
- en: Fast R-CNN [https://arxiv.org/abs/1504.08083](https://arxiv.org/abs/1504.08083)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速 R-CNN [https://arxiv.org/abs/1504.08083](https://arxiv.org/abs/1504.08083)
- en: Faster R-CNN [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Faster R-CNN [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
- en: Mask R-CNN [https://arxiv.org/abs/1703.06870](https://arxiv.org/abs/1703.06870)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mask R-CNN [https://arxiv.org/abs/1703.06870](https://arxiv.org/abs/1703.06870)
- en: OpenNMT in PyTorch
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyTorch 中的 OpenNMT
- en: The **Open-Source Neural Machine Translation** (**OpenNMT**) ([https://github.com/OpenNMT/OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py)) project
    helps in building a lot of applications that are powered by the encoder-decoder
    architecture. Some of the applications that you can build are translation systems,
    text summarization, and image-to-text.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**开源神经机器翻译** (**OpenNMT**) ([https://github.com/OpenNMT/OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py))
    项目有助于构建许多由编码器-解码器架构驱动的应用程序。你可以构建的一些应用包括翻译系统、文本摘要和图像到文本。'
- en: Alien NLP
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Alien NLP
- en: Alien NLP is an open source project built on PyTorch which enables us to do
    many NLP tasks much more easily. There is a demo page ([http://demo.allennlp.org/machine-comprehension](http://demo.allennlp.org/machine-comprehension))
    that you should look at to understand what you can build using Alien NLP.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Alien NLP 是一个建立在 PyTorch 上的开源项目，能够更轻松地完成许多自然语言处理任务。这里有一个演示页面（[http://demo.allennlp.org/machine-comprehension](http://demo.allennlp.org/machine-comprehension)），你可以查看以了解使用
    Alien NLP 可以构建什么。
- en: fast.ai – making neural nets uncool again
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fast.ai – 再次让神经网络变得不那么酷
- en: One of my favorite places to learn about deep learning, and a great place of
    inspiration, is a MOOC with the sole motive of making deep learning accessible
    to all, organized by two amazing mentors from *fast.ai* ([http://www.fast.ai/](http://www.fast.ai/)),
    Jeremy Howard and Rachel Thomas. For a new version of their course, they built
    an incredible framework ([https://github.com/fastai/fastai](https://github.com/fastai/fastai))
    on top of PyTorch, making it much easier and quicker to build applications. If
    you have not already started their course, I would strongly recommend you start
    it. Exploring how the *fast.ai* framework is built will give you great insight
    into many powerful techniques.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢学习深度学习的地方之一，也是一个极好的灵感来源，是由 *fast.ai* 的两位出色导师 Jeremy Howard 和 Rachel Thomas
    组织的一个 MOOC，其唯一目的是让深度学习对所有人都更加可达，你可以在 [http://www.fast.ai/](http://www.fast.ai/)
    查看。他们为课程的新版本构建了一个令人惊叹的框架（[https://github.com/fastai/fastai](https://github.com/fastai/fastai)），基于
    PyTorch，使构建应用程序变得更加简单和快速。如果你还没有开始他们的课程，我强烈建议你开始。探索 *fast.ai* 框架的构建将为你带来许多强大技术的深刻见解。
- en: Open Neural Network Exchange
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开放神经网络交换
- en: '**Open Neural Network Exchange** (**ONNX**) ([http://onnx.ai/](http://onnx.ai/)) is
    the first step towards an open ecosystem that empowers you to choose the right
    tools as the project evolves. ONNX provides an open source format for deep learning
    models. It defines an extensible computation graph model, as well as definitions
    of built-in operators and standard data types. Caffe2, PyTorch, Microsoft Cognitive
    Toolkit, Apache MXNet, and other tools are developing ONNX support. This project
    can help in product-ionizing PyTorch models.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**开放神经网络交换**（**ONNX**）（[http://onnx.ai/](http://onnx.ai/)）是迈向开放生态系统的第一步，使你能够在项目发展过程中选择合适的工具。ONNX
    提供了深度学习模型的开源格式。它定义了可扩展的计算图模型，以及内置运算符和标准数据类型的定义。Caffe2、PyTorch、Microsoft Cognitive
    Toolkit、Apache MXNet 等工具正在开发 ONNX 支持。这个项目有助于将 PyTorch 模型产品化。'
- en: How to keep yourself updated
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何保持更新
- en: Social media platforms, particularly Twitter, help you to stay updated in the
    field. There are many people you can follow. If you are unsure of where to start,
    I would recommend following Jeremy Howard ([https://twitter.com/jeremyphoward](https://twitter.com/jeremyphoward)),
    and any interesting people he may follow. By doing this, you would be forcing
    the Twitter recommendation system to work for you.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 社交媒体平台，特别是 Twitter，帮助你在该领域保持更新。有许多人可以关注。如果你不确定从哪里开始，我建议你关注 Jeremy Howard（[https://twitter.com/jeremyphoward](https://twitter.com/jeremyphoward)）及他可能关注的其他有趣的人。这样做可以让
    Twitter 的推荐系统为你工作。
- en: Another important Twitter account you need to follow is PyTorch's ([https://twitter.com/PyTorch](https://twitter.com/PyTorch)).
    The amazing people behind PyTorch have some great content being shared.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个你需要关注的重要 Twitter 账号是 PyTorch 的（[https://twitter.com/PyTorch](https://twitter.com/PyTorch)）。PyTorch
    背后的惊人团队分享了一些很棒的内容。
- en: If you are looking for research papers, then look at *arxiv-sanity* ([http://www.arxiv-sanity.com/](http://www.arxiv-sanity.com/)),
    where many smart researchers publish their papers.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找研究论文，可以看看 *arxiv-sanity*（[http://www.arxiv-sanity.com/](http://www.arxiv-sanity.com/)），那里许多聪明的研究人员发布他们的论文。
- en: More great resources for learning about PyTorch are its tutorials ([http://pytorch.org/tutorials/](http://pytorch.org/tutorials/)),
    its source code ([https://github.com/pytorch/pytorch](https://github.com/pytorch/pytorch)),
    and its documentation ([http://pytorch.org/docs/0.3.0/](http://pytorch.org/docs/0.3.0/)).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 PyTorch 的更多优秀资源包括其教程（[http://pytorch.org/tutorials/](http://pytorch.org/tutorials/)）、源代码（[https://github.com/pytorch/pytorch](https://github.com/pytorch/pytorch)）以及文档（[http://pytorch.org/docs/0.3.0/](http://pytorch.org/docs/0.3.0/)）。
- en: Summary
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: There is much more to deep learning and PyTorch. PyTorch is a relatively new
    framework, which, at the time of writing this chapter, is a year old. There is
    much more to learn and explore, so happy learning. All the best.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 关于深度学习和 PyTorch 还有很多内容。PyTorch 是一个相对较新的框架，在撰写本章时已经一年了。还有很多东西可以学习和探索，祝你学习愉快。一切顺利。
