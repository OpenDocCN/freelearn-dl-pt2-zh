- en: Whats Next?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来做什么？
- en: You've finally finished the book! Give yourself a pat on the back! Thanks for
    going through the book, and I sincerely hope that it helps you in your path ahead,
    be it as a data scientist, a machine learning engineer, or one of the many other
    evolving job titles in the AI space. By now, you should have a firm grasp of the
    PyTorch API and how to use it to perform several tasks across computer vision,
    natural language processing, and reinforcement learning. However, this is by no
    means an end to the journey you've started, but rather a beginning to a fantastic
    road ahead!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你完成了这本书！请给自己一个大大的掌声！感谢您阅读本书，真诚希望它能帮助您在未来的道路上，无论是作为数据科学家、机器学习工程师，还是人工智能领域众多不断发展的职称之一。到现在为止，您应该已经对PyTorch
    API及其在计算机视觉、自然语言处理和强化学习等多个任务中的应用有了牢固的掌握。然而，这绝不是您开始的旅程的终点，而是一个美好未来之路的开端！
- en: What's next?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来做什么？
- en: In this chapter, we will look at the next sequence of logical steps to take
    in order to build on the progress you've made with this book. However, let's first
    take a step back and look at all the tools and techniques we've learned so far
    and understand how all of what you've learned so far fits into a deeper learning
    context.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看一下下一个逻辑步骤序列，以便在书中已经取得的进展基础上继续前进。然而，首先让我们退一步，看看到目前为止学到的所有工具和技术，理解你所学到的一切如何融入更深入的学习背景中。
- en: Overview of the book
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 书籍概述
- en: 'The following bullet list will help you understand the essence of each chapter
    from the book and can act as a quick guide to put what we''ve learned throughout
    the book into context:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下项目符号列表将帮助您理解书中每章的要点，并可以作为快速指南，将我们在整本书中学到的内容置于上下文中：
- en: History of AI, neural networks, and deep learning. The various deep learning
    frameworks in use. The importance and necessity of PyTorch. Improvements in PyTorch
    v1.0\. GPU versus CPU. Using CUDA to parallelize tensor computations.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AI、神经网络和深度学习的历史。目前使用的各种深度学习框架。PyTorch的重要性和必要性。PyTorch v1.0的改进。GPU与CPU的对比。使用CUDA并行化张量计算。
- en: 'The building blocks of neural networks: How do networks learn representations?
    We looked at PyTorch `tensors`, `tensor operations`, `nn.module`, `torch optim`,
    and how the PyTorch define by run dynamic DAGs work.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 神经网络的构建模块：网络如何学习表示？我们看了PyTorch `tensors`、`tensor operations`、`nn.module`、`torch
    optim`，以及PyTorch定义运行时动态DAG的工作原理。
- en: We learned about the different processes involved in training a neural network,
    such as the PyTorch dataset for data preparation, data loaders for batching tensors,
    the `torch.nn` package for creating network architectures, and using PyTorch loss
    functions and optimizers. We also went through different techniques to handle
    overfitting, such as dropout, l1 and l2 regularization, and using batch normalization.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们学习了神经网络训练中涉及的不同流程，如PyTorch数据集用于数据准备，数据加载器用于批量张量处理，`torch.nn`包用于创建网络架构，以及使用PyTorch损失函数和优化器。我们还讨论了处理过拟合的不同技术，如dropout、l1和l2正则化，以及使用批归一化。
- en: We learned the different building blocks of **convolution neural networks**
    (**CNNs**), and also learned about transfer learning, which helps us to use a
    pretrained model. We also saw techniques, such as using preconvoluted features,
    which help in reducing the time taken to train the models.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们学习了**卷积神经网络**（**CNNs**）的不同构建模块，还学习了迁移学习，帮助我们使用预训练模型。我们还看到了一些技术，如使用预先计算的特征，有助于减少训练模型所需的时间。
- en: We learned about word embedding and how to use it for text classification problems.
    We also explored how we can use pretrained word embedding. We explored **recurrent
    neural network** (**RNN**), its variants such as **long short-term memory** (**LSTM**),
    and how to use them for text classification problems.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们学习了词嵌入（word embedding）及其在文本分类问题中的应用。我们还探讨了如何使用预训练的词嵌入。我们研究了**循环神经网络**（**RNN**）及其变体，例如**长短期记忆网络**（**LSTM**），以及如何将它们应用于文本分类问题。
- en: In this chapter, we examined the idea of semi-supervised learning using autoencoders
    to denoise data, and variational autoencoders to generate new images.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了使用自编码器进行半监督学习来去噪数据的想法，以及使用变分自编码器生成新图像。
- en: We explored generative models and learned how PyTorch can be used for creating
    an artistic style transfer, and for creating new CIFAR images using a **generative
    adversarial network** (**GAN**). We also explored language modeling techniques
    that can be used to generate new text or to create domain-specific embedding.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们探讨了生成模型，并学习了如何使用PyTorch进行艺术风格转移，以及使用生成对抗网络（**GAN**）创建新的CIFAR图像。我们还探讨了语言建模技术，可以用于生成新文本或创建特定领域的嵌入。
- en: We explored modern architectures, such as ResNet, Inception, DenseNet and encode-decoder
    architecture. We also saw how these models can be used for transfer learning.
    We also built an ensemble model by combining all these models.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们探讨了现代架构，如ResNet、Inception、DenseNet和编码-解码架构。我们还看到了这些模型如何用于迁移学习。我们还通过组合所有这些模型构建了一个集成模型。
- en: Finally, we looked at how reinforcement learning can be used to train models
    to make decisions in uncertain sequential environments. We looked at the various
    deep reinforcement learning strategies, such as deep-Q learning and policy based
    and actor-critic models. We used an OpenAI gym environment to solve the famous
    cart-pole problem using deep reinforcement learning.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们研究了如何利用强化学习来训练模型在不确定的顺序环境中做出决策。我们研究了各种深度强化学习策略，如深度Q学习、基于策略的方法和演员-评论家模型。我们使用了OpenAI
    gym环境来使用深度强化学习解决著名的倒立摆问题。
- en: Reading and implementing research papers
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读和实施研究论文
- en: Deep learning is a constantly evolving field and keeping up to date with the
    latest developments in the field will definitely impact your ability to contribute
    to the team you are working in and also to the field in general.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习是一个不断发展的领域，跟上领域中的最新发展将显著影响您在所在团队以及整个领域中的贡献能力。
- en: 'Research papers at first might look like jargon-filled convoluted text that
    is hard to understand, but making a constant effort to read and implement these
    algorithms will significantly boost your capabilities. One of my favorite repositories
    of papers and their corresponding implementations in code is paperswithcode ([https://paperswithcode.com/sota](https://paperswithcode.com/sota)):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 研究论文起初可能看起来是充满术语且难以理解的混乱文本，但是不断努力阅读和实施这些算法将极大提升您的能力。我最喜欢的论文及其对应代码的存储库之一是 paperswithcode
    ([https://paperswithcode.com/sota](https://paperswithcode.com/sota))：
- en: '![](img/3c602442-caaa-43f8-bed5-627a121175cb.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3c602442-caaa-43f8-bed5-627a121175cb.png)'
- en: The paperswithcode website
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: paperswithcode 网站
- en: You should find the latest research papers and code for various tasks in AI
    such as CV, NLP, reinforcement learning, speech, and so on. Going through at least
    one paper per week and implementing the code by downloading the source code will
    help you stay on track with the latest developments in the field.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该查找关于CV、NLP、强化学习、语音等人工智能各种任务的最新研究论文和代码。每周至少阅读一篇论文，并通过下载源代码实现代码，将帮助您跟上该领域的最新发展。
- en: Interesting ideas to explore
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索有趣的想法
- en: Most of the concepts that we learned in the book form the foundation of modern
    applications that are powered by deep learning. In this section, we will look
    at the different interesting projects that we can do that are related to computer
    vision and **natural language processing** (**NLP**).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中学到的大部分概念构成了由深度学习驱动的现代应用的基础。在本节中，我们将看看与计算机视觉和**自然语言处理**（**NLP**）相关的不同有趣的项目。
- en: Object detection
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对象检测
- en: 'All the examples we have seen in this book help you in detecting whether a
    given image is this (cat) or that (dog). But, to solve some of the problems in
    the real world, you may need to identify different objects in an image, such as
    the ones shown here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有示例都有助于您检测给定图像是否为这种（猫）或那种（狗）。但是，要解决现实世界中的一些问题，您可能需要识别图像中的不同对象，例如这里展示的对象：
- en: '![](img/aaa25c1b-2c27-4dbc-8185-e0257e21505a.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aaa25c1b-2c27-4dbc-8185-e0257e21505a.png)'
- en: Output of an object detection algorithm
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对象检测算法的输出
- en: 'This image shows the output of an object detection algorithm where the algorithm
    is detecting objects such as a beautiful dog and cat. Just as there are off-the-shelf
    algorithms for image classification, there are a bunch of amazing algorithms that
    can help in building object recognition systems. Here is a list of some of the
    important algorithms and the papers on object detection:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此图显示了对象检测算法的输出，该算法正在检测一些对象，如一只美丽的狗和猫。就像有现成的图像分类算法一样，有许多令人惊奇的算法可以帮助构建物体识别系统。以下是一些重要的算法和物体检测的论文列表：
- en: '**Single shot multibox detector** (**SSD**): [https://arxiv.org/abs/1512.02325](https://arxiv.org/abs/1512.02325)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单次多框检测器** (**SSD**): [https://arxiv.org/abs/1512.02325](https://arxiv.org/abs/1512.02325)'
- en: Faster RCNN: [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Faster RCNN: [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
- en: YOLO2: [https://arxiv.org/abs/1612.08242](https://arxiv.org/abs/1612.08242)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YOLO2: [https://arxiv.org/abs/1612.08242](https://arxiv.org/abs/1612.08242)
- en: Image segmentation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像分割
- en: 'Let''s assume you are reading this book from the terrace of a building. What
    do you see around you? Can you draw an outline of what you see? If you are a good
    artist, unlike me, then you would have probably drawn a couple of buildings, trees,
    birds, and a few more interesting things surrounding you. Image segmentation algorithms
    try to capture something similar. Given an image, they generate a prediction for
    each pixel, identifying which class each pixel belongs to. The following image
    shows what image segmentation algorithms identify:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在建筑物的露台上读这本书。你看到了什么？你能勾勒出你看到的东西吗？如果你是个好艺术家，不像我，那么你可能画了几栋建筑物、树木、鸟类以及周围更多有趣的东西的轮廓。图像分割算法试图捕捉类似的东西。给定一幅图像，它们为每个像素生成预测，识别每个像素属于哪个类别。以下图像显示了图像分割算法识别的内容：
- en: '![](img/dd2f326a-1ecb-4c66-a936-83b3b80248db.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd2f326a-1ecb-4c66-a936-83b3b80248db.png)'
- en: Output of an image segmentation algorithm
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图像分割算法的输出
- en: 'Some of the important algorithms that you may want to explore for image segmentation
    are given here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您可能想探索的一些重要图像分割算法：
- en: R-CNN: [https://arxiv.org/abs/1311.2524](https://arxiv.org/abs/1311.2524)
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: R-CNN: [https://arxiv.org/abs/1311.2524](https://arxiv.org/abs/1311.2524)
- en: Fast R-CNN: [https://arxiv.org/abs/1504.08083](https://arxiv.org/abs/1504.08083)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fast R-CNN: [https://arxiv.org/abs/1504.08083](https://arxiv.org/abs/1504.08083)
- en: Faster R-CNN: [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Faster R-CNN: [https://arxiv.org/abs/1506.01497](https://arxiv.org/abs/1506.01497)
- en: Mask R-CNN: [https://arxiv.org/abs/1703.06870](https://arxiv.org/abs/1703.06870)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mask R-CNN: [https://arxiv.org/abs/1703.06870](https://arxiv.org/abs/1703.06870)
- en: OpenNMT in PyTorch
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyTorch 中的 OpenNMT
- en: The **Open Source Neural Machine Translation** (**OpenNMT**) ([https://github.com/OpenNMT/OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py))
    project helps in building a lot of applications that are powered by the encoder-decoder
    architecture. Some of the applications that you can build are translation systems,
    text summarization, and image-to-text.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**开源神经机器翻译** (**OpenNMT**) ([https://github.com/OpenNMT/OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py))
    项目有助于构建许多由编码器-解码器架构驱动的应用程序。您可以构建的一些应用包括翻译系统、文本摘要和图像到文本的转换。'
- en: Allen NLP
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Allen NLP
- en: Allen NLP is an open source project built on PyTorch that enables us to do many
    NLP tasks much more easily. There is a demo page ([http://demo.allennlp.org/machinecomprehension](http://demo.allennlp.org/machinecomprehension))
    that you should look at to understand what you can build using Allen NLP.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Allen NLP 是基于 PyTorch 的开源项目，可以更轻松地完成许多 NLP 任务。有一个演示页面 ([http://demo.allennlp.org/machinecomprehension](http://demo.allennlp.org/machinecomprehension))，你应该看看以了解可以用
    Allen NLP 构建什么。
- en: fast.ai – making neural nets uncool again
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fast.ai – 再次让神经网络变得不那么酷
- en: One of my favorite places to learn about deep learning, and a great place of
    inspiration, is a MOOC, with the sole motive of making deep learning accessible
    to all, organized by two amazing mentors from `fast.ai` ([http://www.fast.ai/](http://www.fast.ai/)),
    Jeremy Howard and Rachel Thomas. For a new version of their course, they built
    an incredible framework ([https://github.com/fastai/fastai](https://github.com/fastai/fastai))
    on top of PyTorch, making it much easier and quicker to build applications. If
    you have not already started their course, I would strongly recommend you start
    it. Exploring how the `fast.ai` framework is built will give you great insight
    into many powerful techniques.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢了解深度学习的地方之一，也是灵感的伟大来源，是由两位来自`fast.ai`的出色导师Jeremy Howard和Rachel Thomas组织的一个MOOC，他们的唯一动机是使深度学习对所有人都可访问。为了他们课程的一个新版本，他们在PyTorch之上建立了一个令人难以置信的框架
    ([https://github.com/fastai/fastai](https://github.com/fastai/fastai))，使构建应用程序变得更加简单和快速。如果你还没有开始他们的课程，我强烈建议你开始。探索`fast.ai`框架的构建将为您提供许多强大技术的深入了解。
- en: Open neural network exchange
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开放神经网络交换
- en: '**Open neural network exchange** (**ONNX**) ([http://onnx.ai/](http://onnx.ai/))
    is the first step towards an open ecosystem that empowers you to choose the right
    tools as the project evolves. ONNX provides an open source format for deep learning
    models. It defines an extensible computation graph model as well as definitions
    of built-in operators and standard data types. Caffe2, PyTorch, Microsoft Cognitive
    Toolkit, Apache MXNet, and other tools are developing ONNX support. This project
    can help in product ionizing PyTorch models.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**开放神经网络交换** (**ONNX**) ([http://onnx.ai/](http://onnx.ai/)) 是通向开放生态系统的第一步，使您能够在项目发展中选择合适的工具。ONNX提供了深度学习模型的开源格式。它定义了可扩展的计算图模型以及内置运算符和标准数据类型的定义。Caffe2、PyTorch、Microsoft
    Cognitive Toolkit、Apache MXNet等工具正在开发ONNX支持。这个项目可以帮助产品化PyTorch模型。'
- en: How to keep yourself updated
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何保持自己的更新
- en: Social media platforms, particularly Twitter, help you to stay updated in the
    field. There are many people you can follow. If you are unsure of where to start,
    I would recommend following Jeremy Howard ([https://twitter.com/jeremyphoward](https://twitter.com/jeremyphoward))
    and any interesting people he may follow. By doing this, you will be forcing the
    Twitter recommendation system to work for you. Another important Twitter account
    you need to follow is PyTorch ([https://twitter.com/PyTorch](https://twitter.com/PyTorch)).
    The amazing people behind PyTorch have some great content being shared. If you
    are looking for research papers, then look at [http://www.arxiv-sanity.com/](http://www.arxiv-sanity.com/),
    where many smart researchers publish their papers. More great resources for learning
    about PyTorch are its tutorials ([http://pytorch.org/tutorials/](http://pytorch.org/tutorials/)),
    its source code ([https://github.com/pytorch/pytorch](https://github.com/pytorch/pytorch)),
    and its documentation ([http://pytorch.org/docs/0.3.0/](http://pytorch.org/docs/0.3.0/)[)](http://pytorch.org/docs/0.3.0/).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 社交媒体平台，特别是Twitter，帮助您在领域内保持更新。有许多人可以关注。如果你不确定从哪里开始，我建议你关注Jeremy Howard ([https://twitter.com/jeremyphoward](https://twitter.com/jeremyphoward))
    和他可能关注的任何有趣的人。通过这样做，你将促使Twitter的推荐系统为你工作。另一个需要关注的重要Twitter账号是PyTorch ([https://twitter.com/PyTorch](https://twitter.com/PyTorch))。PyTorch背后的出色人才有一些很棒的内容在分享。如果你正在寻找研究论文，那么请查看[http://www.arxiv-sanity.com/](http://www.arxiv-sanity.com/)，那里有许多聪明的研究人员发布他们的论文。关于PyTorch的更多学习资源包括其教程
    ([http://pytorch.org/tutorials/](http://pytorch.org/tutorials/))，其源代码 ([https://github.com/pytorch/pytorch](https://github.com/pytorch/pytorch))
    和其文档 ([http://pytorch.org/docs/0.3.0/](http://pytorch.org/docs/0.3.0/))。
- en: Summary
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: There is much more to deep learning and PyTorch. PyTorch is a relatively new
    framework, which, at the time of writing this chapter, is 3 years old. There is
    much more to learn and explore, so happy learning. All the best.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习和PyTorch还有很多值得探索的内容。PyTorch是一个相对较新的框架，在撰写本章节时已有3年历史。还有很多东西可以学习和探索，祝你学习愉快。一切顺利！
