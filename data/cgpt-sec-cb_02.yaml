- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Vulnerability Assessment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漏洞评估
- en: Building on the fundamental knowledge and skills established in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022),
    this chapter explores using ChatGPT and the OpenAI API to assist with and automate
    many vulnerability assessment tasks.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 建立在[*第1章*](B21091_01.xhtml#_idTextAnchor022)建立的基本知识和技能的基础上，本章将探讨使用ChatGPT和OpenAI
    API来帮助和自动化许多漏洞评估任务。
- en: Throughout this chapter, you’ll discover how to employ ChatGPT in creating vulnerability
    and threat assessment plans, a crucial part of any cybersecurity strategy. You’ll
    see how automating these processes using the OpenAI API and Python can offer even
    more efficiency, especially in environments with numerous network configurations
    or recurring planning needs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将发现如何使用ChatGPT来创建漏洞和威胁评估计划，这是任何网络安全策略的重要组成部分。您将看到如何使用OpenAI API和Python自动化这些过程，特别是在需要处理众多网络配置或经常性计划需求的环境中，这将提供更高的效率。
- en: Additionally, this chapter will delve into using ChatGPT in conjunction with
    the MITRE ATT&CK framework, a globally accessible knowledge base of adversary
    tactics and techniques. This fusion will enable you to generate detailed threat
    reports, providing valuable insights for threat analysis, attack vector assessment,
    and threat hunting.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本章还将深入研究将ChatGPT与MITRE ATT&CK框架结合使用，该框架是一个全球可访问的对手战术和技术知识库。这种融合将使您能够生成详细的威胁报告，为威胁分析、攻击向量评估和威胁猎捕提供有价值的见解。
- en: You’ll be introduced to the concept of **Generative Pre-training Transformer**
    (**GPT**)-assisted vulnerability scanning. This approach simplifies some of the
    complexity of vulnerability scanning, transforming natural language requests into
    accurate command strings that can be executed in **command-line interfaces** (**CLIs**).
    This methodology is not only a time-saver but also enhances accuracy and understanding
    in performing vulnerability scans.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您将介绍**生成预训练变换器**（**GPT**）辅助漏洞扫描的概念。这种方法简化了漏洞扫描的一些复杂性，将自然语言请求转换为可以在**命令行接口**（**CLIs**）中执行的准确命令字符串。这种方法不仅节省时间，而且在执行漏洞扫描时增加了准确性和理解力。
- en: Lastly, this chapter will tackle the challenge of analyzing large vulnerability
    assessment reports. Using the OpenAI API in conjunction with LangChain, a framework
    designed to enable language models to assist with complex tasks, you’ll see how
    large documents can be processed and understood, despite the current token limitations
    of ChatGPT.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，本章将解决分析大型漏洞评估报告的难题。使用OpenAI API与LangChain结合使用，LangChain是一个旨在使语言模型能够帮助解决复杂任务的框架，您将看到如何处理和理解大型文档，尽管ChatGPT目前存在令牌限制。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Creating Vulnerability Assessment Plans
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建漏洞评估计划
- en: Threat Assessment using ChatGPT and the MITRE ATT&CK framework
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ChatGPT和MITRE ATT&CK框架进行威胁评估
- en: GPT-Assisted Vulnerability Scanning
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用GPT辅助进行漏洞扫描
- en: Analyzing Vulnerability Assessment Reports using LangChain
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LangChain分析漏洞评估报告
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need a **web browser** and a stable **internet connection**
    to access the ChatGPT platform and set up your account. You will also need to
    have your OpenAI account set up and have obtained your API key. If not, revisit
    [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022) for details. Basic familiarity
    with the Python programming language and working with the command line is necessary,
    as you’ll be using **Python 3.x**, which needs to be installed on your system,
    for working with the OpenAI GPT API and creating Python scripts. A **code editor**
    will also be essential for writing and editing Python code and prompt files as
    you work through the recipes in this chapter.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您将需要一个稳定的**网络浏览器**和**互联网连接**来访问ChatGPT平台并设置您的账户。您还需要设置您的OpenAI账户并获得您的API密钥。如果没有，请查看[*第1章*](B21091_01.xhtml#_idTextAnchor022)获取详细信息。由于您将使用**Python
    3.x**来使用OpenAI GPT API和创建Python脚本，所以基本熟悉Python编程语言和工作命令行是必要的。一个**代码编辑器**也是编写和编辑Python代码和提示文件的必要工具，因为您将通过本章中的配方逐步完成这些工作。
- en: 'The code files for this chapter can be found here: [https://github.com/PacktPublishing/ChatGPT-for-Cybersecurity-Cookbook](https://github.com/PacktPublishing/ChatGPT-for-Cybersecurity-Cookbook).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在此处找到：[https://github.com/PacktPublishing/ChatGPT-for-Cybersecurity-Cookbook](https://github.com/PacktPublishing/ChatGPT-for-Cybersecurity-Cookbook)。
- en: Creating Vulnerability Assessment Plans
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建漏洞评估计划
- en: In this recipe, you’ll learn how to harness the power of **ChatGPT** and the
    **OpenAI API** to **create comprehensive vulnerability assessment plans** using
    network, system, and business details as input. This recipe is invaluable for
    both cybersecurity students and beginners looking to familiarize themselves with
    proper methods and tools for vulnerability assessments, as well as experienced
    cybersecurity professionals aiming to save time on planning and documentation.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在此食谱中，您将学习如何利用**ChatGPT**和**OpenAI API**来使用网络、系统和业务细节创建全面的**漏洞评估计划**。此食谱对于既有网络安全专业学生和初学者尤其有价值，他们希望熟悉漏洞评估的适当方法和工具，也适用于有经验的网络安全专业人员，以节省在计划和文件记录上的时间。
- en: 'Building upon the skills acquired in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022),
    you will delve deeper into establishing the system role of a cybersecurity professional
    specializing in vulnerability assessments. You’ll learn how to craft effective
    prompts that generate well-formatted output using Markdown language. This recipe
    will also expand on the techniques explored in the *Enhancing Output with Templates
    (Application: Threat Report)* and *Formatting Output as a Table (Application:
    Security Controls Table)* recipes in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022),
    enabling you to design prompts that produce the desired output format.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 基于[*第1章*](B21091_01.xhtml#_idTextAnchor022)中所学到的技能，您将深入了解专门从事漏洞评估的网络安全专业人员的系统角色建立。您将学习如何使用Markdown语言制作有效的提示，生成格式良好的输出。此食谱还将扩展[*第1章*](B21091_01.xhtml#_idTextAnchor022)中探讨的*使用模板增强输出（应用：威胁报告）*以及*将输出格式化为表格（应用：安全控制表）*的技术，使您能够设计生成所需输出格式的提示。
- en: Finally, you’ll discover how to use the OpenAI API and **Python** to generate
    a vulnerability assessment plan, and then **export it as a Microsoft Word file**.
    This recipe will serve as a practical guide for creating detailed and efficient
    vulnerability assessment plans using ChatGPT and the OpenAI API.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您将了解如何使用OpenAI API和**Python**来生成漏洞评估计划，然后**将其导出为Microsoft Word文件**。此食谱将作为一个实用指南，教您如何使用ChatGPT和OpenAI
    API创建详细、高效的漏洞评估计划。
- en: Getting ready
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Before diving into the recipe, you should already have your OpenAI account
    set up and obtained your API key. If not, revisit [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for details. You will also need to be sure you have the following Python libraries
    installed:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行食谱之前，您应该已经设置好OpenAI账户并获得了API密钥。如果没有，可以返回[*第1章*](B21091_01.xhtml#_idTextAnchor022)了解详情。您还需要确保已安装以下Python库：
- en: '`python-docx`: This library will be used to generate Microsoft Word files.
    You can install it using the `pip install` `python-docx` command.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`python-docx`：将使用此库生成Microsoft Word文件。您可以使用 `pip install python-docx` 命令安装它。'
- en: '`tqdm`: This library will be used to display progress bars. You can install
    it using the `pip install` `tqdm` command.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`tqdm`：将使用此库显示进度条。您可以使用 `pip install tqdm` 命令安装它。'
- en: How to do it…
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 怎么做…
- en: 'In this section, we will walk you through the process of using ChatGPT to create
    a comprehensive vulnerability assessment plan tailored to a specific network and
    organization’s needs. By providing the necessary details and using the given system
    role and prompt, you will be able to generate a well-structured assessment plan:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将指导您使用ChatGPT创建针对特定网络和组织需求定制的全面漏洞评估计划的过程。通过提供必要的细节，并使用给定的系统角色和提示，您将能够生成结构良好的评估计划：
- en: Begin by logging in to your ChatGPT account and navigating to the ChatGPT web
    UI.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先登录到您的ChatGPT账户，然后导航到ChatGPT Web UI。
- en: Start a new conversation with ChatGPT by clicking the **New** **chat** button.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**新建** **聊天**按钮，与ChatGPT开始新对话。
- en: 'Enter the following prompt to establish a system role:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下提示以建立系统角色：
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Enter the following message text, but replace the placeholders in the `{ }`
    brackets with the appropriate data of your choice. You can either combine this
    prompt with the system role or enter it separately as follows:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下消息文本，但用 `{ }` 括号中的适当数据替换占位符。您可以将此提示与系统角色结合使用，也可以分开输入，如下所示：
- en: '[PRE1]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Hint
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: If you are performing this in the **OpenAI Playground**, it is advisable to
    use **Chat mode** and enter the role in the **System** window, and the prompt
    in the **User** **message** window.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在**OpenAI Playground**中进行此操作，建议使用**聊天模式**，在**系统**窗口中输入角色，在**用户** **消息**窗口中输入提示。
- en: '*Figure 2**.1* shows the system role and user prompt entered into the **OpenAI
    Playground**:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2**.1*展示了输入到**OpenAI Playground**的系统角色和用户提示：'
- en: '![Figure 2.1 – OpenAI Playground method](img/Figure_2.01_B21091.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 - OpenAI Playground方法](img/Figure_2.01_B21091.jpg)'
- en: Figure 2.1 – OpenAI Playground method
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 - OpenAI Playground方法
- en: Review the generated output from ChatGPT. If the output is satisfactory and
    meets the requirements, you can proceed to the next step. If not, you can either
    refine your prompt or rerun the conversation to generate a new output.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看ChatGPT生成的输出。如果输出满意并符合要求，您可以进入下一步。如果不符合，您可以修改提示或重新运行对话以生成新的输出。
- en: Once you have obtained the desired output, you can use the generated Markdown
    to create a well-structured vulnerability assessment plan in your preferred text
    editor or Markdown viewer.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您获得了期望的输出，您可以使用生成的Markdown在您喜欢的文本编辑器或Markdown查看器中创建一个结构良好的漏洞评估计划。
- en: '*Figure 2**.2* shows an example ChatGPT generation of a vulnerability assessment
    plan using Markdown language formatting:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*图2**.2*展示了使用Markdown语言格式的ChatGPT生成的漏洞评估计划示例:'
- en: '![Figure 2.2 – Example ChatGPT assessment plan output](img/Figure_2.02_B21091.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2 - ChatGPT评估计划输出示例](img/Figure_2.02_B21091.jpg)'
- en: Figure 2.2 – Example ChatGPT assessment plan output
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 - ChatGPT评估计划输出示例
- en: How it works…
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This GPT-assisted vulnerability assessment plan recipe leverages the sophistication
    of **natural language processing** (**NLP**) and **machine learning (ML) algorithms**
    to generate a comprehensive and detailed vulnerability assessment plan. By adopting
    a specific system role and an elaborate user request as a prompt, ChatGPT is able
    to customize its response to meet the requirements of a seasoned cybersecurity
    professional who is tasked with assessing an extensive network system.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个GPT辅助的漏洞评估计划配方利用了自然语言处理（NLP）和机器学习（ML）算法的复杂性，以生成一个全面且详细的漏洞评估计划。通过采用特定的系统角色和详细的用户请求作为提示，ChatGPT能够定制其响应以满足被委托评估广泛网络系统的资深网络安全专业人士的要求。
- en: 'Here’s a closer look at how this process works:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更近距离地看看这个过程是如何运作的：
- en: '**System role and detailed prompt**: The system role designates ChatGPT as
    a seasoned cybersecurity professional specializing in vulnerability assessment.
    The prompt, which serves as the user request, is detailed and outlines the specifics
    of the assessment plan, from the size of the network and types of devices to the
    required compliance and the expected deliverables. These inputs provide context
    and guide ChatGPT’s response, ensuring it is tailored to the complexities and
    requirements of the vulnerability assessment task.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统角色和详细提示**：系统角色指定ChatGPT为专门从事漏洞评估的资深网络安全专业人员。提示作为用户请求，具体阐述了评估计划的细节，从网络规模和设备类型到所需的合规性和预期的可交付成果。这些输入提供了上下文并指导ChatGPT的响应，确保其定制到漏洞评估任务的复杂性和要求。'
- en: '**NLP and ML**: NLP and ML form the bedrock of ChatGPT’s capabilities. It applies
    these technologies to understand the intricacies of the user request, learn from
    the patterns, and generate a well-structured vulnerability assessment plan that
    is detailed, specific, and actionable.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NLP和ML**：NLP和ML构成了ChatGPT能力的基础。它应用这些技术来理解用户请求的复杂性，从模式中学习，并生成一个详细、具体和可行的漏洞评估计划。'
- en: '**Knowledge and language understanding capabilities**: ChatGPT uses its extensive
    knowledge base and language understanding capabilities to conform to industry-standard
    methodologies and best practices. This is particularly important in the rapidly
    evolving field of cybersecurity, ensuring that the resulting vulnerability assessment
    plan is up to date and adheres to recognized standards.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**知识和语言理解能力**：ChatGPT利用其广泛的知识库和语言理解能力来遵循行业标准的方法和最佳实践。这在不断发展的网络安全领域尤为重要，确保生成的漏洞评估计划是最新的并符合公认的标准。'
- en: '**Markdown language output**: The use of Markdown language output ensures that
    the plan is formatted in a consistent and easy-to-read manner. This format can
    be easily integrated into reports, presentations, and other formal documents,
    which is crucial when communicating the plan to IT departments, senior management,
    and external auditors or regulators.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Markdown语言输出**：使用Markdown语言输出可以确保计划以一致且易于阅读的方式进行格式化。这种格式可以轻松地整合到报告、演示文稿和其他正式文件中，在将计划传达给IT部门、高级管理人员和外部审计员或监管机构时至关重要。'
- en: '**Streamlining the assessment planning process**: The overall advantage of
    using this GPT-assisted vulnerability assessment plan recipe is that it streamlines
    the process of creating a comprehensive vulnerability assessment plan. You save
    time on planning and documentation and can generate a professional-grade assessment
    plan that aligns with industry standards and is tailored to the specific needs
    of your organization.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简化评估计划过程**：使用这个GPT辅助的漏洞评估计划配方的整体优势在于它简化了创建全面漏洞评估计划的过程。您节省了规划和文档编制的时间，并可以生成符合行业标准并根据您组织特定需求定制的专业级评估计划。'
- en: By applying these detailed inputs, you transform ChatGPT into a potential tool
    that can assist in creating a comprehensive, tailored vulnerability assessment
    plan. This not only bolsters your cybersecurity efforts but also ensures your
    resources are utilized effectively in protecting your network systems.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用这些详细的输入，您可以将ChatGPT转化为一个潜在的工具，以协助创建全面、定制的漏洞评估计划。这不仅增强了您的网络安全工作，还确保您有效利用资源来保护网络系统。
- en: There’s more…
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: In addition to using ChatGPT to generate a vulnerability assessment plan, you
    can also use the OpenAI API and Python to automate the process. This approach
    is particularly useful when you have a large number of network configurations
    to assess or when you need to generate plans on a recurring basis.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用ChatGPT生成漏洞评估计划外，您还可以使用OpenAI API和Python来自动化该过程。当您需要评估大量网络配置或需要定期生成计划时，这种方法特别有用。
- en: The Python script we will present here reads input data from a text file and
    uses it to fill in the placeholders in the prompt. The resulting Markdown output
    can then be used to create a well-structured vulnerability assessment plan.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里介绍的Python脚本从文本文件中读取输入数据，并将其用于填充提示中的占位符。然后，生成的Markdown输出可用于创建结构良好的漏洞评估计划。
- en: 'While the process is similar to the ChatGPT version, the use of the OpenAI
    API provides additional flexibility and control over the generated content. Let’s
    dive into the steps involved in the OpenAI API version of the vulnerability assessment
    plan recipe:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然该过程与ChatGPT版本相似，但使用OpenAI API可以提供对生成内容的额外灵活性和控制。让我们深入了解OpenAI API版本的漏洞评估计划配方中涉及的步骤：
- en: 'Import the necessary libraries and set up the OpenAI API:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入必要的库并设置OpenAI API：
- en: '[PRE2]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this section, we import the necessary libraries, such as `openai`, `os`,
    `docx`, `tqdm`, `threading`, `time`, and `datetime`. We also set up the OpenAI
    API by providing the API key.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在本部分中，我们导入必要的库，如`openai`、`os`、`docx`、`tqdm`、`threading`、`time`和`datetime`。我们还通过提供API密钥来设置OpenAI
    API。
- en: 'Read user input data from a text file:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从文本文件中读取用户输入数据：
- en: '[PRE3]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, we define a `read_user_input_file` function that reads the user input
    data from a text file and stores it in a dictionary. We then call this function
    with the `assessment_data.txt` file to obtain the `user_data` dictionary.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们定义了一个`read_user_input_file`函数，用于从文本文件中读取用户输入数据并将其存储在字典中。然后，我们使用`assessment_data.txt`文件调用此功能以获得`user_data`字典。
- en: 'Generate a vulnerability assessment plan using the OpenAI API:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用OpenAI API生成漏洞评估计划：
- en: Important note
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The `…'` notation signifies that we will fill in this section of code in a later
    step.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`…''`注释表示我们将在稍后的步骤中填写此代码部分。'
- en: '[PRE4]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this code block, we define a `generate_report` function, which takes the
    user input data and calls the OpenAI API to generate the vulnerability assessment
    plan. The function returns the generated text.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码块中，我们定义了一个`generate_report`函数，该函数接受用户输入数据并调用OpenAI API来生成漏洞评估计划。该函数返回所生成的文本。
- en: 'Define the API messages:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义API消息：
- en: '[PRE5]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the conversation messages, we define two roles: `system` and `user`. The
    `system` role is used to set the context for the AI model, informing it that it’s
    a cybersecurity professional specializing in vulnerability assessment. The `user`
    role provides the instructions for the AI, which include generating a detailed
    vulnerability assessment plan based on industry standards, best practices, and
    user-supplied data.'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在对话消息中，我们定义了两个角色：`system`和`user`。`system`角色用于为AI模型设置上下文，告知其是一位专门从事漏洞评估的网络安全专业人员。`user`角色为AI提供指令，包括基于行业标准、最佳实践和用户提供的数据生成详细的漏洞评估计划。
- en: The `system` role helps set the stage for the AI, while the `user` role guides
    the AI in its content generation. This approach follows a similar pattern to the
    ChatGPT UI section we discussed earlier, where we provided an initial message
    to the AI to set the context.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`system` 角色有助于为 AI 设置舞台，而 `user` 角色则指导 AI 进行内容生成。这种方法遵循我们之前讨论的 ChatGPT UI 部分类似的模式，在那里我们向
    AI 提供了一个初始消息来设置上下文。'
- en: For more information on sending API requests and handling responses, please
    refer to the *Sending API Requests and Handling Responses with Python* recipe
    in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022). This recipe provides a deeper
    understanding of interacting with the OpenAI API, including how to structure requests
    and process the generated content.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解有关发送 API 请求和处理响应的更多信息，请参阅 [*第 1 章*](B21091_01.xhtml#_idTextAnchor022) 中的
    *使用 Python 发送 API 请求和处理响应* 配方。该配方提供了与 OpenAI API 交互的更深入理解，包括如何构建请求和处理生成的内容。
- en: 'Convert the generated Markdown text to a Word document:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将生成的 Markdown 文本转换为 Word 文档：
- en: '[PRE6]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `markdown_to_docx` function converts the generated Markdown text to a Word
    document. It iterates through the lines of the Markdown text, adding headings
    and paragraphs based on the Markdown formatting, and saves the resulting Word
    document.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`markdown_to_docx` 函数将生成的 Markdown 文本转换为 Word 文档。它遍历 Markdown 文本的各行，根据 Markdown
    格式添加标题和段落，并保存生成的 Word 文档。'
- en: 'Display the elapsed time while waiting for the API call:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在等待 API 调用完成时显示经过时间：
- en: '[PRE7]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `display_elapsed_time` function is used to display the elapsed time while
    waiting for the API call to complete. It uses a loop to print the elapsed time
    in seconds.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`display_elapsed_time` 函数用于在等待 API 调用完成时显示经过时间。它使用循环打印经过的秒数。'
- en: 'Write the main function:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写主函数：
- en: '[PRE8]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the main part of the script, we start by defining an `assessment_name` function
    based on the current date and time. We then use threading to display the elapsed
    time while making the API call. The script calls the `generate_report` function
    with the user data as arguments, and upon successful completion, it saves the
    generated report as a Word document using the `markdown_to_docx` function. The
    progress is displayed using the `tqdm` library. If any errors occur during the
    API call or report generation, they are displayed to the user.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在脚本的主要部分中，我们首先根据当前日期和时间定义一个 `assessment_name` 函数。然后我们使用线程来显示调用 API 时的经过时间。脚本使用用户数据调用
    `generate_report` 函数，并在成功完成后使用 `markdown_to_docx` 函数将生成的报告保存为 Word 文档。进度使用 `tqdm`
    库进行显示。如果在 API 调用或报告生成过程中发生任何错误，它们将显示给用户。
- en: Hint
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You can swap out the **chat-3.5-turbo** model with the **GPT-4** model, if you
    are a ChatGPT Plus subscriber, for often improved results. In fact, GPT-4 is capable
    of generating a much longer and more detailed generation and/or document. Just
    keep in mind that the GPT-4 model is a bit more expensive than the chat-3.5-turbo
    model.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是 ChatGPT Plus 订阅者，可以将 **chat-3.5-turbo** 模型替换为 **GPT-4** 模型，以获得通常改进的结果。事实上，GPT-4
    能够生成更长更详细的生成和/或文档。只需记住，GPT-4 模型比 chat-3.5-turbo 模型稍微昂贵一些。
- en: 'Here is how the completed script should look:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完成的脚本应该如何看起来：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This script automates the process of generating a vulnerability assessment plan
    by using the OpenAI API in conjunction with Python. It starts by importing the
    necessary libraries and setting up the OpenAI API. It then reads user input data
    from a text file (the file path is stored as a `user_data_file` string) and then
    stores this data in a dictionary for easy access.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本通过结合使用 OpenAI API 和 Python 自动化生成漏洞评估计划的流程。它首先导入必要的库并设置 OpenAI API。然后从文本文件中读取用户输入数据（文件路径存储为
    `user_data_file` 字符串），然后将此数据存储在字典中以便轻松访问。
- en: The core of the script is the function that generates the vulnerability assessment
    plan. It leverages the OpenAI API to create a detailed report based on the user
    input data. The conversation with the API is formatted with both `system` and
    `user` roles to guide the generation process effectively.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的核心是生成漏洞评估计划的函数。它利用 OpenAI API 基于用户输入数据创建详细报告。与 API 的对话以 `system` 和 `user`
    角色的格式进行，以有效地指导生成过程。
- en: Once the report is generated, it is converted from Markdown text to a Word document,
    providing a well-structured, readable output. To provide user feedback during
    the process, the script includes a function that displays the elapsed time while
    the API call is being made.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦报告生成，它就会从Markdown文本转换为Word文档，提供结构良好、易读的输出。为了在过程中提供用户反馈，脚本包括一个在进行API调用时显示经过时间的函数。
- en: Finally, the script’s main function ties everything together. It initiates the
    process of generating the report using the OpenAI API, shows the elapsed time
    during the API call, and finally, converts the generated report to a Word document.
    If any errors occur during the API call or the document generation, they are handled
    and displayed to the user.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，脚本的主函数将所有内容联系在一起。它启动使用OpenAI API生成报告的过程，在API调用期间显示经过时间，并最终将生成的报告转换为Word文档。如果在API调用或文档生成过程中发生任何错误，都会进行处理并向用户显示。
- en: Threat Assessment using ChatGPT and the MITRE ATT&CK framework
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ChatGPT和MITRE ATT&CK框架进行威胁评估
- en: In this recipe, you will learn how to leverage **ChatGPT** and the **OpenAI
    API** to conduct a threat assessment by providing a threat, attack, or campaign
    name. By combining the power of ChatGPT with the **MITRE ATT&CK** framework, you
    will be able to generate detailed threat reports, **tactics, techniques, and procedures**
    (**TTPs**) mappings, and associated **indicators of compromise** (**IoCs**). This
    information will enable cybersecurity professionals to analyze attack vectors
    in their environment and extend their capabilities into threat hunting.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，你将学习如何利用**ChatGPT**和**OpenAI API**来通过提供威胁、攻击或活动名称进行威胁评估。通过将ChatGPT的能力与**MITRE
    ATT&CK**框架相结合，你将能够生成详细的威胁报告、**战术、技术和程序**（**TTPs**）映射，以及相关的**威胁指标**（**IoCs**）。这些信息将使网络安全专业人员能够分析其环境中的攻击向量，并将其能力扩展到威胁猎捕。
- en: Building upon the skills acquired in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022),
    this recipe will guide you through establishing the system role of a cybersecurity
    analyst and engineering effective prompts that generate well-formatted output,
    including tables. You will learn how to design prompts to obtain the desired output
    from ChatGPT using both the ChatGPT web UI and a Python script. Additionally,
    you will learn how to use the OpenAI API to generate a comprehensive threat report
    in a Microsoft Word file format.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 基于在[*第1章*](B21091_01.xhtml#_idTextAnchor022)中获得的技能，本步骤将引导你建立网络安全分析员的系统角色，并设计能够生成格式良好的输出（包括表格）的有效提示。你将学习如何设计提示以从ChatGPT中获取所需的输出，包括使用ChatGPT
    Web UI和Python脚本。此外，你还将学习如何使用OpenAI API生成Microsoft Word文件格式的综合威胁报告。
- en: Getting ready
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Before diving into the recipe, you should already have your OpenAI account
    set up and obtained your API key. If not, revisit [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for details. You will also need to do the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在着手执行该步骤之前，你应该已经设置好了你的OpenAI账户并获取了你的API密钥。如果没有，请返回[*第1章*](B21091_01.xhtml#_idTextAnchor022)查看详情。你还需要执行以下操作：
- en: '`python-docx` library installed in your Python environment, as it will be used
    to generate Microsoft Word files. You can install it using the `pip install` `python-docx`
    command.'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请确保在你的Python环境中安装了`python-docx`库，因为它将用于生成Microsoft Word文件。你可以使用`pip install`
    `python-docx`命令来安装它。
- en: '**Familiarize yourself with the MITRE ATT&CK framework**: To make the most
    of this recipe, it’s helpful to have a basic understanding of the MITRE ATT&CK
    framework. Visit [https://attack.mitre.org/](https://attack.mitre.org/) for more
    information and resources.'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**熟悉MITRE ATT&CK框架**：要充分利用这个步骤，了解MITRE ATT&CK框架的基本知识是有帮助的。访问[https://attack.mitre.org/](https://attack.mitre.org/)获取更多信息和资源。'
- en: '**List sample threats**: Prepare a list of sample threat names, attack campaigns,
    or adversary groups to use as examples while working through the recipe.'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**列举样本威胁**：准备一个示例威胁名称、攻击活动或对手组织的列表，以便在执行该步骤时作为示例使用。'
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'By following these steps, you can successfully utilize ChatGPT to generate
    a TTP-based threat report using the MITRE ATT&CK framework and proper Markdown
    formatting. We will be specifying the name of a threat and applying prompt engineering
    techniques. ChatGPT will then generate a well-formatted report with valuable insights
    that can assist you in threat analysis, attack vector assessment, and even in
    gathering IoCs for threat hunting:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循以下步骤，您可以成功地利用 ChatGPT 利用 MITRE ATT&CK 框架和适当的 Markdown 格式生成基于 TTP 的威胁报告。我们将指定威胁的名称并应用提示工程技术。然后，ChatGPT
    将生成一个格式良好的报告，其中包含有价值的见解，可帮助您进行威胁分析、攻击向量评估，甚至为威胁猎杀收集 IoC：
- en: Begin by logging in to your ChatGPT account and navigating to the ChatGPT web
    UI.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您的 ChatGPT 帐户并导航到 ChatGPT web UI。
- en: Start a new conversation with ChatGPT by clicking the **New** **chat** button.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新对话**按钮与 ChatGPT 开启新的对话。
- en: 'Enter the following prompt to establish a system role:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下提示以建立一个系统角色：
- en: '[PRE10]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Replace `{threat_name}` in the user prompt below with the threat name of your
    choice (in our example, we will use **WannaCry**). You can either combine this
    prompt with the system role or enter it separately:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下面的用户提示中用您选择的威胁名称（在我们的示例中，我们将使用**WannaCry**）替换 `{threat_name}`。您可以将此提示与系统角色结合使用，也可以单独输入它：
- en: '[PRE11]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Hint
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Just as with the previous recipe, you can perform this in the **OpenAI Playground**
    and use **Chat mode** to enter the role in the **System** window, and the prompt
    in the **User** **message** window.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 就像之前的配方一样，您可以在 **OpenAI Playground** 中执行此操作，并使用 **Chat mode** 输入在 **System**
    窗口中的角色，并在 **User** **message** 窗口中输入提示。
- en: '*Figure 2**.3* shows the system role and user prompt entered into the **OpenAI
    Playground**:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2**.3* 显示了输入到 **OpenAI Playground** 的系统角色和用户提示：'
- en: '![Figure 2.3 – OpenAI Playground method](img/Figure_2.03_B21091.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – OpenAI Playground 方法](img/Figure_2.03_B21091.jpg)'
- en: Figure 2.3 – OpenAI Playground method
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – OpenAI Playground 方法
- en: After entering the appropriate system role and user prompt, press *Enter*.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入适当的系统角色和用户提示后，按 *Enter*。
- en: ChatGPT will process the prompt and generate a formatted threat report with
    Markdown language formatting, headings, bold keywords, tables, and other elements
    specified in the prompt.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ChatGPT 将处理提示并生成带有 Markdown 语言格式、标题、粗体关键字、表格和其他指定提示中的元素的格式化威胁报告。
- en: '*Figure 2**.4* and *Figure 2**.5* illustrate an example ChatGPT generation
    of a threat report using Markdown language formatting with a table:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 2**.4* 和 *图 2**.5* 用 Markdown 语言格式化的表格显示了 ChatGPT 生成威胁报告的示例：'
- en: '![Figure 2.4 – ChatGPT threat report narrative output](img/Figure_2.04_B21091.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – ChatGPT 威胁报告叙述输出](img/Figure_2.04_B21091.jpg)'
- en: Figure 2.4 – ChatGPT threat report narrative output
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – ChatGPT 威胁报告叙述输出
- en: '![Figure 2.5 – ChatGPT threat report table output](img/Figure_2.05_B21091.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – ChatGPT 威胁报告表输出](img/Figure_2.05_B21091.jpg)'
- en: Figure 2.5 – ChatGPT threat report table output
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – ChatGPT 威胁报告表输出
- en: Review the generated report to ensure it contains the desired information and
    formatting. If necessary, adjust your user prompt and resubmit it to improve the
    output.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看生成的报告，确保其包含所需的信息和格式。如有必要，调整您的用户提示并重新提交以改善输出。
- en: Hint
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Sometimes, ChatGPT will stop generating before it has completed the entire out.
    This is due to the token limit of the model being used. In such cases, you can
    click on the **Continue** **Generating** button.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，ChatGPT 在生成完整输出之前会停止生成。这是由于所使用的模型的令牌限制造成的。在这种情况下，您可以点击**继续生成**按钮。
- en: How it works…
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'Just as we did in the *Applying ChatGPT Roles (Application: AI CISO)* recipe
    in[*Chapter 1*](B21091_01.xhtml#_idTextAnchor022), when you assign a role to ChatGPT,
    you provide a specific context or persona for the model to work with. This helps
    the model generate responses that are tailored to the given role, resulting in
    more accurate, relevant, and detailed content. The model will generate content
    that aligns with the expertise and perspective of the assigned role, offering
    better insights, opinions, or recommendations.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在*应用 ChatGPT 角色（应用：AI CISO）*配方中所做的那样[*第 1 章*](B21091_01.xhtml#_idTextAnchor022)，当您为
    ChatGPT 分配一个角色时，您为模型提供一个特定的上下文或角色。这有助于模型生成与所分配角色相匹配的响应，从而产生更准确、相关和详细的内容。模型将生成与所分配角色的专业知识和观点相一致的内容，提供更好的见解、意见或建议。
- en: When we provide a threat name and direct ChatGPT to reference the MITRE ATT&CK
    framework, we are able to leverage its massive dataset, which includes detailed
    information about threats and the MITRE ATT&CK framework. As a result, it is able
    to correlate the two and quickly give us the relevant threat information as it
    pertains to the TTPs identified in the framework.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们提供威胁名称并指示 ChatGPT 引用 MITRE ATT&CK 框架时，我们能够利用其庞大的数据集，其中包括关于威胁和 MITRE ATT&CK
    框架的详细信息。因此，它能够将两者相关联，并快速为我们提供与框架中识别的 TTP 相关的威胁信息。
- en: Important note
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When using the current version of ChatGPT and the OpenAI API as of the time
    of this writing, the dataset is only trained up through September 2021\. Therefore,
    it will not have knowledge of any threat data after that. However, we will cover
    techniques later in this book on how to use the API and Python to feed recent
    data into the request.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用当前版本的 ChatGPT 和 OpenAI API 至本文撰写时，数据集仅训练至 2021 年 9 月。因此，它不会了解此后的任何威胁数据。但是，本书后面会介绍如何使用
    API 和 Python 将最新数据输入到请求中的技术。
- en: 'By providing a clear template for the output in your prompt, you guide ChatGPT
    to generate responses that adhere to the specified structure and formatting. This
    helps ensure that the generated content is consistent, well organized, and suitable
    for use in reports, presentations, or other formal documents. The model will focus
    on generating content that matches the formatting and structure you’ve provided
    while still delivering the information you requested. See the *Enhancing Output
    with Templates (Application: Threat Report)* and *Formatting Output as a Table
    (Application: Security Controls Table)* recipes in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for further details.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在提示中提供清晰的输出模板，你可以引导 ChatGPT 生成符合指定结构和格式的响应。这有助于确保生成的内容一致、组织良好，并适合用于报告、演示文稿或其他正式文件中。模型将专注于生成符合你提供的格式和结构的内容，同时仍然提供你请求的信息。有关更多详细信息，请参阅[*第一章*](B21091_01.xhtml#_idTextAnchor022)中的
    *使用模板增强输出（应用：威胁报告）* 和 *将输出格式化为表格（应用：安全控制表）* 小节。
- en: There’s more…
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: 'You can extend the power and flexibility of this recipe by using the OpenAI
    API with a Python script to generate a threat report, similar to the one created
    in the ChatGPT web UI. Here’s how you do it:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 Python 脚本结合 OpenAI API 生成威胁报告，你可以扩展此方法的能力和灵活性，类似于在 ChatGPT web UI 中创建的报告。以下是操作步骤：
- en: 'Start by importing the necessary libraries:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从导入所需库开始：
- en: '[PRE12]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Set up the OpenAI API the same as we did in the *Setting the OpenAI API key
    as an Environment Variable* recipe in [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022):'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[*第一章*](B21091_01.xhtml#_idTextAnchor022)的*将 OpenAI API 密钥设置为环境变量*小节中，设置 OpenAI
    API，方法与我们之前相同：
- en: '[PRE13]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a function to generate a report using the OpenAI API:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个使用 OpenAI API 生成报告的函数：
- en: '[PRE14]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This function takes a threat name as input and sends it as part of a prompt
    to the OpenAI API. It returns the generated text from the API response.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数以威胁名称作为输入，并将其作为提示的一部分发送到 OpenAI API。它返回 API 响应中生成的文本。
- en: 'Create a function to convert the generated text, which is in Markdown format,
    to a Microsoft Word document:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数来将生成的 Markdown 格式文本转换为 Microsoft Word 文档：
- en: '[PRE15]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This function takes the generated text in Markdown format and an output filename.
    It parses the Markdown text and creates a Word document with the appropriate formatting.
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数接受 Markdown 格式的生成文本和输出文件名作为参数。它解析 Markdown 文本并创建具有适当格式的 Word 文档。
- en: 'Create a function to extract tables from the Markdown text:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数来从 Markdown 文本中提取表格：
- en: '[PRE16]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This function iterates through the Markdown text and extracts any tables it
    finds.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数迭代 Markdown 文本并提取其中找到的任何表格。
- en: 'Create a function to display the elapsed time while waiting for the API call:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数来显示等待 API 调用的经过时间：
- en: '[PRE17]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This function shows the elapsed time in seconds while waiting for the API call
    to complete.
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数在等待 API 调用完成时显示经过的秒数。
- en: 'Get the threat name from user input:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从用户输入中获取威胁名称：
- en: '[PRE18]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Start a separate thread to display the elapsed time while making the API call:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动一个单独的线程来显示进行 API 调用时经过的时间：
- en: '[PRE19]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Make the API call and handle exceptions:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行 API 调用并处理异常：
- en: '[PRE20]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Save the generated report as a Word document:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将生成的报告保存为 Word 文档：
- en: '[PRE21]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Generate the report and handle exceptions:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成报告并处理异常：
- en: '[PRE22]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Here is how the completed script should look:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完成的脚本应该看起来的样子：
- en: '[PRE23]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This script uses the **OpenAI API** to generate a cyber threat report as a **Microsoft**
    **Word document**.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本使用**OpenAI API**生成网络威胁报告，格式为**Microsoft** **Word文档**。
- en: The crux of this script lies in several key functions. The first function, `generate_report()`,
    takes in a cyber threat name and uses it as a prompt for the OpenAI API. It returns
    the generated text from the API response. This text is in Markdown format and
    is subsequently transformed into a Microsoft Word document by the `markdown_to_docx()`
    function.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本的关键在于几个关键函数。第一个函数，`generate_report()`，接收一个网络威胁名称，并将其用作OpenAI API的提示。它返回API响应中生成的文本。此文本采用Markdown格式，然后由`markdown_to_docx()`函数转换为Microsoft
    Word文档。
- en: This function parses through the Markdown text line by line, creating tables
    and headings as required, and finally saves it as a Word document. In parallel,
    there is an `extract_tables()` function that is designed to locate and extract
    any tables present within the Markdown text.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数逐行解析Markdown文本，根据需要创建表格和标题，最终将其保存为Word文档。同时，还有一个`extract_tables()`函数，用于定位和提取Markdown文本中的任何表格。
- en: 'To enhance the user experience, the `display_elapsed_time()` function is incorporated.
    This function tracks and displays the time taken for the API call to complete.
    It runs in a separate thread, initiated before making the API call:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增强用户体验，`display_elapsed_time()`函数被整合进来。此函数跟踪并显示API调用完成所花费的时间。在进行API调用之前，它在一个单独的线程中运行：
- en: '![Figure 2.6 – Example output of the display_elapsed_time function](img/Figure_2.06_B21091.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6 – display_elapsed_time函数示例输出](img/Figure_2.06_B21091.jpg)'
- en: Figure 2.6 – Example output of the display_elapsed_time function
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6 – display_elapsed_time函数示例输出
- en: The API call itself, as well as the report generation, are wrapped in `try`-`except`
    blocks to handle any potential exceptions. Once the report is generated, it is
    saved as a Word document, with the filename based on the user-inputted cyber threat
    name.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: API调用本身以及报告生成都包含在`try`-`except`块中，以处理任何潜在的异常。一旦报告生成完成，它将以用户输入的网络威胁名称为基础的文件名保存为Word文档。
- en: Upon successful execution of this script, a detailed threat report in Word document
    format is produced, mimicking the output generated by the ChatGPT web UI. This
    recipe demonstrates how the OpenAI API can be adapted within a Python script to
    automate the generation of comprehensive reports.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此脚本成功后，将生成一个详细的威胁报告，格式为Word文档，模仿ChatGPT Web UI 生成的输出。这个示例展示了如何在Python脚本中使用OpenAI
    API，自动化生成综合报告的过程。
- en: Hint
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You can swap out the **chat-3.5-turbo** model with the **GPT-4** model, if you
    are a ChatGPT Plus subscriber, for often improved results. Just keep in mind that
    the GPT-4 model is a bit more expensive than the chat-3.5-turbo model.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是ChatGPT Plus的订阅用户，可以将**chat-3.5-turbo**模型替换为**GPT-4**模型，通常会获得更好的结果。只需记住，GPT-4模型比chat-3.5-turbo模型稍微昂贵一些。
- en: You can also improve accuracy and get a more consistent output by lowering the
    `temperature` value.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 通过降低`temperature`值，还可以提高准确性并获得更一致的输出。
- en: GPT-Assisted Vulnerability Scanning
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ChatGPT辅助漏洞扫描
- en: '**Vulnerability scanning** plays a crucial role in identifying and remediating
    weaknesses before they can be exploited by malicious actors. The tools we use
    to conduct these scans, such as **NMAP**, **OpenVAS**, or **Nessus**, offer robust
    functionality but can often be complex and challenging to navigate, especially
    for those new to the field or unfamiliar with their advanced options.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**漏洞扫描**在识别和消除漏洞之前被恶意行为者利用的过程中起着至关重要的作用。我们用于进行这些扫描的工具，如**NMAP**、**OpenVAS**或**Nessus**，提供了强大的功能，但通常会复杂且难以导航，特别是对于新手或不熟悉其高级选项的人来说。'
- en: This is where our recipe comes into play. It leverages the power of ChatGPT
    to streamline the process of generating command strings for these tools based
    on user input. With this recipe, you will be able to create precise command strings
    that can be directly copied and pasted into a CLI to initiate a vulnerability
    scan, provided the respective tool is installed.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们示例发挥作用的地方。它利用ChatGPT的功能简化了根据用户输入为这些工具生成命令字符串的过程。通过此示例，您将能够创建精确的命令字符串，可以直接复制并粘贴到CLI中以启动漏洞扫描，前提是已安装了相应的工具。
- en: This recipe is not just about saving time; it’s about enhancing accuracy, understanding,
    and effectiveness. It is beneficial for those learning vulnerability assessments,
    those who are new to these tools, and even seasoned professionals who need a quick
    reference to ensure their command options are correct. It is especially useful
    when dealing with advanced options, such as parsing the output or outputting results
    to files or other formats.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方不仅仅是为了节省时间；它还能增强准确性、理解力和效果。这对于学习漏洞评估、对这些工具尚不熟悉的人以及需要快速参考以确保命令选项正确的经验丰富的专业人士都是有益的。当涉及到高级选项时，例如解析输出或将结果输出到文件或其他格式时，这非常有用。
- en: By the end of this recipe, you will be able to generate precise command strings
    for NMAP, OpenVAS, or Nessus, helping you navigate their functionalities with
    ease and confidence. Whether you are a cybersecurity beginner or a seasoned expert,
    this recipe will serve as a valuable tool in your vulnerability assessment arsenal.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成这个配方时，您将能够为NMAP、OpenVAS或Nessus生成精确的命令字符串，帮助您轻松自信地使用它们的功能。无论您是网络安全初学者还是经验丰富的专家，这个配方都将成为您漏洞评估工具库中宝贵的工具。
- en: Getting ready
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Before we begin this recipe, it’s essential to ensure that you have properly
    set up your OpenAI account and obtained your API key. If this hasn’t been done
    yet, you can refer back to [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022) for
    detailed instructions. Additionally, you will require the following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始这个配方之前，确保您已经正确设置了您的OpenAI账户并获得了您的API密钥是很重要的。如果还没有完成这一步，您可以查看[*第1章*](B21091_01.xhtml#_idTextAnchor022)中的详细说明。另外，您将需要以下内容：
- en: '**Vulnerability scanning tools**: It’s crucial to have NMAP, OpenVAS, or Nessus
    installed on your system as the recipe generates command strings for these specific
    tools. Please refer to their official documentation for installation and setup
    guidelines.'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**漏洞扫描工具**：对于这些特定工具而言，安装NMAP、OpenVAS或Nessus非常重要，因为该配方生成针对这些特定工具的命令字符串。请参考它们的官方文档以获取安装和设置指南。'
- en: '**Basic understanding of the tools**: The more familiar you are with NMAP,
    OpenVAS, or Nessus, the better you will be able to utilize this recipe. If you’re
    new to these tools, consider spending some time understanding their basic functionalities
    and command-line options.'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基本工具的理解**：您对NMAP、OpenVAS或Nessus越熟悉，就越能够更好地利用这个配方。如果您对这些工具还不熟悉，考虑花些时间了解它们的基本功能和命令行选项。'
- en: '**Command-line environment**: As the recipe generates command strings intended
    for CLIs, you should have access to a suitable command-line environment where
    you can run these commands. This could be a terminal in Unix/Linux systems or
    Command Prompt or PowerShell in Windows.'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**命令行环境**：由于该配方生成供CLI使用的命令字符串，您应该能够访问一个适合的命令行环境，您可以在其中运行这些命令。这可以是Unix/Linux系统中的终端，也可以是Windows中的命令提示符或PowerShell。'
- en: '**Sample network configuration data**: Prepare some sample network data that
    the vulnerability scanning tools can use. This could include IP addresses, hostnames,
    or other relevant information about the systems you’d like to scan.'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**样本网络配置数据**：准备一些样本网络数据，供漏洞扫描工具使用。这可能包括IP地址、主机名或关于您想要扫描的系统的其他相关信息。'
- en: How to do it…
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'In this recipe, we’ll show you how to use ChatGPT to create command strings
    for vulnerability scanning tools such as NMAP, OpenVAS, and Nessus. We’ll be providing
    ChatGPT with the necessary details and using a specific system role and prompt.
    This will allow you to generate the simplest form of the command necessary to
    complete your request:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将向您展示如何使用ChatGPT创建用于漏洞扫描工具（如NMAP、OpenVAS和Nessus）的命令字符串。我们将向ChatGPT提供必要的细节，并使用特定的系统角色和提示。这将使您能够生成完成您请求所需的命令的最简单形式：
- en: Start by logging in to your OpenAI account and go to the ChatGPT web UI.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先登录到您的OpenAI帐户，然后转到ChatGPT Web UI。
- en: Begin a new conversation with ChatGPT by clicking on the **New** **chat** button.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**New** **chat**按钮开始与ChatGPT进行新的对话。
- en: 'Next, establish the system’s role by entering the following:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过输入以下内容来确定系统的角色：
- en: '[PRE24]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Important note
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Just as in the *Creating Vulnerability Assessment Plans* recipe, you can enter
    the role separately using the **OpenAI Playground**, or you can combine it as
    a single prompt in ChatGPT.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在*创建漏洞评估计划*配方中一样，您可以在**OpenAI Playground**中单独输入角色，或者将其合并为ChatGPT中的单个提示。
- en: 'Now, prepare your request. This is the information that will replace the `{user_input}`
    placeholder in the next step. It should be a natural language request such as
    the following:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，准备好您的请求。这是将在下一步中替换`{user_input}`占位符的信息。它应该是一个自然语言请求，例如以下内容：
- en: '[PRE25]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Once your request is ready, enter the following message text, replacing the
    `{user_input}` placeholder with your specific request from the previous step:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您的请求准备好了，请输入以下消息文本，用前一步中的具体请求替换`{user_input}`占位符：
- en: '[PRE26]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: ChatGPT will then generate the command string based on your request. Review
    the output. If it meets your requirements, you can proceed to copy the command
    and use it as needed. If it doesn’t, you may need to refine your request and try
    again.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，ChatGPT将根据您的请求生成命令字符串。审查输出。如果符合您的要求，您可以继续复制命令并根据需要使用它。如果不符合，您可能需要优化您的请求并重试。
- en: Once you’ve obtained a satisfactory command, you can copy and paste it directly
    into your command line to perform the vulnerability scan as described in your
    request.
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦您获得了满意的命令，您可以直接将其复制并粘贴到命令行中，以执行您请求中描述的漏洞扫描。
- en: Important note
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Remember—it’s important to review and understand any command before running
    it in your environment. While ChatGPT aims to provide accurate commands, you are
    ultimately responsible for ensuring the command’s safety and appropriateness for
    your specific context.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 记住——在您的环境中运行任何命令之前，审查和理解任何命令都是很重要的。虽然ChatGPT的目标是提供准确的命令，但最终您负责确保命令在您的具体环境中的安全性和适用性。
- en: '*Figure 2**.7* shows an example ChatGPT command generated from the prompt used
    in this recipe:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2**.7*显示了从本配方中使用的提示生成的ChatGPT命令的示例：'
- en: '![Figure 2.7 – Example ChatGPT command generation](img/Figure_2.07_B21091.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图2.7 – ChatGPT命令生成示例](img/Figure_2.07_B21091.jpg)'
- en: Figure 2.7 – Example ChatGPT command generation
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7 – ChatGPT命令生成示例
- en: How it works…
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'The GPT-assisted vulnerability scanning recipe taps into the power of NLP and
    the vast knowledge of ML algorithms to generate accurate and appropriate command
    strings for vulnerability scanning tools such as NMAP, OpenVAS, and Nessus. When
    you provide a specific system role and a prompt that represents a user request,
    ChatGPT uses these inputs to understand the context and generate a response that
    aligns with the given role:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: GPT辅助的漏洞扫描配方利用了NLP的力量和ML算法的广泛知识，生成准确和适当的命令字符串，用于漏洞扫描工具，如NMAP、OpenVAS和Nessus。当您提供了一个特定的系统角色和一个代表用户请求的提示时，ChatGPT使用这些输入来理解上下文，并生成与给定角色一致的响应：
- en: '**System role definition**: By defining ChatGPT’s role as a professional cybersecurity
    red team specialist and an expert in penetration testing and vulnerability scanning
    tools, you’re instructing the model to answer from a perspective of deep technical
    understanding and expertise in this field. This context helps in generating accurate
    and relevant command strings.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统角色定义**：通过将ChatGPT的角色定义为专业的网络安全红队专家和渗透测试和漏洞扫描工具方面的专家，您指示模型从深度技术理解和专业知识的角度来回答。这种背景有助于生成准确和相关的命令字符串。'
- en: '**Natural language prompt**: The natural language prompt that simulates a user
    request allows ChatGPT to understand the task at hand in a human-like manner.
    Instead of needing structured data or specific keywords, ChatGPT can interpret
    the request as a human would and provide a suitable response.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自然语言提示**：模拟用户请求的自然语言提示使ChatGPT能够以类似人类的方式理解手头的任务。与需要结构化数据或特定关键字不同，ChatGPT可以像人类一样解释请求，并提供合适的响应。'
- en: '**Command generation**: With the role and the prompt, ChatGPT generates the
    Linux command necessary to complete the request. The command is based on the specific
    details of the user input and the expertise of the assigned role. This is where
    the AI leverages its knowledge of cybersecurity and language understanding to
    construct the necessary command string.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令生成**：有了角色和提示，ChatGPT生成完成请求所需的Linux命令。该命令基于用户输入的具体细节和所分配角色的专业知识。这是AI利用其对网络安全和语言理解的知识构建必要命令字符串的地方。'
- en: '**One-line command**: The specification of providing a one-line command, including
    all necessary operators and pipes, compels ChatGPT to generate a command that’s
    ready to be pasted into a command line for immediate execution. This removes the
    need for the user to manually combine or modify the command, saving time and potential
    errors.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一行命令**：规定提供一行命令，包括所有必要的运算符和管道，促使 ChatGPT 生成一个可立即粘贴到命令行中进行执行的命令。这消除了用户手动组合或修改命令的需要，节省了时间和可能的错误。'
- en: '**Simplicity and clarity**: By asking for the simplest form of the command
    and without any further explanation, the output is kept clear and concise, which
    is particularly helpful for those learning or in need of a quick reference.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单和清晰**：只需请求命令的最简单形式，而无需进一步解释，输出就保持了清晰简洁，这对于那些在学习或需要快速参考的人来说特别有帮助。'
- en: In summary, the GPT-assisted vulnerability scanning recipe harnesses the power
    of NLP and ML algorithms to generate precise, ready-to-run commands for vulnerability
    scanning. By using the defined system role and prompt, users can streamline the
    process of crafting commands for vulnerability assessments, save time, and improve
    accuracy.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 总而言之，GPT 辅助的漏洞扫描配方利用了自然语言处理和机器学习算法的力量，生成精确的、可立即运行的漏洞扫描命令。通过使用定义的系统角色和提示，用户可以简化漏洞评估命令的制作过程，节省时间，并提高准确性。
- en: There’s more…
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The flexibility and capabilities of this GPT-assisted process extend beyond
    the example given. First is the versatility of the prompt. It’s actually designed
    to accommodate virtually any request for *any* Linux command across any domain
    or task. This is a significant advantage as it enables you to leverage ChatGPT’s
    capabilities across a wide range of scenarios. By assigning the role appropriately,
    such as `"You are a Linux system administrator"`, and substituting your specific
    request in place of `{user_input}`, you can guide the AI to generate accurate
    and context-specific command strings for a plethora of Linux operations.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这个由 GPT 辅助的流程的灵活性和功能远远超出了给出的示例。首先是提示的多功能性。它实际上旨在适应几乎任何对**任何** Linux 命令的请求，跨越任何领域或任务。这是一个重大优势，因为它使您能够在各种场景下利用
    ChatGPT 的能力。通过适当地分配角色，比如 `"您是一名 Linux 系统管理员"`，并将您的具体请求替换为 `{user_input}`，您可以引导
    AI 生成准确和特定上下文的命令字符串，用于大量的 Linux 操作。
- en: Beyond simply generating command strings, the potential of this recipe is amplified
    when combined with the OpenAI API and Python. With the proper setup, not only
    can you generate the necessary Linux commands but you can also automate the execution
    of these commands. Essentially, this could turn ChatGPT into an active participant
    in your command-line operations, potentially saving you significant time and effort.
    This level of automation represents a substantial step forward in interacting
    with AI models, turning them into active assistants rather than passive information
    generators.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 除了简单地生成命令字符串之外，当与 OpenAI API 和 Python 结合使用时，这个配方的潜力得到了增强。通过正确设置，您不仅可以生成必要的 Linux
    命令，还可以自动执行这些命令。基本上，这可以将 ChatGPT 变成您命令行操作的积极参与者，潜在地为您节省大量的时间和精力。这种程度的自动化代表了与 AI
    模型交互的实质性进步，将它们转变为积极的助手而不是被动的信息生成器。
- en: In upcoming recipes in this book, we’ll delve deeper into command automation.
    This is just the beginning of the possibilities opened up by the integration of
    AI with your operating system tasks.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的后续配方中，我们将更深入地探讨命令自动化。这只是 AI 与您的操作系统任务集成所开启的可能性的开始。
- en: Analyzing Vulnerability Assessment Reports using LangChain
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 LangChain 分析漏洞评估报告
- en: As powerful as ChatGPT and the OpenAI API are, they currently have a significant
    limitation—the **token window**. This window determines how many characters can
    be exchanged in a complete message between the user and ChatGPT. Once the token
    count exceeds this limitation, ChatGPT may lose track of the original context,
    making the analysis of large bodies of text or documents challenging.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 ChatGPT 和 OpenAI API 非常强大，但它们目前有一个重大的限制—**令牌窗口**。这个窗口决定了用户和 ChatGPT 之间在完整消息中可以交换多少个字符。一旦令牌数量超出此限制，ChatGPT
    可能会丢失原始上下文，使得分析大量文本或文档变得具有挑战性。
- en: Enter **LangChain**—a framework designed to navigate around this very hurdle.
    LangChain allows us to embed and vectorize large groups of text.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 **LangChain**—一个旨在绕过这个障碍的框架。LangChain 允许我们嵌入和向量化大量文本。
- en: Important note
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '**Embedding** refers to the process of transforming text into numerical vectors
    that an ML model can understand and process. **Vectorizing**, on the other hand,
    is a technique to encode non-numeric features as numbers. By converting large
    bodies of text into vectors, we can enable ChatGPT to access and analyze vast
    amounts of information, effectively turning the text into a *knowledgebase* that
    the model can refer to, even if it hasn’t been trained on this data previously.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**嵌入**指的是将文本转换为机器学习模型可以理解和处理的数字向量的过程。**向量化**，另一方面，是一种将非数字特征编码为数字的技术。通过将大量文本转换为向量，我们可以使ChatGPT能够访问和分析大量信息，从而有效地将文本转化为模型可以参考的*知识库*，即使该模型之前并没有在这些数据上进行训练。'
- en: In this recipe, we will leverage the power of LangChain, Python, the OpenAI
    API, and **Streamlit** (a framework for quickly and easily creating web applications)
    to analyze voluminous documents such as vulnerability assessment reports, threat
    reports, standards, and more. With a simple UI for uploading files and crafting
    prompts, the task of analyzing these documents will be simplified to the point
    of asking ChatGPT straightforward natural language queries.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将利用LangChain、Python、OpenAI API和**Streamlit**（一个快速轻松创建Web应用程序的框架）的功能来分析大量文档，例如漏洞评估报告、威胁报告、标准等。通过一个简单的UI来上传文件和制作提示，分析这些文档的任务将简化到向ChatGPT直接提出简单的自然语言查询的程度。
- en: Getting ready
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: 'Before we start with the recipe, ensure that you have an OpenAI account set
    up and have obtained your API key. If you haven’t done this yet, please revisit
    [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022) for the steps. Apart from this,
    you’ll also need the following:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本示例之前，请确保您已经设置了OpenAI账户并获得了API密钥。如果还没有完成此步骤，请返回第一章获取步骤。除此之外，您还需要以下内容：
- en: '`python-docx`, `langchain`, `streamlit`, and `openai`. You can install these
    using the `pip install` command as follows:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`python-docx`、`langchain`、`streamlit`和`openai`。您可以使用以下命令`pip install`安装这些软件：'
- en: '[PRE27]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**Vulnerability assessment report (or a large document of your choice to be
    analyzed)**: Prepare a vulnerability assessment report or any other substantial
    document that you aim to analyze. The document can be in any format as long as
    you can convert it into a **PDF**.'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**漏洞评估报告（或您选择的大型文档进行分析）**：准备一个漏洞评估报告或其他重要文档，您打算对其进行分析。只要可以将其转换为**PDF**格式，该文档可以采用任何格式。'
- en: '**Access to LangChain documentation**: Throughout this recipe, we will be utilizing
    LangChain, a relatively new framework. Although we will walk you through the process,
    having the LangChain documentation handy might be beneficial. You can access it
    at [https://docs.langchain.com/docs/](https://docs.langchain.com/docs/).'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**获取LangChain文档**：在本示例中，我们将使用LangChain，这是一个相对较新的框架。虽然我们会带您了解整个过程，但随手准备LangChain文档可能会有所益处。您可以在[https://docs.langchain.com/docs/](https://docs.langchain.com/docs/)获取它。'
- en: '**Streamlit**: We will be using Streamlit, a fast and straightforward way to
    create web apps for Python scripts. While we will guide you through the basics
    in this recipe, you may want to explore it on your own. You can learn more about
    Streamlit at [https://streamlit.io/](https://streamlit.io/).'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Streamlit**：我们将使用Streamlit，这是一种快速简单的方法来为Python脚本创建Web应用程序。尽管在本示例中我们将引导您了解其基础知识，但您可能希望自行探索。您可以在[https://streamlit.io/](https://streamlit.io/)了解更多关于Streamlit的信息。'
- en: How to do it…
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'In this recipe, we’ll walk you through the steps needed to create a document
    analyzer using LangChain, Streamlit, OpenAI, and Python. The application will
    allow you to upload a PDF document, ask questions about it in natural language,
    and get responses generated by the language model based on the document’s content:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将带您了解如何使用LangChain、Streamlit、OpenAI和Python创建一个文档分析器。该应用程序允许您上传PDF文档，用自然语言提出相关问题，并根据文档内容生成语言模型的响应：
- en: '`dotenv` to load environment variables, `streamlit` to create the web interface,
    `PyPDF2` to read the PDF files, and various components from `langchain` to handle
    the language model and text processing:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`dotenv`加载环境变量，`streamlit`创建Web界面，`PyPDF2`读取PDF文件，以及来自`langchain`的各种组件来处理语言模型和文本处理：
- en: '[PRE28]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '`"Document Analyzer"` and a `"What would you like to know about this document?"`
    header text prompt:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`"文档分析器"`和`"您想了解这个文档的什么情况？"`的标题文本提示：'
- en: '[PRE29]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '**Upload the PDF**: Add a file uploader to the Streamlit application to allow
    users to upload a PDF document:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**上传PDF**：向Streamlit应用程序添加文件上传器，以允许用户上传PDF文档：'
- en: '[PRE30]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '**Extract the text from the PDF**: If a PDF is uploaded, read the PDF and extract
    the text from it:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**从PDF中提取文本**：如果上传了PDF，读取PDF并从中提取文本：'
- en: '[PRE31]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '**Split the text into chunks**: Break down the extracted text into manageable
    chunks that can be processed by the language model:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将文本分割成块**: 将提取的文本分解为可由语言模型处理的可管理块:'
- en: '[PRE32]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '`OpenAIEmbeddings` to create vector representations of the chunks:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`OpenAIEmbeddings`来创建对块的向量表示：
- en: '[PRE33]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '**Ask a question about the PDF**: Show a text input field in the Streamlit
    application for the user to ask a question about the uploaded PDF:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**关于PDF提问**：在Streamlit应用程序中显示一个文本输入字段，用户可以就上传的PDF提问：'
- en: '[PRE34]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '**Generate a response**: If the user asks a question, find the chunks that
    are semantically similar to the question, feed those chunks to the language model,
    and generate a response:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**生成响应**: 如果用户提问，找到与问题语义相似的块，将这些块输入语言模型，并生成响应:'
- en: '[PRE35]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Run the script with Streamlit. Using a command-line terminal, run the following
    command from the same directory as the script:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Streamlit运行脚本。从与脚本相同的目录中使用命令行终端，运行以下命令：
- en: '[PRE36]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Here is how the completed script should look:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是完成脚本应该是什么样子的：
- en: '[PRE37]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The script essentially automates the analysis of large documents, such as vulnerability
    assessment reports, using the LangChain framework, Python, and OpenAI. It leverages
    Streamlit to create an intuitive web interface where users can upload a PDF file
    for analysis.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本主要是利用LangChain框架、Python和OpenAI自动化分析大型文档，比如漏洞评估报告。它利用Streamlit创建直观的网络界面，用户可以上传PDF文件进行分析。
- en: 'The uploaded document undergoes a series of operations: it’s read and its text
    is extracted, then split into manageable chunks. These chunks are transformed
    into vector representations (embeddings) using OpenAI Embeddings, enabling the
    language model to interpret and process the text semantically. These embeddings
    are stored in a database (**Facebook AI Similarity Search**, or **FAISS** for
    short), facilitating efficient similarity searches.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 上传的文档经历了一系列操作：它被读取并提取文本，然后分成可管理的块。这些块使用OpenAI Embeddings转换成向量表示（嵌入），使语言模型能够语义解释和处理文本。这些嵌入被存储在数据库（**Facebook
    AI Similarity Search**）中，便于高效的相似度搜索。
- en: The script then provides an interface for users to ask questions about the uploaded
    document. Upon receiving a question, it identifies the most semantically relevant
    chunks of text to the question from the database. These chunks, along with the
    user’s question, are processed by a question-answering chain in LangChain, generating
    a response that is displayed back to the user.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，该脚本为用户提供一个界面，可以就上传的文档提问。收到问题后，它从数据库中识别最语义相关的文本块来回答问题。这些块以及用户的问题由LangChain中的问答链处理，生成的响应会显示给用户。
- en: In essence, this script transforms large, unstructured documents into an interactive
    knowledge base, enabling users to pose questions and receive AI-generated responses
    based on the document’s content.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，此脚本将大型的非结构化文档转换为交互式知识库，使用户能够提出问题，并根据文档内容接收AI生成的响应。
- en: How it works…
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行原理...
- en: First, the necessary modules are imported. These include the `dotenv` module
    for loading environment variables, `streamlit` for creating the application’s
    UI, `PyPDF2` for handling PDF documents, and various modules from `langchain`
    for handling language model tasks.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，导入必要的模块。包括用于加载环境变量的`dotenv`模块，用于创建应用程序UI的`streamlit`，用于处理PDF文档的`PyPDF2`，以及来自`langchain`的各种模块，用于处理语言模型任务。
- en: The `PyPDF2` to read the text of the PDF.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`PyPDF2`来读取PDF的文本。
- en: The text from the PDF is then split into smaller chunks using LangChain’s `chunk``size`,
    `overlap`, and `separator`, used to split the text—are specified.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用LangChain的`chunk` `size`，`overlap`和`separator`将PDF的文本分割成较小的块。
- en: Next, OpenAI **Embeddings** from LangChain are used to convert the chunks of
    text into **vector representations**. This involves encoding the semantic information
    of the text into a mathematical form that can be processed by the language model.
    These embeddings are stored in a FAISS database, which allows efficient similarity
    searching for **high-dimensional vectors**.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用LangChain的OpenAI **Embeddings**将文本块转换为**向量表示**。这涉及将文本的语义信息编码为可由语言模型处理的数学形式。这些嵌入被存储在FAISS数据库中，允许对**高维向量**进行高效的相似度搜索。
- en: The application then takes a user input in the form of a question about the
    PDF. It uses the FAISS database to find the chunks of text that are semantically
    most similar to the question. These chunks are likely to contain the information
    needed to answer the question.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，应用程序以关于 PDF 的问题形式接受用户输入。它使用 FAISS 数据库来查找语义上与问题最相似的文本块。这些文本块很可能包含回答问题所需的信息。
- en: The chosen chunks of text and the user’s question are fed into a question-answering
    *chain* from LangChain. This chain is loaded with an instance of the OpenAI language
    model. The chain processes the input documents and the question, using the language
    model to generate a response.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所选的文本块和用户的问题被馈送到 LangChain 的问答*链*中。此链加载了一个 OpenAI 语言模型的实例。该链处理输入文档和问题，使用语言模型生成响应。
- en: The OpenAI callback is used to capture metadata about the API usage, such as
    the number of tokens used in the request.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenAI 回调用于捕获有关 API 使用情况的元数据，例如请求中使用的令牌数量。
- en: Finally, the response from the chain is displayed in the Streamlit application.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，链的响应被显示在 Streamlit 应用程序中。
- en: This process allows for semantic querying of large documents that exceed the
    language model’s token limit. By splitting the document into smaller chunks and
    using semantic similarity to find the chunks most relevant to a user’s question,
    the application can provide useful answers even when the entire document can’t
    be processed at once by the language model. This demonstrates one way to overcome
    the token limit challenge when working with large documents and language models.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程允许对超出语言模型令牌限制的大型文档进行语义查询。通过将文档分割成较小的块，并使用语义相似性找到与用户问题最相关的块，即使语言模型无法一次处理整个文档，应用程序也可以提供有用的答案。这演示了在处理大型文档和语言模型时克服令牌限制挑战的一种方法。
- en: There’s more…
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: LangChain is not just a tool for overcoming the token window limitation; it’s
    a comprehensive framework for creating applications that interact intelligently
    with language models. These applications can connect a language model to other
    data sources and allow the model to interact with its environment—essentially
    providing the model with a degree of agency. LangChain offers modular abstractions
    for the components necessary to work with language models, along with a collection
    of implementations for these abstractions. Designed for ease of use, these components
    can be employed whether you’re using the full LangChain framework or not.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: LangChain 不仅仅是一种克服令牌窗口限制的工具；它是一个全面的框架，用于创建与语言模型智能交互的应用程序。这些应用程序可以连接语言模型与其他数据源，并允许模型与其环境交互——从根本上为模型提供了一定程度的代理。LangChain
    提供了用于处理语言模型所需组件的模块化抽象，以及这些抽象的一系列实现。设计用于易于使用，这些组件可以在使用完整的 LangChain 框架或不使用时使用。
- en: What’s more, LangChain introduces the concept of *chains*—these are combinations
    of the aforementioned components, assembled in specific ways to accomplish particular
    use cases. Chains offer a high-level interface for users to get started with a
    specific use case easily and are designed to be customizable to cater to a variety
    of tasks.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，LangChain 还引入了*链*的概念——这些是上述组件的组合，以特定方式组装以完成特定用例。链为用户提供了一个高级接口，以便轻松开始特定用例，并设计为可定制以满足各种任务的需求。
- en: In later recipes, we’ll demonstrate how to use these features of LangChain to
    analyze even larger and more complex documents, such as `.csv` files and spreadsheets.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在后续的示例中，我们将演示如何使用 LangChain 的这些功能来分析更大更复杂的文档，例如`.csv`文件和电子表格。
