- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security Awareness and Training
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will delve into the fascinating realm of **cybersecurity
    training and education**, highlighting the instrumental role that OpenAI’s **large
    language models** (**LLMs**) can play in enhancing and enriching this critical
    process. We’ll embark on a journey to discover how ChatGPT can be employed as
    an interactive tool to facilitate various aspects of cybersecurity awareness,
    from the creation of comprehensive employee training material to the development
    of interactive cybersecurity assessments, and **even gamifying the learning**
    **process itself**.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll start by demonstrating how ChatGPT, coupled with Python and the OpenAI
    API, can be used to **automatically generate content for employee cybersecurity
    awareness training**. In an era where human error often precipitates security
    breaches, you’ll learn to leverage these powerful tools to create engaging training
    materials tailored to your organization’s specific needs.
  prefs: []
  type: TYPE_NORMAL
- en: As we progress, we’ll explore how to create **interactive assessments** with
    ChatGPT, helping businesses and institutions test their employees understanding
    and retention of critical cybersecurity concepts. You’ll be guided through a hands-on
    approach to customize these assessments, enabling you to construct a tool that
    aligns with your organization’s existing training content. By the end of this
    section, you’ll have the capability to **generate, export, and integrate these
    assessments into your learning** **management systems**.
  prefs: []
  type: TYPE_NORMAL
- en: Continuing our journey, we turn our attention towards **email phishing** - one
    of the most prevalent tactics employed by cyber criminals. You’ll discover how
    to use ChatGPT to create a tool for interactive email phishing training, thereby
    fostering a safer cyber environment for your organization. The interactive nature
    of the training not only ensures a continuous, engaging, and efficient learning
    experience but also allows for easy integration with live courses or learning
    management systems.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll see how ChatGPT can assist in **preparing for cybersecurity certification
    exams**. By creating a study guide tailored to certifications like CISSP and others,
    you’ll harness the capabilities of ChatGPT to engage with potential exam questions,
    gather useful insights, and evaluate your readiness for the exam.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we explore the exciting and dynamic world of **gamification** **in
    cybersecurity** education. As the creator of *ThreatGEN® Red vs. Blue*, one of
    the world’s first educational cybersecurity video games, I believe that the marriage
    of gaming and education offers a unique and engaging way to impart cybersecurity
    skills, and the way of the future. With ChatGPT acting as a **game master** in
    a **cybersecurity-themed** **role-playing game**, you’ll discover how this AI
    tool can manage game progression, keep score, and provide detailed reports for
    improvement, adding a whole new dimension to the learning experience.
  prefs: []
  type: TYPE_NORMAL
- en: Through this chapter, you’ll not only appreciate the diverse educational applications
    of ChatGPT but also gain the skills necessary to leverage its capabilities effectively
    in the realm of cybersecurity.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Developing Security Awareness Training Content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assessing Cybersecurity Awareness
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interactive Email Phishing Training with ChatGPT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChatGPT-Guided Cybersecurity Certification Study
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gamifying Cybersecurity Training
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this chapter, you will need a **web browser** and a stable **internet connection**
    to access the ChatGPT platform and set up your account. You will also need to
    have your OpenAI account setup and have obtained your API key. If not, revisit
    [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022) for details. Basic familiarity
    with the Python programming language and working with the command line is necessary,
    as you’ll be using **Python 3.x**, which needs to be installed on your system,
    for working with the OpenAI GPT API and creating Python scripts. A **code editor**
    will also be essential for writing and editing Python code and prompt files as
    you work through the recipes in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code files for this chapter can be found here: .'
  prefs: []
  type: TYPE_NORMAL
- en: Developing Security Awareness Training Content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the realm of cybersecurity, employee education is paramount. Human error
    remains one of the leading causes of security breaches, making it vital to ensure
    that all members of an organization understand their roles in maintaining cybersecurity.
    However, creating engaging and effective training materials can be a time-consuming
    process.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe will guide you in using Python and the OpenAI API to automatically
    generate content for employee cybersecurity awareness training. The generated
    content can be utilized for both slide presentations and lecture notes, which
    you can seamlessly integrate into your chosen slide presentation application.
  prefs: []
  type: TYPE_NORMAL
- en: By leveraging the capabilities of the Python script and API prompt methods,
    you’ll be able to generate a significant volume of content, much more than a single
    prompt in ChatGPT would typically produce.
  prefs: []
  type: TYPE_NORMAL
- en: The generated training materials in this recipe focus on the electric utility
    industry, a sector that frequently faces high-stakes cyber threats. However, the
    techniques used in this recipe are meant to be flexible, allowing you to specify
    any industry that suits your needs, and the appropriate content will be generated
    to match your chosen industry. The guidance and procedures developed will be an
    invaluable resource for educating employees about their roles in maintaining the
    organization’s cybersecurity.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before diving into this recipe, ensure you have your OpenAI account set up and
    your API key on hand. If not, you should refer back to [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for the necessary setup details. You will also need **Python version 3.10.x**
    **or later**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, confirm you have the following Python libraries installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`openai`: This library enables you to interact with the OpenAI API. Install
    it using the command `pip` `install openai`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`os`: This is a built-in Python library, which allows you to interact with
    the operating system, especially for accessing environment variables.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`tqdm`: This library is utilized for showing progress bars during the policy
    generation process. Install it with `pip` `install tqdm`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once these requirements are in place, you are all set to dive into the script.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Before we begin, it should be noted that the **gpt-4** model is highly recommended
    for the prompts in this recipe. The **gpt-3.5-turbo** model sometimes provides
    inconsistent formatting in its output, even after much experimentation with the
    prompt.
  prefs: []
  type: TYPE_NORMAL
- en: In the following steps, we will guide you through creating a Python script that
    automates the process of using an initial prompt to generate a list of slides,
    generating detailed information for each slide, and finally, creating a document
    with all of the content suitable for copying and pasting directly into the slide
    presentation app of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: '**Import Necessary Libraries**. The script begins by importing the required
    Python libraries, which include **openai** (for OpenAI API calls), **os** (for
    environment variables), **threading** (for parallel threading), **time** (for
    time-based functions), **datetime** (for date and time operations), and **tqdm**
    (for progress bars).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Set Up OpenAI API and Prepare File Output**. Here, we initialize the OpenAI
    API using your API key. We also prepare the output file where the generated slide
    content will be stored. The filename is based on the current date and time, ensuring
    it’s unique.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`content_to_text_file()` and `display_elapsed_time()`, are defined to handle
    writing slide content into a text file and displaying elapsed time while waiting
    for the API call, respectively.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`display_elapsed_time()` function.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Prepare Initial Prompt.** We set up the initial prompts for the model. The
    system role describes the AI model’s persona, and the user role provides the instruction
    for the model to generate a cybersecurity training outline.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`openai.ChatCompletion.create()` function with the prepared prompts to generate
    a training outline. If any exceptions occur during this process, they are caught
    and printed to the console.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Retrieve and Print the Training Outline.** After the model generates the
    training outline, it is extracted from the response and printed to the console
    for the user to review.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`\n`). This prepares them for more detailed content generation in the next
    step.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Generate Detailed Slide Content.** In this section, the script iterates through
    each section in the outline and generates detailed slide content for each. It
    opens the output text file, prepares a new prompt for the model, resets the elapsed
    time event, calls the model again, retrieves the generated slide content, and
    writes it to the output file.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Handle Successful and Unsuccessful Runs.** If the output text file is generated
    successfully, a success message is printed to the console. If any exceptions occur
    during the process, they are caught and the error message is printed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`elapsed_time_thread` to stop and join it back to the main process. This ensures
    no threads are left running unnecessarily.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is how the final script should look:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The result is a comprehensive cybersecurity awareness training course in a text
    file, ready for conversion into a PowerPoint presentation.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This script leverages the advanced capabilities of the OpenAI models to generate
    engaging, instructive, and well-structured content for a cybersecurity awareness
    training course. The process follows several stages:'
  prefs: []
  type: TYPE_NORMAL
- en: '**API Initialization**: The script starts by initializing the OpenAI API. It
    uses the API key to connect with the OpenAI **gpt-3.5-turbo** model, which has
    been trained on a diverse range of internet text. The model is designed to generate
    human-like text, making it ideal for creating unique and comprehensive content
    for training materials.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Date-Time Stamping and File Naming**: The script creates a unique timestamp
    that it appends to the output file name. This ensures each run of the script creates
    a distinct text file, preventing any overwriting of previous outputs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`content_to_text_file()` and `display_elapsed_time()`. The former is used for
    writing generated slide content to a text file, with error handling in place.
    The latter, working with Python’s threading capabilities, provides a real-time
    display of elapsed time during API calls.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outline Generation**: The script constructs a prompt that reflects the requirements
    of the course and sends this to the API. The API uses its contextual understanding
    to generate an outline matching these criteria.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outline Segmentation**: After the outline is generated, the script separates
    it into individual sections. Each section will later be developed into a full-fledged
    slide.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detailed Content Generation**: For each section in the outline, the script
    prepares a detailed prompt incorporating the entire outline and the particular
    section. This is sent to the API, which returns detailed slide content, split
    into slide content and lecture notes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`content_to_text_file()` function. If a slide fails to generate, the script
    skips to the next section without halting the entire process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Thread Management and Exception Handling**: The script includes robust thread
    management and exception handling to ensure smooth operation. If an error occurs
    while writing to the output file, the script reports the issue and gracefully
    shuts down the thread displaying elapsed time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By employing the OpenAI API and the gpt-3.5-turbo model, this script efficiently
    generates a structured and comprehensive cybersecurity awareness training course.
    The course can then be converted into a PowerPoint presentation. The generated
    content is both engaging and instructive, making it a valuable resource for the
    target audience.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The potential of this script is not limited to text output alone. With some
    modifications, you could integrate it with the Python library **python-pptx**
    to generate **Microsoft PowerPoint** presentations directly, thus streamlining
    the process even further.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the time of writing, this method is in its development stage and is being
    actively explored for improvement and refinement. For the adventurous and the
    curious, you can access the modified script on GitHub at: [https://github.com/PacktPublishing/ChatGPT-for-Cybersecurity-Cookbook](https://github.com/PacktPublishing/ChatGPT-for-Cybersecurity-Cookbook).
    This script promises an exciting step forward in automating the creation of cybersecurity
    training material.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To delve deeper into the workings and capabilities of the **python-pptx** library,
    which would allow you to generate and manipulate PowerPoint presentations in Python,
    you can visit its comprehensive documentation at: [https://python-pptx.readthedocs.io/en/latest/](https://python-pptx.readthedocs.io/en/latest/).'
  prefs: []
  type: TYPE_NORMAL
- en: As technology advances, the integration of AI and automation with content creation
    is an evolving landscape with immense potential. This script is just the starting
    point, and the possibilities for customization and expansion are endless!
  prefs: []
  type: TYPE_NORMAL
- en: Assessing Cybersecurity Awareness
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With an increasing number of cyber threats around us, cybersecurity awareness
    has never been more critical. This recipe will walk you through creating an interactive
    cybersecurity awareness assessment using ChatGPT. The tool we are building can
    be a vital instrument for businesses and institutions looking to educate their
    employees about cybersecurity. The quiz could serve as a follow-up to a cybersecurity
    awareness training course, testing the employees understanding and retention of
    the content. Furthermore, the assessment can be customized to match your existing
    cybersecurity training content, making it highly adaptable to any organization’s
    specific needs.
  prefs: []
  type: TYPE_NORMAL
- en: The most interesting part? At the end of the guide, you will be able to export
    the assessment questions and an answer key to a text document. This feature allows
    for easy integration with live courses or **Learning Management Systems (LMS)**.
    Whether you are a cybersecurity instructor, a business leader, or an enthusiast,
    this recipe will provide a practical and innovative way to engage with cybersecurity
    education.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before diving into this recipe, ensure you have your OpenAI account set up and
    your API key on hand. If not, you should refer back to [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for the necessary setup details. You will also need **Python version 3.10.x**
    **or later**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, confirm you have the following Python libraries installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`openai`: This library enables you to interact with the OpenAI API. Install
    it using the command `pip` `install openai`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`os`: This is a built-in Python library, which allows you to interact with
    the operating system, especially for accessing environment variables.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`tqdm`: This library is utilized for showing progress bars during the policy
    generation process. Install it with `pip` `install tqdm`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A text file named `trainingcontent.txt`: This file should contain the categories
    you wish to base your assessment on. Each line should contain one category. This
    file should be in the same directory as your Python script.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we begin, let’s note a few things. The assessment will consist of multiple-choice
    questions generated by ChatGPT. Each question will come with four options, and
    only one of these will be correct. The responses you provide will guide ChatGPT’s
    interaction, helping it keep score, provide explanations, and give feedback on
    your performance. So let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: '**Log into your OpenAI account and access the ChatGPT interface.** Visit the
    website at [https://chat.openai.com](https://chat.openai.com) to get started.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Generate a cybersecurity awareness training assessment.** Use the following
    prompt to instruct ChatGPT to start creating your cybersecurity awareness training
    assessment.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Generate a content specific assessment.** If you want a specific assessment
    for a cybersecurity awareness course, such as the one created in the *Developing
    Security Awareness Training Content* recipe*,* use this alternative prompt:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Experiment with the number of questions asked and the categories asked to get
    the results that work best for your needs.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The success of this recipe lies in the intricate design of the prompts and the
    manner in which they guide ChatGPT’s behavior to provide an interactive, Q&A-based
    assessment experience. Each instruction within the prompt corresponds to a task
    that ChatGPT is capable of executing. The OpenAI models have been trained on a
    diverse range of data and can generate relevant questions based on the input provided.
  prefs: []
  type: TYPE_NORMAL
- en: The initial portion of the prompt positions ChatGPT as an experienced cybersecurity
    professional and instructor, which sets the context for the kind of responses
    we expect. This is crucial in guiding the model to generate content related to
    cybersecurity awareness.
  prefs: []
  type: TYPE_NORMAL
- en: 'We further instruct the model to maintain the flow of a standard assessment:
    posing a question, waiting for a response, then giving feedback. We explicitly
    state that the AI should ask a question and provide four multiple choice options,
    giving it a clear structure to follow. The feedback, whether it’s **Correct**
    or **InCorrect**, is designed to include a short explanation to supplement the
    learner’s understanding.'
  prefs: []
  type: TYPE_NORMAL
- en: One unique aspect of the prompt design is its built-in memory management. We
    instruct the model to remember all responses throughout the conversation. This
    way, we get a cumulative scoring mechanism, adding an element of progression and
    continuity to the interaction. This isn’t perfect, as AI models have limited memory
    and cannot track context beyond a certain limit, but it’s effective for the scope
    of this application.
  prefs: []
  type: TYPE_NORMAL
- en: Importantly, we restrict the model’s responses to maintain the assessment context.
    The prompt explicitly states that the model should provide no other response apart
    from the question and feedback loop. This restriction is vital in ensuring that
    the model doesn’t deviate from the intended conversational flow.
  prefs: []
  type: TYPE_NORMAL
- en: For custom assessments, we provide a list of specific topics to base the questions
    on, leveraging the model’s ability to understand and generate questions from given
    subjects. This way, the model tailors the assessment to the specific needs of
    a cybersecurity awareness course.
  prefs: []
  type: TYPE_NORMAL
- en: In essence, the prompt’s structure and creativity help harness ChatGPT’s capabilities,
    transforming it into an interactive tool for cybersecurity awareness assessment.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: While the models are good at understanding and generating human-like text, they
    don’t *know* things in the way humans do. They can’t remember specific details
    beyond what is available in the conversation context.
  prefs: []
  type: TYPE_NORMAL
- en: Different models have different strengths and weaknesses you might want to consider
    for this recipe. **GPT-4** has the ability to handle longer context (more assessment
    questions), but it’s a bit slower and you can only submit 25 prompts over 3 hours
    (at the time of this writing). **GPT-3.5** is faster and doesn’t have any prompt
    limitations. However, it might lose context over long assessments and provide
    inaccurate results at the end of the assessment.
  prefs: []
  type: TYPE_NORMAL
- en: In a nutshell, this recipe leverages the capabilities of OpenAI models to create
    a highly interactive and informative cybersecurity awareness assessment.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you were using a LMS, you might prefer a question set document rather than
    an interactive method like ChatGPT. In this case, Python scripting provides a
    convenient alternative, creating a static question set that you can then import
    into your LMS or use in an in-person training session.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Different models have different context memory windows. The more questions the
    script generates, the better the chance that the model will lose context along
    the way and provide inconsistent or out of context results. For more questions,
    try using the **gpt-4** model, which has twice the context window as **gpt-3.5-turbo**,
    or even the new **gpt-3.5-turbo-16k**, which has 4 times the context window.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the steps to do it:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Import necessary libraries.** For this script, we’ll need to import **openai**,
    **os**, **threading**, **time**, **datetime**, and **tqdm**. These libraries will
    allow us to interact with the OpenAI API, manage files, and create multi-threading.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Set up the OpenAI API.** You will need to provide your OpenAI API key, which
    you can store as an environment variable for security purposes.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Set up the filename for the assessment.** We use the current date and time
    to create a unique name for each assessment.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Define the function to generate questions.** This function creates a conversation
    with the AI model, using a similar approach as in the interactive session. It
    includes a function parameter for the categories.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You can adjust the number of questions here to suit your needs. You can also
    modify the prompt to tell it you want at least x questions per category.
  prefs: []
  type: TYPE_NORMAL
- en: '**Display elapsed time.** This function is used to provide a user-friendly
    display of elapsed time during the API call.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Prepare and execute the API call.** We read the content categories from a
    file and initiate a thread to display the elapsed time. We then call the function
    to generate the questions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Save the generated questions.** Once the questions are generated, we write
    them to a file with the previously defined filename.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here’s how the complete script should look:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: After these steps, you’ll have a text file with a set of questions generated
    by the model that you can use for your cybersecurity awareness training!
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s how it works:'
  prefs: []
  type: TYPE_NORMAL
- en: This Python script is designed to generate a set of cybersecurity awareness
    training questions. It works by making use of the OpenAI `trainingcontent.txt`,
    where each line is considered a separate category.
  prefs: []
  type: TYPE_NORMAL
- en: The script first imports the necessary libraries, including **openai** to interact
    with the **gpt-3.5-turbo** model, **os** for operating system-dependent functionality
    such as reading environment variables (the API key, in this case), **threading**
    and **time** to create a separate thread that displays the elapsed time during
    the API call, **datetime** to get the current date and time for naming the output
    file, and **tqdm** to provide progress bars.
  prefs: []
  type: TYPE_NORMAL
- en: Once the API key is set, the script then constructs a filename for the output
    assessment file. It appends the current date and time to a base name to ensure
    the output file has a unique name each time the script is run.
  prefs: []
  type: TYPE_NORMAL
- en: Next, the `generate_question` function is defined, which sets up a conversation
    with the ChatGPT model. It starts by setting the system role message, establishing
    the perspective of the user (a cybersecurity professional), and then asks for
    the creation of a cybersecurity awareness training assessment test. It uses the
    categories parameter in the user’s message to the model. This parameter is replaced
    later with the actual categories read from the file.
  prefs: []
  type: TYPE_NORMAL
- en: The `display_elapsed_time` function is designed to display the elapsed time
    since the API call started until it finishes. This function runs on a separate
    thread to keep updating the elapsed time on the console without blocking the main
    thread where the API call is made.
  prefs: []
  type: TYPE_NORMAL
- en: The content categories are read from the file `trainingcontent.txt`, and a new
    thread is created to display elapsed time. An API call is then made by calling
    the `generate_question` function and passing the content categories. If an exception
    occurs during the API call (for example, if there is a problem with the network
    connection), the script stops execution and reports the error.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, once the API call is complete and the generated questions are received,
    they are written into the output file. If any exception occurs during the writing
    process (for example, if there is a problem with write permissions), the error
    is reported to the console.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, this script provides a practical way to generate a set of questions
    for cybersecurity awareness training using the OpenAI **gpt-3.5-turbo** model.
    The structure of the prompt and the specific parameters used in the API call help
    ensure that the output is tailored to the specific needs of the training.
  prefs: []
  type: TYPE_NORMAL
- en: Interactive Email Phishing Training with ChatGPT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the rise of cyber threats, organizations of all sizes are increasingly
    aware of the importance of training their staff on email phishing, a common and
    potentially dangerous tactic employed by cyber criminals. In this recipe, we’ll
    be using ChatGPT to create a tool for interactive email phishing training.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe guides you through the process of crafting a specialized prompt
    to turn ChatGPT into a simulation tool for phishing attack awareness. With this
    approach, you can use ChatGPT to train users to identify potential phishing emails,
    thereby increasing their awareness and helping to protect your organization from
    potential security threats.
  prefs: []
  type: TYPE_NORMAL
- en: What makes this truly powerful is its interactive nature. ChatGPT will present
    the user with a series of email scenarios. The user will then decide whether the
    email is a phishing attempt or a legitimate email, and can even ask for more details
    such as the URL to a link in the email or header information, for example. ChatGPT
    will provide feedback, ensuring a continuous, engaging, and efficient learning
    experience.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, we will also cover how to use Python in conjunction with these
    prompts to create exportable email simulation scenarios. This feature can be beneficial
    in situations where you might want to use the generated scenarios outside of ChatGPT,
    such as in a live course or in a LMS.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before diving into this recipe, ensure you have your OpenAI account set up and
    your API key on hand. If not, you should refer back to [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for the necessary setup details. You will also need **Python version 3.10.x**
    **or later**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, confirm you have the following Python libraries installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`openai`: This library enables you to interact with the OpenAI API. Install
    it using the command `pip` `install openai`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`os`: This is a built-in Python library, which allows you to interact with
    the operating system, especially for accessing environment variables.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`tqdm`: This library is utilized for showing progress bars during the policy
    generation process. Install it with `pip` `install tqdm`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will walk you through the process of creating an interactive
    email phishing training simulation using ChatGPT. The instructions are broken
    down into steps, starting from logging into your OpenAI account and ending with
    generating phishing training simulations.
  prefs: []
  type: TYPE_NORMAL
- en: '**Access the ChatGPT interface.** Log in to your OpenAI account and go to the
    ChatGPT interface at [https://chat.openai.com](https://chat.openai.com).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Initialize the simulation by entering the specialized prompt.** The following
    prompt is carefully designed to instruct ChatGPT to act as a phishing training
    simulator. Enter the prompt into the text box and press Enter.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Be sure to change the number of simulations ChatGPT provides, to suit your needs.
  prefs: []
  type: TYPE_NORMAL
- en: Now, ChatGPT will generate interactive email phishing scenarios based on your
    instructions. Respond to each scenario as if you were the employee undergoing
    the training. After the third scenario and your final response, ChatGPT will calculate
    and provide your total score, areas of strength, and areas for improvement.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At the heart of this recipe lies the specialized prompt. This prompt is constructed
    to instruct ChatGPT to act as an interactive phishing training tool, delivering
    a series of email phishing scenarios. The prompt follows certain design principles
    which are essential to its effectiveness and interaction with the OpenAI models.
    Here, we’ll dissect those principles:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Defining the role:** The prompt starts by setting up the role of the AI model
    – a cybersecurity professional and expert in adversarial social engineering tactics,
    techniques, and procedures, with 25 years of experience. By defining the AI’s
    persona, we direct the model to generate responses using the knowledge and expertise
    expected from such a role.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Detailed instructions and simulation:** The instructions given in the prompt
    are meticulously detailed, and it is this precision that enables ChatGPT to create
    effective and realistic phishing simulations. The prompt asks the AI model to
    generate a phishing email scenario, followed by the question, “Is the following
    email real or a phishing attempt?”. Notably, the AI model is given the liberty
    to provide additional clarifying questions, such as asking about URL information,
    header information, etc., giving it the freedom to generate more nuanced and complex
    scenarios.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By asking the model to generate these emails using markdown language formatting,
    we ensure that the simulated emails have the structure and appearance of genuine
    emails, enhancing the realism of the simulation. The AI is also instructed to
    present emails that can represent either legitimate correspondence or a phishing
    attempt, ensuring a diverse range of scenarios for the user to evaluate.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How can ChatGPT convincingly simulate phishing emails? Well, ChatGPT’s strength
    comes from the wide variety of text it has been trained on, including (but not
    limited to) countless examples of email correspondences and probably some instances
    of phishing attempts or discussions around them. From this extensive training,
    the model has developed a robust understanding of the format, tone, and common
    phrases used in both legitimate and phishing emails. So, when prompted to simulate
    a phishing email, it can draw on this knowledge to generate a believable email
    that mirrors the features of a real-world phishing attempt.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As the model doesn’t generate responses until it receives an answer to its question,
    it guarantees an interactive user experience. Based on the user’s response, the
    model provides relevant feedback (**Correct** or **Incorrect**), the correct answer
    if the user was wrong, and a brief explanation. This detailed, immediate feedback
    aids the learning process and helps to embed the knowledge gained from each simulated
    scenario.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: It’s worth noting that, although the model has been trained to generate human-like
    text, it doesn’t understand the content in the same way humans do. It doesn’t
    have beliefs, opinions, or access to real-time, world-specific information or
    personal data unless explicitly provided in the conversation. Its responses are
    merely predictions based on its training data. The carefully designed prompt and
    structure are what guide the model to generate useful, contextually appropriate
    content for this particular task.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Feedback mechanism:** The prompt instructs the AI to provide feedback based
    on the user’s answer, further explaining the answer. This creates an iterative
    feedback loop that enhances the learning experience.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Keeping track of progress:** The prompt instructs the AI to present three
    simulations in total and to remember the user’s answer to all of them. This ensures
    continuity in the training and enables tracking of the user’s progress.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Scoring and areas of improvement:** After the final simulation and response,
    the prompt instructs the AI to end the assessment and provide a total score along
    with areas of strength and areas for improvement. This helps the user understand
    their proficiency and the areas they need to focus on for improvement.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ChatGPT’s models are trained on a broad range of internet text. However, it’s
    essential to note that it does not know specifics about which documents were part
    of its training set or have access to any private, confidential, or proprietary
    information. It generates responses to prompts by recognizing patterns and producing
    text that statistically aligns with the patterns it observed in its training data.
  prefs: []
  type: TYPE_NORMAL
- en: By structuring our prompt in a way that clearly defines the interactive assessment
    context and expected behavior, we’re able to leverage this pattern recognition
    to create a highly specialized interactive tool. The ability of the OpenAI models
    to handle such a complex and interactive use case demonstrates their powerful
    capability and flexibility.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you’re using a LMS or conducting a live class, you might prefer to have a
    list of scenarios and details rather than an interactive method like ChatGPT.
    In these settings, it’s often more practical to provide learners with specific
    scenarios to ponder and discuss in a group setting. The list can also be used
    for assessments or training materials, offering a static reference point that
    learners can revisit as needed, or as content for a phishing simulation system.
  prefs: []
  type: TYPE_NORMAL
- en: By modifying the script from the previous recipe, you can instruct the ChatGPT
    model to produce a set of phishing email simulations complete with all necessary
    details. The resulting text can be saved into a file for easy distribution and
    usage in your training environment.
  prefs: []
  type: TYPE_NORMAL
- en: Since this script is so similar to the one from the previous recipe, we’ll just
    cover the modifications instead of steppping through the entire script again.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s walk through the necessary modifications:'
  prefs: []
  type: TYPE_NORMAL
- en: '`generate_question` is renamed to `generate_email_simulations`, and its argument
    list and body are updated to reflect its new purpose. It will now generate the
    phishing email simulations instead of cybersecurity awareness questions. This
    is done by updating the messages that are passed to the OpenAI API within this
    function.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You can adjust the number of scenarios here to suit your needs. In this example,
    we’ve requested 3 scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: '**Remove unnecessary code:** The script no longer reads content categories
    from an input file, as it’s not required in your use case.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Update variable and function names:** All variable and function names referring
    to “questions” or “assessment” have been renamed to refer to “email simulations”
    instead, to make the script more understandable in the context of its new purpose.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`generate_email_simulations` function is called instead of the `generate_question`
    function. This function initiates the process of generating the email simulations.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Like the previous method, more scenarios will require a model that supports
    a larger context window. However, the **gpt-4** model seems to provide better
    results in terms of accuracy, depth, and consistency with its generations for
    this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s how the complete script should look:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: By running this modified script, the ChatGPT model is directed to generate a
    series of interactive email phishing training scenarios. The script then collects
    the generated scenarios, checks them for errors, and writes them to a text file.
    This gives you a ready-made training resource that you can distribute to your
    learners or incorporate into your LMS or live training sessions.
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT-Guided Cybersecurity Certification Study
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe will guide you through the process of using ChatGPT to create an
    interactive certification study guide, specifically designed for cybersecurity
    certifications like **CISSP**. The approach will leverage ChatGPT’s conversational
    abilities to pose a series of questions mimicking the ones typically found on
    the specified certification exam. Furthermore, ChatGPT will provide you with additional
    context after each question, offering helpful insights and explanations. To round
    off the study session, ChatGPT will also evaluate your performance, highlighting
    areas for improvement and suggesting suitable study resources. This recipe could
    serve as a powerful study tool for anyone preparing for a cybersecurity certification
    exam.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before diving in to this recipe, ensure you have your OpenAI account set up
    and your API key on hand. If not, you should refer back to [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for the necessary setup details. You will also need **Python version 3.10.x**
    **or later**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, confirm you have the following Python libraries installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`openai`: This library enables you to interact with the OpenAI API. Install
    it using the command `pip` `install openai`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`os`: This is a built-in Python library, which allows you to interact with
    the operating system, especially for accessing environment variables.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`tqdm`: This library is utilized for showing progress bars during the policy
    generation process. Install it with `pip` `install tqdm`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This interactive certification study guide will be created directly on the OpenAI
    platform, specifically in the ChatGPT interface. The process is simple and straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: '**Access the ChatGPT interface.** Log into your OpenAI account and go to the
    ChatGPT interface at https://chat.openai.com.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Initialize the session by entering the specialized prompt.** The following
    prompt is carefully designed to instruct ChatGPT to act as a phishing training
    simulator. Enter the prompt into the text box and press Enter.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The certification exam mentioned in the prompt can be replaced with the one
    you’re interested in. However, remember that ChatGPT’s training data only extends
    up to **September 2021**, so it won’t have information about certifications updated
    or introduced after that date.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: We will be presenting another recipe later in this book on how to get ChatGPT
    and/or the OpenAI to access more recent information for more up-to-date exam practice.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe leverages the AI’s role-playing and interactive conversational capabilities
    to create an engaging study session. When given the role of a seasoned cybersecurity
    professional and instructor, ChatGPT generates a sequence of realistic certification
    exam questions, validates your answers, provides corrective feedback, and supplies
    additional context or explanation where needed. The prompt structure ensures that
    the AI maintains the focus on the task at hand, guiding the interaction to create
    an effective learning environment.
  prefs: []
  type: TYPE_NORMAL
- en: The approach relies on ChatGPT’s ability to understand and generate human-like
    text based on the instructions provided. In the context of this recipe, the AI
    model employs its underlying language understanding to generate relevant cybersecurity
    certification exam questions and provide informative responses.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: As has been mentioned throughout this book, the chosen model dictates the limitations
    you’ll face. **GPT-4** offers a significantly larger context window (allowing
    for more questions before potentially straying) than **GPT-3.5**. If you have
    access to the **OpenAI Playground**, you can use the **gpt-3.5-turbo-16k** model,
    which has the largest context window to date.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.1 – Using the gpt-3.5-turbo-16k model in the OpenAI Playground](img/Figure_5.1_B21091.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5.1 – Using the gpt-3.5-turbo-16k model in the OpenAI Playground
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you’re interested in generating a complete list of questions for a study
    group or class, you can adapt the script from the previous recipe (*Interactive
    Email Phishing Training with ChatGPT*). Here is the role and prompt to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Role:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '**Prompt:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Remember to replace the certification name if needed, adjust the number of questions,
    choose the appropriate model, and modify the filename for the generated output
    (unless you’re okay with the file being called “Email_Simulations_...”).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an example of what the modified script would like like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Just like the script in the previous recipe, this script will generate a text
    document containing the response from the API. In this case, that’s the list of
    certification exam questions and the answer key.
  prefs: []
  type: TYPE_NORMAL
- en: Gamifying Cybersecurity Training
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Gamification, the application of game-design elements in non-game contexts,
    has transformed many areas of education and training, and cybersecurity is no
    exception. As the creator of one of the world’s first educational cybersecurity
    video games, *ThreatGEN® Red vs. Blue*, I might be a bit biased. However, I firmly
    believe that gamification is the educational medium of the future.
  prefs: []
  type: TYPE_NORMAL
- en: The exciting world of gamification has increasingly become the go-to methodology
    for many forms of education and training. The essence of gamification is creating
    a game-like environment that keeps individuals engaged, thus enhancing the learning
    process. One of the most intriguing and promising applications of ChatGPT and
    OpenAI’s LLMs is the ability to gamify cybersecurity education.
  prefs: []
  type: TYPE_NORMAL
- en: From Gen X and younger, most people have grown up in a culture of gaming. This
    trend, combined with the explosion of gamification and game-based learning over
    the last few years, has led to a significant shift in the way education and training
    are delivered. And when it comes to cybersecurity, the marriage of gaming and
    education provides an engaging, interactive, and fun way to learn complex concepts.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe will show you how to turn ChatGPT into the **game master** (**GM**)
    for a cybersecurity-themed **role-playing game** (**RPG**). The game we’ll be
    playing is “Find the Insider Threat”, a “who done it” mystery. The objective of
    the game is to interview staff and investigate systems to find the insider threat,
    all in 50 turns or less. ChatGPT will manage the game, keeping score and tracking
    your turns. It will even provide a detailed report after the game, outlining your
    successes, failures, and areas for improvement.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The prerequisites for this recipe are simple. You just need a web browser and
    an OpenAI account. If you haven’t already created an account or need a refresher
    on how to use the ChatGPT interface, refer back to [*Chapter 1*](B21091_01.xhtml#_idTextAnchor022)
    for a comprehensive guide.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Access the ChatGPT interface****.** Log into your OpenAI account and go to
    the ChatGPT interface at https://chat.openai.com.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Initialize the game by entering the specialized prompt** The following prompt
    is carefully designed to instruct ChatGPT to act as a phishing training simulator.
    Enter the prompt into the text box and press Enter.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![Figure 5.2 – Example game initialization output](img/Figure_5.2_B21091.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5.2 – Example game initialization output
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The model limitations will come into play significantly in this recipe due to
    the potential for long, contextual prompts. **GPT-4** will give you the longest
    context window, but you will be limited to 25 prompts over 3 hours, including
    the initial prompts. So, you might want to limit games using **GPT-4** to 20 turns.
    **GPT-3.5** has no prompt limits, but the context window is smaller. Therefore,
    ChatGPT might lose context after a certain point in the game and forget details
    from earlier in the game. It should remember the turn and score since that is
    restated every turn, but details from earlier prompts, especially at and just
    after initialization, will be lost. This includes the entire setting. ChatGPT
    does, however, attempt to maintain context the best it can by deriving context
    from what it does have access to. Sometimes, that can be just enough.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Play around (pun intended) with the turn limit and even the theme or game style
    to find a setting that works for your interests and needs.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe essentially transforms ChatGPT into a game master for a role-playing
    game. RPGs typically involve a narrative experience where players assume the roles
    of characters in a fictional setting. The game master (or GM) is the person who
    runs the game, creates the story and the setting, and adjudicates the rules.
  prefs: []
  type: TYPE_NORMAL
- en: By providing ChatGPT with a prompt that establishes it as the game master, it’s
    directed to construct the narrative and guide you, the player, through the game.
    The prompt also instructs the model to track game progress, keep score, and provide
    a detailed report at the end of the game.
  prefs: []
  type: TYPE_NORMAL
- en: The effectiveness of this recipe relies heavily on ChatGPT’s capability to generate
    coherent and contextually relevant responses. It needs to maintain the continuity
    of the game narrative while simultaneously tracking the score and turn count.
    This is achieved by ensuring that each of ChatGPT’s responses includes a reminder
    of the turn and the current score.
  prefs: []
  type: TYPE_NORMAL
- en: However, it’s worth mentioning, yet again, the limitations that exist regarding
    the model’s capacity to remember context. The context window of **GPT-3.5** is
    smaller than **GPT-4**, which can impact the continuity of the game, especially
    if it extends over numerous turns.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe provides just a glimpse into the exciting and dynamic world of gamified
    cybersecurity training. By manipulating the prompts, the scope of the game, and
    the role of the AI, you can create entirely different scenarios that cater to
    different cybersecurity skills or areas of interest.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, in our recipe, we used a “who done it” mystery to identify the
    insider threat. However, you could potentially adapt this approach to your specific
    interests or needs. If you’re a more technically inclined person, you could focus
    the theme around the tasks for something more technical, such as performing a
    threat hunting exercise on a single system... RPG style! This unique blend of
    learning and entertainment provides a tailored educational experience, making
    the learning process much more engaging and fun.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, gamified cybersecurity training isn’t limited to solo play. It’s a
    fantastic tool for team building exercises, tradeshow events, or even a game night
    with friends. By fostering an interactive learning environment, you can elevate
    the educational experience, making it more memorable and effective.
  prefs: []
  type: TYPE_NORMAL
