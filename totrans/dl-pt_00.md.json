["```py\nx,y = get_data() # x - represents training data,y -                 represents target variables\n\nw,b = get_weights() # w,b - Learnable parameters\n\nfor i in range(500):\n    y_pred = simple_network(x) # function which computes wx + b\n    loss = loss_fn(y,y_pred) # calculates sum of the squared differences of y and y_pred\n\nif i % 50 == 0: \n        print(loss)\n    optimize(learning_rate) # Adjust w,b to minimize the loss\n```", "```py\nconda install pytorch torchvision cuda80 -c soumith\n```"]