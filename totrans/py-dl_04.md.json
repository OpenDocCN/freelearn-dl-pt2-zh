["```py\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets(\"MNIST_data/\")\n```", "```py\ninput_placeholder = tf.placeholder(\"float\", shape=(None, 784))\n```", "```py\nweights = tf.Variable(tf.random_normal((784, 300), mean=0.0, stddev=1./784))\n```", "```py\nhidden_bias = tf.Variable(tf.zeros([300]))\nvisible_bias = tf.Variable(tf.zeros([784]))\n```", "```py\nhidden_activation = tf.nn.sigmoid(tf.matmul(input_placeholder, weights) + hidden_bias)\n```", "```py\nvisible_reconstruction = tf.nn.sigmoid(tf.matmul(hidden_activation, tf.transpose(weights)) + visible_bias)\n```", "```py\nfinal_hidden_activation = tf.nn.sigmoid(tf.matmul(visible_reconstruction, weights) + hidden_bias)\n```", "```py\nPositive_phase = tf.matmul(tf.transpose(input_placeholder), hidden_activation)\nNegative_phase = tf.matmul(tf.transpose(visible_reconstruction), final_hidden_activation)\n```", "```py\nLEARING_RATE = 0.01\nweight_update = weights.assign_add(LEARING_RATE * (positive_phase â€“ negative_phase))\n```", "```py\nvisible_bias_update = visible_bias.assign_add(LEARING_RATE * tf.reduce_mean(input_placeholder - visible_reconstruction, 0))\nhidden_bias_update = hidden_bias.assign_add(LEARING_RATE * tf.reduce_mean(hidden_activation - final_hidden_activation, 0))\n```", "```py\ntrain_op = tf.group(weight_update, visible_bias_update, hidden_bias_update)\n```", "```py\nloss_op = tf.reduce_sum(tf.square(input_placeholder - visible_reconstruction))\n```", "```py\nsession = tf.Session()\nsession.run(tf.initialize_all_variables())\n```", "```py\ncurrent_epochs = 0\n\nfor i in range(10):\n    total_loss = 0\n    while mnist.train.epochs_completed == current_epochs:\n        batch_inputs, batch_labels = mnist.train.next_batch(100)\n        _, reconstruction_loss = session.run([train_op, loss_op], feed_dict={input_placeholder: batch_inputs})\n        total_loss += reconstruction_loss\n\n    print(\"epochs %s loss %s\" % (current_epochs, reconstruction_loss))\n    current_epochs = mnist.train.epochs_completed\n```", "```py\nepochs 0 loss 1554.51\nepochs 1 loss 792.673\nepochs 2 loss 572.276\nepochs 3 loss 479.739\nepochs 4 loss 466.529\nepochs 5 loss 415.357\nepochs 6 loss 424.25\nepochs 7 loss 406.821\nepochs 8 loss 354.861\nepochs 9 loss 410.387\nepochs 10 loss 313.583\n\n```", "```py\nreconstruction = session.run(visible_reconstruction, feed_dict={input_placeholder:[mnist.train.images[0]]})\n```"]