["```py\nwith torch.autocast(device_type=device, dtype=torch.float16):    output = model(images).to(device)\n    loss = criterion(output, labels)\n```", "```py\nscaler = torch.cuda.amp.GradScaler()with torch.autocast(device_type=device, dtype=torch.float16):\n    output = model(images).to(device)\n    loss = criterion(output, labels)\noptimizer.zero_grad()\nscaler.scale(loss).backward()\nscaler.step(optimizer)\nscaler.update()\n```"]