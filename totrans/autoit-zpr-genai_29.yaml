- en: '25'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Challenging Your Problem-Solving and Zap-Building Skills
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will take a look at three scenarios that will help you assess
    your problem-solving and Zapier workflow-building skills. First, we will describe
    a specific problem that can be solved using Zapier and work through each example
    with a suggested solution, with tips provided along the way. The scenarios are
    classified by skill level, and you will have the opportunity to put your knowledge
    to the test and adapt your problem-solving and Zap-building skills.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following key topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction and guidance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Three scenarios (novice, intermediate, and advanced)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guidance on suggested solutions for each scenario
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have worked through each of these topics, you will be able to build
    complex Zaps from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this chapter, you will need access to a Zapier account.
    The Zapier Starter plan will be required for you to use Premium apps and to create
    multi-step workflows. The Professional plan will be required for you to create
    Zaps with Paths by Zapier.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction and guidance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have provided three different scenarios that increase in difficulty to test
    your problem-solving and workflow-building skills. When formulating your solutions,
    try to use the built-in apps by Zapier in your problem-solving where possible.
    This will optimize your Zap building without you having to use other apps. Also,
    try to use as few steps as possible to reduce your task usage.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, there are many ways that you can create a workflow. Just like the
    apps that you’re using in your business are likely to be different from someone
    else’s, the logic that you use for your Zaps is also likely to be different from
    someone else’s. The aim is to create Zapier workflows for repeatable processes
    with as few steps as possible and no errors. There are no wrong answers if the
    Zap achieves the objective. You can do this by designing a process that makes
    the most of the available features and integrations in the apps that are being
    used, and then balancing this with Zapier workflows to achieve the ultimate automation
    goal.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, be creative and think outside the box.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have read through the scenarios, go ahead and try to build out the
    Zap. If you need some inspiration, you can review a suggested solution in the
    *Guidance on suggested solutions for each* *scenario* section.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have a better understanding of how to tackle the three scenarios
    and get the best results from these challenges, let’s dive into the scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: Three scenarios (novice, intermediate, and advanced)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you have the opportunity to work through three scenarios of
    increasing difficulty. Once you have read through the scenarios, go ahead and
    try to build out your Zaps to solve the problems presented.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s explore the first one.
  prefs: []
  type: TYPE_NORMAL
- en: Scenario 1 – novice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Dave runs an online business selling courses and membership programs. He uses
    Kajabi, a popular course platform, to host multiple courses and memberships. However,
    he wants to implement a highly converted standalone sales page app with a payment
    solution that gives him more flexibility with offers, discounts, and upsells.
    Kajabi does not integrate with many third-party apps, so whatever solution Dave
    chooses might not integrate with the course platform. Dave wants to streamline
    and automate his processes to reduce the time he spends manually granting access
    to the relevant course or membership program once the person has purchased the
    product through the sales page app. The problem Dave is likely to have when creating
    his workflow is that the product IDs in the two apps may not match. As the Kajabi
    integration with Zapier does not have any search actions, he is not able to use
    the product name to find the course product. Dave would also like to incorporate
    upsells and downsells, as well as account for access being removed after a refund
    is processed.
  prefs: []
  type: TYPE_NORMAL
- en: Can you suggest a better process for Dave by introducing a sales page app to
    his business and connecting this to Kajabi with Zapier?
  prefs: []
  type: TYPE_NORMAL
- en: You should now be able to solve a problem that requires novice Zap-building
    skills. Now, let’s have a look at a more complex scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Scenario 2 – intermediate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Winnie runs a small gardening and landscaping service with a team member, Eugene.
    Winnie receives inquiries for quotations via a contact form on her website. These
    inquiries include the lead’s name, email address, contact number, job location
    address, budget, preferred project date, and inquiry notes. She creates a quotation
    by email; once a customer has accepted a quotation for a job with a response,
    Winnie adds the new customer details to her Rolodex and writes the agreed project
    dates in her diary. She then emails her colleague, Eugene, with the date, start
    time, number of hours, and location of the project. She does not book more than
    one project in a day to allow for travel time; all projects start at 9 A.M. and
    they never leave for the job before 7 A.M. On the day the project starts, both
    she and Eugene check the weather separately to decide whether they need to take
    waterproof clothing just in case it rains. They both also have to double-check
    the start time and location in the diary or the email Winnie sent. Once the job
    is complete, Winnie writes out an invoice for the number of hours Eugene and she
    has worked on the job and posts it through the customer’s letterbox with payment
    instructions.
  prefs: []
  type: TYPE_NORMAL
- en: With this current process, Winnie spends a lot of time manually writing out
    details for her quotation in her Rolodex, diary, and invoice book, as well as
    typing out emails to Eugene and checking the weather. This process is not scalable,
    and as Winnie would like to grow the business, she would like to migrate to a
    digital process by using appropriate apps and automations that will make her job
    much more efficient. Both Winnie and Eugene use Gmail for their emails, all their
    jobs are localized to San Diego, and the customer’s invoice address is always
    the same as the project’s location.
  prefs: []
  type: TYPE_NORMAL
- en: Can you suggest a better process for Winnie by introducing other apps to her
    business that are more fit for purpose and connect her processes with Zapier?
    For this challenge, you must stick to a monthly app subscription budget of $50
    per month for any additional apps and limit the additional apps you introduce
    to three new paid apps (including Zapier). There is no limit to the number of
    built-in apps by Zapier that you can use in your workflows.
  prefs: []
  type: TYPE_NORMAL
- en: You should now be able to solve problems that require intermediate Zap-building
    skills. Next, we’ll have a look at the last scenario, which will test your advanced
    problem-solving skills.
  prefs: []
  type: TYPE_NORMAL
- en: Scenario 3 – advanced
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Liv is a career coach who runs a small firm with two other team members. The
    firm offers three types of coaching services with different prices and each team
    member is responsible for one of them. She currently receives inquiries via contact
    form submissions on her website. The contact form collects the lead’s name, email
    address, mobile number, the requested service, and additional inquiry notes. She
    responds to the inquiry by pasting a response template into an email from a document
    and customizing it to the inquiry, asking the contact the best time for them to
    have a Zoom call. Once she has responded, she manually adds the leads to a spreadsheet
    to track their progress through her sales cycle. The sheet has columns for each
    touchpoint in the sales cycle and Liv fills in each column once it is complete.
  prefs: []
  type: TYPE_NORMAL
- en: If the lead does not respond to the email, Liv manually follows this up with
    two further emails and a text message from her mobile over 3 days. If the lead
    does not respond after 5 days, she updates the spreadsheet to mark the lead as
    `Dead`.
  prefs: []
  type: TYPE_NORMAL
- en: If the lead responds to the emails or text messages, after some back-and-forth
    communication to arrange a meeting time, Liv meets with the lead on a Zoom call
    to discuss the inquiry. Once she has met with the lead, and if the project is
    not appropriate, Liv updates the spreadsheet to mark the lead as `Lost`.
  prefs: []
  type: TYPE_NORMAL
- en: If the project is appropriate, depending on the service the lead has requested,
    Liv chooses from three templates based on the service that has been selected,
    then manually creates a proposal in a document and sends the lead a PDF of the
    proposal by email. She then manually follows up the proposal with two emails spread
    over 4 days if the lead has not responded by email to accept the proposal. If
    she is unable to contact the lead or the lead does not respond, she updates the
    spreadsheet to mark the lead as `Dead`. If the lead accepts the terms and conditions
    in her proposal with a response to the email, she assigns the project to the relevant
    service owner in the team for them to start the onboarding process using another
    spreadsheet. The first step in the process is for the team member to send an email
    to the customer to book the coaching session with them.
  prefs: []
  type: TYPE_NORMAL
- en: With this current process, Liv spends a lot of time manually pasting templates
    into emails, following up on email responses, and updating the spreadsheet. Sometimes,
    she forgets to perform part of the process, doesn’t respond to leads, and forgets
    to record the progress on the spreadsheet, which results in her precious leads
    falling through the cracks. She uses Microsoft Outlook for her emails, WordPress
    for her website, a Microsoft Excel spreadsheet to record her leads, and a Microsoft
    Word document to record her email and proposal templates.
  prefs: []
  type: TYPE_NORMAL
- en: Can you suggest a better process for Liv by introducing other apps to her business
    that are more fit for purpose and connect her processes with Zapier? For this
    challenge, you must stick to a monthly app subscription budget of $150 per month
    for any additional apps and limit the additional apps you introduce to five new
    apps (including Zapier). There is no limit to the number of built-in apps by Zapier
    that you can use in your workflows.
  prefs: []
  type: TYPE_NORMAL
- en: You should now be able to solve a problem that requires advanced problem-solving
    and Zap-building skills. Now, let’s explore some suggested solutions for the three
    scenarios we have just presented.
  prefs: []
  type: TYPE_NORMAL
- en: Guidance on suggested solutions for each scenario
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you’ve given it a go and tried to build out your Zaps to solve the
    problems in each of the three scenarios, let’s go over a few suggested solutions
    to solve each of the problems. Remember, there are many ways to solve these problems,
    and the suggested solutions may allow you to broaden your thought process.
  prefs: []
  type: TYPE_NORMAL
- en: Scenario 1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There may be several ways to solve the problem that Dave has. To give you a
    hint at how you can potentially solve this problem, we will suggest that Dave
    uses ThriveCart as the sales page. You could suggest to Dave that he change from
    Kajabi to another course platform with more native integrations; however, in this
    case, it’s more practical to use Zapier to join the dots. To address the problem
    of product IDs not matching, the most important thing to include is a lookup table,
    using the ThriveCart product ID as the key and the Kajabi offer ID as the lookup
    value.
  prefs: []
  type: TYPE_NORMAL
- en: If you haven’t done so already, go ahead and try to build out the Zap.
  prefs: []
  type: TYPE_NORMAL
- en: You can then proceed to create other Zaps that perform similar actions for upsells
    and downsells, as well as accounting for access being removed after a refund.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: If you have multiple apps that you need to add as action steps and you consistently
    need to find data IDs to perform actions in the other apps, it is better to use
    a spreadsheet or database that can return multiple field values for one lookup
    key as opposed to adding multiple Formatter by Zapier Utilities Lookup Table steps.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll have a look at a possible solution to the second scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Scenario 2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are many ways to make Winnie’s processes more efficient. To give you a
    hint at how you can potentially solve this problem, I would suggest that, first
    of all, Winnie implements a quoting and invoicing tool that can hold her customer
    details. It might be useful if this is an accounting app, such as Xero, that allows
    her to keep track of her payments and expenses too.
  prefs: []
  type: TYPE_NORMAL
- en: When Winnie receives a contact form submission, she will use Email Parser by
    Zapier to extract the inquiry information. This will trigger a workflow in Zapier
    to create a new contact with their name, email address, phone number, and address
    in Xero, and create a quote with a standard description of `Gardening services`,
    noting the budget. In the quote, Winnie could specify the preferred project date
    in the **Reference** field; if she has no other place to add it, then she could
    put it as the last variable in the string of text in the line item in the quote.
    She will also use the **Quantity** field for the number of hours that they will
    work on the project.
  prefs: []
  type: TYPE_NORMAL
- en: When the quote is accepted digitally, it will trigger a workflow in Zapier to
    split the project date from the quote line item (if she is not using the **Reference**
    field) using Formatter by Zapier and create a new event in her and Eugene’s Google
    Calendars. The new event will be created with a start time of 9 A.M.; the number
    of hours from the quote will be used for the duration and the customer’s address
    will be used for the location. As Winnie and Eugene use their calendars for other
    events, the new event will be created with the description set to **Job** to identify
    it.
  prefs: []
  type: TYPE_NORMAL
- en: At 5 P.M., the day before the Google Calendar event starts (16 hours prior),
    a workflow will be triggered in Zapier that will use Filter by Zapier to continue
    only if the event description is **Job**. At this point, Zapier will check the
    weather forecast in San Diego for the next day with Weather by Zapier, and send
    an email using Email by Zapier to Winnie and Eugene with the weather forecast
    and job location. As Winnie forgets to check her emails regularly, she also needs
    an SMS to be sent to her using SMS by Zapier.
  prefs: []
  type: TYPE_NORMAL
- en: When the job is complete, Winnie converts the quote into an invoice and emails
    it to the customer from Xero, giving them the option to pay online using Stripe.
  prefs: []
  type: TYPE_NORMAL
- en: Winnie’s additional app costs are $20 per month for the Xero Starter Plan and
    $29.99 per month for the Zapier Starter Plan. Google Calendar is included in Winnie
    and Eugene’s Google Workspace subscriptions. That’s a total of two new apps at
    $49.99 per month.
  prefs: []
  type: TYPE_NORMAL
- en: If you haven’t done so already, go ahead and try to build out the Zaps involved
    in these improvements.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s have a look at a possible solution to the final scenario.
  prefs: []
  type: TYPE_NORMAL
- en: Scenario 3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are many ways to make Liv’s processes more efficient. To give you a hint
    at how you can potentially solve this problem, I suggest that, first of all, Liv
    consolidates her lead management processes by introducing an app such as a CRM.
    A CRM such as HubSpot will help Liv visualize her sales cycle in a pipeline with
    different stages that will mirror her touchpoints. It will also allow her to use
    email templates, use embeddable forms, and send emails straight from the CRM,
    among other features.
  prefs: []
  type: TYPE_NORMAL
- en: In HubSpot, Liv could set up her sales pipeline to have five stages called `New
    lead`, `Call booked`, `Proposal Sent`, `Closed lost`, and `Closed won`. She will
    also create a contact form that she can embed into her WordPress website. Now,
    Liv won’t need the spreadsheet.
  prefs: []
  type: TYPE_NORMAL
- en: We also suggest that Liv sets up a Calendly account with three users so that
    customers can book and pay for their coaching sessions via Stripe and integrate
    them with their Outlook calendars. For each team member, Liv could create coaching
    session events for each of the services.
  prefs: []
  type: TYPE_NORMAL
- en: When a contact form is submitted, the workflow will be triggered in Zapier to
    use Formatter by Zapier, which will look up the project price of the service from
    a `New lead` stage with the contact association that was created when the form
    was submitted; the project price will be the deal value, and the requested service
    and inquiry notes will be in custom fields within the deal. We will use Delay
    by Zapier to wait for 10 minutes before sending out an email using Microsoft Outlook.
    The email will be customized from a template that includes Liv’s Calendly meeting
    booking link and personalized with the contact’s first name and inquiry notes.
    The next steps in the Zap will involve a sequence that includes delays, checkpoints
    to establish which stage the deal is in, filters, and follow-up emails or SMS
    messages. For example, once the email has been sent, we will use Delay by Zapier
    to delay the workflow for 1 day, then after the delay, search for the deal details
    in HubSpot. Using Filter by Zapier, if the deal is still in the `New lead` stage,
    then Zapier will send the first follow-up email using Microsoft Outlook. This
    can be repeated for the next follow-up email and the follow-up SMS message, which
    could be sent by a service such as Voodoo SMS. After the SMS has been sent, we
    can delay the workflow for another 2 days, search for the deal, and if the deal
    is still in the `New lead` stage, update the deal to `Closed lost`.
  prefs: []
  type: TYPE_NORMAL
- en: If during this time the lead books a Zoom meeting through Calendly, this will
    trigger a workflow in Zapier to update the deal to the `Call booked` stage. The
    Calendly integration with Liv’s calendar and Zoom will create the relevant events.
  prefs: []
  type: TYPE_NORMAL
- en: Once Liv has had the call, if the project is not appropriate, Liv can update
    the deal to `Closed lost`. If it is appropriate, Liv can update the deal to `Proposal
    sent`. We could suggest that Liv uses a proposal or e-signature tool but as Liv
    does not require a signature for her service to be accepted, to keep the costs
    of additional apps down, we suggest Liv creates a free Google account and uses
    Google Slides to create customizable branded templates. She will have one template
    for each of her services with `{{proposal date}}`, `{{name}}`, and `{{price}}`
    placeholder variables to prefill the lead’s inquiry details.
  prefs: []
  type: TYPE_NORMAL
- en: The deal being moved to `Proposal sent` will trigger a new Zapier workflow that
    will involve a Formatter by Zapier step to format the date when the proposal is
    created (when the Zap runs) from `{{zap_meta_human_now}}` or `today` to a prettier
    format. We will use Paths by Zapier to create a path for each service, where the
    filter will only allow the path to continue if `Service` from the HubSpot custom
    field matches the text of the relevant service name. Then, we will create the
    Google Slides document from the template and send the PDF attached to a personalized
    email using Microsoft Outlook. Liv would also add the relevant team member’s Calendly
    links to each of the proposals to indicate that if they book a coaching call,
    they are agreeing to their terms and conditions and accepting the proposal. The
    next steps in the Zap will involve a sequence of steps that includes delays, checkpoints
    to establish which stage the deal is in, filters, and follow-up emails over 4
    days.
  prefs: []
  type: TYPE_NORMAL
- en: To manage the rest of the onboarding process, we could suggest that Liv creates
    a free Trello account and invites her team members to a “Coaching Onboarding”
    board. Once the lead books and pays for the call through Calendly, a workflow
    will be triggered in Zapier to search for a deal associated with the contact,
    update the deal to `Closed won`, and create a new card in Trello. The rest of
    the onboarding process can then be followed.
  prefs: []
  type: TYPE_NORMAL
- en: Liv’s additional app costs are $0 per month for HubSpot’s free CRM, $0 for Google
    Slides, $15 per month for the Calendly Pro plan, plus $8 per month per additional
    user, $0 per month for the Trello Free plan, and $73.50 per month for the Zapier
    Professional plan. That’s a total of five new apps at $104.50 per month.
  prefs: []
  type: TYPE_NORMAL
- en: If you haven’t done so already, go ahead and try to build out the Zaps involved
    in these improvements.
  prefs: []
  type: TYPE_NORMAL
- en: You should now be able to solve a variety of problems that require different
    levels of problem-solving and Zap-building skills.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you worked through three scenarios, ranging from novice to
    intermediate to advanced skill levels, to allow you to put your knowledge to the
    test and adapt your problem-solving and Zap-building skills. We described specific
    problems classified by skill level that can be solved using Zapier in combination
    with introducing new apps to a business to make the process more efficient. We
    also worked through each example to demonstrate how it could be solved.
  prefs: []
  type: TYPE_NORMAL
- en: You now know how to use Zapier to build complex workflow automations that will
    help you to make your business, or your clients’ businesses, more efficient.
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You’ve completed this book and you’re now well on your way
    to becoming a Zapier pro. You can get access to all the resources that were used
    in this book at [https://bit.ly/zapier-book](https://bit.ly/zapier-book).
  prefs: []
  type: TYPE_NORMAL
