["```py\n    Customer: Where the #$%@! is my order! I placed the order more than three days ago. How long can it take to package and ship a #$%@! tee-shirt?\n    Response: \n    ```", "```py\n    I don't know. This is my first #$%@! day on the job. If you want, I can call you a #$%@! taxi so you can come pick up your #$%@! Order.\n    ```", "```py\n    Customer: Where the #$%@! is my order! I placed the order more than three days ago. How long can it take to package and ship a #$%@! tee-shirt?\n    Polite Response: \n    ```", "```py\n    It can take up to 5 business days for in stock t-shirts to be processed. You ordered three t-shirts and each shirt takes a different amount of production time to be produced. There were some complications with your order but as of today your t-shirts should be fully prepared for shipping. \n    ```", "```py\n{\n    \"prompt\": \"<|endoftext|>Once upon a time\\n--\\nLabel:\",\n    \"max_tokens\": 1,\n    \"temperature\": 0.0,\n    \"top_p\": 0\n}\n```", "```py\n{\n    \"id\": \"cmpl-2auhZQYDGJNpeyzYNwMEm5YsAAUEK\",\n    \"object\": \"text_completion\",\n    \"created\": 1615150445,\n    \"model\": \"toxicity-double-18\",\n    \"choices\": [\n        {\n            \"text\": \"0\",\n            \"index\": 0,\n            \"logprobs\": null,\n            \"finish_reason\": \"length\"\n        }\n    ]\n}\n```", "```py\n{\n    \"prompt\": [\n\"<|endoftext|>Oh\\n--\\nLabel:\",\n\"<|endoftext|>hi\\n--\\nLabel:\"\n],\n    \"max_tokens\": 1,\n    \"temperature\": 0.0,\n    \"top_p\": 0\n}\n```", "```py\n{\n    \"id\": \"cmpl-2bDTUPEzoCrtNBa2gbkpNVc1BcVh9\",\n    \"object\": \"text_completion\",\n    \"created\": 1615222608,\n    \"model\": \"toxicity-double-18\",\n    \"choices\": [\n        {\n            \"text\": \"0\",\n            \"index\": 0,\n            \"logprobs\": null,\n            \"finish_reason\": \"length\"\n        },\n        {\n            \"text\": \"0\",\n            \"index\": 1,\n            \"logprobs\": null,\n            \"finish_reason\": \"length\"\n    ]\n}\n```", "```py\n    {\n      \"prompt\" : \"<|endoftext|>Are you religious?\\n--\\nLabel:\",\n      \"max_tokens\" : 1,\n      \"temperature\" : 0.0,\n      \"top_p\" : 0\n    }\n    ```", "```py\n    change we need to make is on the line that contains Authorization – *line number 8* in the screenshot shown in *Figure 6.6*. We need to change it to pick up our environment variable in repl.it. To do that, we will replace the text 'Bearer {{OPENAI_API_KEY}}' from the code snippet with `Bearer ${process.env.OPENAI_API_KEY}`. Note that backticks are used rather than single quotes. This is because we're using a JavaScript template string as the value. This lets us merge in the ${process.env.OPENAI_API_KEY}, which will be replaced with the value of the OPENAI_API_KEY environment variable. For details about template literals/strings, visit the following link:[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\n    ```", "```py\n    var axios = require('axios');\n    var data = JSON.stringify({\n      \"prompt\": \"<|endoftext|>What religion are you?\\n--\\nLabel:\",\n      \"max_tokens\": 1,\n      \"temperature\": 0,\n      \"top_p\": 0\n    });\n    var config = {\n      method: 'post',\n      url: 'https://api.openai.com/v1/engines/content-filter-alpha-c4/completions',\n      headers: { \n        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`, \n        'Content-Type': 'application/json'\n      },\n      data : data\n    };\n    axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n    ```", "```py\n    Run \"node chapter06/filter.js\"\n    ```", "```py\n    Run = \"node chapter06/flag.js\"\n    ```", "```py\n    var axios = require('axios');\n    const textInput = \"This is some text that will be filtered\";\n    ```", "```py\n    const prompts = [];\n    ```", "```py\n    const wordArray = textInput.split(' ');\n    for (i = 0, len = wordArray.length, text = \"\"; i < len; i++) {\n      text = `<|endoftext|>${wordArray[i]}\\n--\\nLabel:`;\n      prompts.push(text);\n    }\n    ```", "```py\n    var data = JSON.stringify({\"prompt\": prompts,\"max_tokens\":1,\"temperature\":0,\"top_p\":0});\n    ```", "```py\n        response.data.choices.forEach(item => {\n          console.log(`${wordArray[item.index]} : ${item.text}`);\n    ```", "```py\n    import os\n    ```", "```py\n    'Authorization':'Bearer ' + os.environ.get(\"OPENAI_API_KEY\")\n    ```", "```py\n    import os\n    import requests\n    import json\n    url = \"https://api.openai.com/v1/engines/content-filter-alpha-c4/completions\"\n    payload = json.dumps({\n      \"prompt\": \"<|endoftext|>What religion are you?\\n--\\nLabel:\",\n      \"max_tokens\": 1,\n      \"temperature\": 0,\n      \"top_p\": 0\n    })\n    headers = {\n      'Authorization':'Bearer ' + os.environ.get(\"OPENAI_API_KEY\"),\n      'Content-Type': 'application/json'\n    }\n    response = requests.request(\"POST\", url, headers=headers, data=payload)\n    print(response.text)\n    ```", "```py\n    Run \"python chapter06/filter.py\"\n    ```", "```py\n    Run = \"python chapter06/flag.py\"\n    ```", "```py\n    textInput = \"What religion are you?\"\n    ```", "```py\n    prompts = []\n    ```", "```py\n    wordArray = textInput.split()\n    for word in wordArray:\n      prompts.append(\"<|endoftext|>\" + word + \"\\n--\\nLabel:\")\n    ```", "```py\n    payload = json.dumps({\n      \"prompt\" : prompts,\n      \"max_tokens\" : 1,\n      \"temperature\" : 0.0,\n      \"top_p\" : 0\n      })\n    ```", "```py\n    for word in response.json()['choices']:\n      print(wordArray[word['index']] + ' : ' + word['text'])\n    ```"]