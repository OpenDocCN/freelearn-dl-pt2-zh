["```py\nfrom __future__ import absolute_import, division, print_function, unicode_literals\nimport tensorflow as tf \n```", "```py\nx = tf.ones((2, 2))\nwith tf.GradientTape() as t:\n  t.watch(x)\n  y = tf.reduce_sum(x)\n  z = tf.multiply(y, y)\n# Use the tape to compute the derivative of z with respect to the\n# intermediate value y.\ndz_dy = t.gradient(z, y)\n# note that the resulting derivative, 2*y, = sum(x)*2 = 8\nassert dz_dy.numpy() == 8.0 \n```", "```py\nx = tf.constant(3.0)\nwith tf.GradientTape(persistent=True) as t:\n  t.watch(x)\n  y = x * x\n  z = y * y\ndz_dx = t.gradient(z, x)  # 108.0 (4*x^3 at x = 3)\ndy_dx = t.gradient(y, x)  # 6.0 \n```"]