- en: '17'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Text Formatting Functions in Zapier – Part 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 16*](B18474_16.xhtml#_idTextAnchor1761), *Text Formatting Functions
    in Zapier – Part 1*, we introduced several of the Formatter by Zapier built-in
    app text transform options. In this chapter, we will continue to discuss the functionality
    that Zapier has available to format text.
  prefs: []
  type: TYPE_NORMAL
- en: First, we will explore how to create a superhero name, split text into segments,
    and truncate text. Then, we will cover how to remove HTML to leave plain text,
    how to assign a default value, and how to transform text with a spreadsheet-style
    formula. After that, we will discuss the possibilities of how to extract email
    addresses, numbers, URLs, and phone numbers from blocks of text. Lastly, we will
    briefly discuss the more advanced functions of how to extract patterns, convert
    HTML into Markdown and vice versa, convert text into ASCII, and finally, encode
    and decode URLs.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following key topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Converting a name into the name of a superhero
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Splitting characters or words into segments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Truncating text to a specified character length
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removing HTML tags to leave plain text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assigning a default value
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transforming text with a spreadsheet-style formula
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracting data from blocks of text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced text formatting features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can use the magic AI to ask Zapier to format data in your Zap steps, which
    will then create Formatter by Zapier steps with the relevant transform options.
    We will discuss this in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216), *AI*
    *and Automation*.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have worked through each of these topics, you will have a better understanding
    of the different text-transforming functions available for use with the Formatter
    by Zapier built-in app. You will know how to use Zapier to adjust text so that
    it’s in various formats.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To make the most of the content in this chapter, you will need access to a Zapier
    account. The Zapier Starter plan will be required for you to create multi-step
    workflows using the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Converting a name into the name of a superhero
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far in this book, we’ve covered plenty of useful, although quite formal,
    formatting functions that can be used for various business cases. Zapier is not
    all just about being formal. Sometimes, you might want to have a bit of fun and
    be playful with text formatting. Zapier can convert any name or a short string
    of text into a randomly chosen name of a superhero by using the Formatter by Zapier
    `Kelly Goss`, the transformed text might be `Space Fury`. This text transform
    function is great to use when you want to do something fun and outside of the
    norm with your data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: You might want new subscribers to be randomly assigned superhero names that
    you will address them by in your email communications. So, when `John Smith` signs
    up for your email newsletter in `Scarlet Flame`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You might like to have a bit of fun with your staff and decide to assign all
    new staff members superhero names when they are added as users to Asana. You could
    then send them an email to welcome them to the Asana team and let them know their
    new superhero name.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, let’s review how to set up an action step with the **Superhero Name**
    transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Superhero Name transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Superhero Name** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the text of the name or word string that
    you want to transform into a superhero name. You can either enter a static value,
    a dynamic value from previous steps, or a combination of both to specify the **Input**
    value. Although this is not a required field, the formatter function will not
    return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.1 – Using the Formatter by Zapier Text action event to transform
    words into a superhero name](img/B18474_17_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.1 – Using the Formatter by Zapier Text action event to transform words
    into a superhero name
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the superhero name. The result from the scenario in
    *Figure 17**.1* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.2 – An example of the altered value when using the Text action
    event to convert words into a superhero name](img/B18474_17_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.2 – An example of the altered value when using the Text action event
    to convert words into a superhero name
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Superhero Name**
    transform function. Next, let’s take a look at how to split characters or words
    into segments with the **Split Text** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Splitting characters or words into segments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Being able to manipulate text with a splitting function is possibly one of the
    most versatile functions of all the Formatter by Zapier text transform options.
    There will be many occasions where data is presented as a string of text and you
    will want to extract one or more words from that string to then use in other parts
    of your workflows. A common example of this is the need to use either the first
    or last name when only the full name is presented. You can use the Formatter by
    Zapier **Text** action event with the **Split Text** transform function to split
    the word string to return the two values.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use words or characters to split text, and the **Split Text** transform
    function allows you to split words or strings of words that are separated by special
    characters using special character syntax, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`[:space:]` syntax is used to match space (`\``s`) characters'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[:tab:]` syntax is used to match tab (`\``t`) characters'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[:newline:]` syntax is used to match newline (`\n`) characters, which are
    those used to identify the end of a line of text or the start of a new line'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[:return:]` syntax is used to match carriage-return (`\r`) characters, which
    are those that denote the start of the current line (at the left margin)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When a new lead fills out a web form, you might have a field for them to enter
    their full name instead of separate fields for first and last name. If you wanted
    to use their first name only in an email or add their first and last name as individual
    fields to your CRM, you could use the **Split Text** transform function accordingly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You might use an e-sign app that does not integrate with Zapier but you receive
    an email confirmation once the document has been signed with the title of the
    document as the subject. Once that document has been signed, you might want to
    search for data in a row on a Google Sheets spreadsheet using the signee’s company
    name, which you have strategically placed as the first word in the document’s
    name. You can use the **Split Text** transform function to split out the first
    word in the string in the email subject.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s review how to set up an action step with the **Split Text** transform
    option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Split Text transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Split Text** option. This
    is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the string of text that you want to split.
    You can either enter a static value, a dynamic value from previous steps, or a
    combination of both to specify the **Input** value. Although this is not a required
    field, the formatter function will not return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[:space:]` syntax. Although this is not a required field, if left blank, the
    default is the `[:``space:]` syntax.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Segment Index**: Use this drop-down field to select which segment of split
    text you want to return. The options are **First**, **Second**, **Last**, **Second
    to Last**, **All (as Line-items)**, and **All (as Separate Fields)**. The values
    returned when using **All (as Line-items)** can be used in steps where line items
    are supported – for example, in invoicing apps. You can either enter a static
    value, a dynamic value from previous steps, or a combination of both to specify
    this value. Although this is not a required field, if left blank, the **First**
    index will be returned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where we want to extract all
    values as separate items that have been separated by spaces:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.3 – Using the Formatter by Zapier Text action event to split text\
    \ separated by\uFEFF s\uFEFFpaces](img/B18474_17_03.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.3 – Using the Formatter by Zapier Text action event to split text
    separated by spaces
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to split out text into a string of words. The result from the scenario
    in *Figure 17**.3* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.4 – An example of the altered value when using the Text action
    event to split a string of text separated by spaces](img/B18474_17_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.4 – An example of the altered value when using the Text action event
    to split a string of text separated by spaces
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Split Text**
    transform function.
  prefs: []
  type: TYPE_NORMAL
- en: There is another similar transform function called **Split Text into Chunks
    for AI Prompts (beta)** that allows you to modify larger amounts of data into
    smaller fragments of **chunks** to use with AI apps. We will discuss this transform
    option in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216), *AI* *and Automation*.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll discuss how to truncate text to a specified character length using
    the **Truncate** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Truncating text to a specified character length
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There may be times when you want to reduce the character length of a block of
    text so that you can use it as a summary, or you might have restrictions on the
    number of characters. A typical example of this is when posting content on social
    media where you have a fixed character length, such as reposting a Facebook post
    (which could have over 60,000 characters) to Twitter, which has a maximum character
    length of 280\. You can use the Formatter by Zapier `…`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you publish a new blog post on WordPress, you can truncate the blog post’s
    content to produce a teaser summary suitable to use on social media
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you post a new Facebook post, you can truncate it to a shorter character
    length and repost it on Twitter and LinkedIn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s review how to set up an action step with the **Truncate** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Truncate transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Truncate** option. This
    is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the text that you want to truncate. You
    can either enter a static value, a dynamic value from previous steps, or a combination
    of both to specify the **Input** value. Although this is not a required field,
    the formatter function will not return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Max Length**: Use this number field to enter a number value for the maximum
    number of characters you want the word string to be truncated to. You can either
    enter a static value, a dynamic value from previous steps, or a combination of
    both to specify this value. This is a required field and must have a value for
    the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`This is an example: Today''s weather is hot and sunny.` and you wanted to
    truncate `This is an example:`, you would enter `19` to skip those characters.
    You can either enter a static value, a dynamic value from previous steps, or a
    combination of both to specify this value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`…`. You can either use the dropdown or enter a static value, a dynamic value
    from previous steps, or a combination of both to specify this value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where we want to truncate
    a long Facebook post to 250 characters and append ellipses:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.5 – Using the Formatter by Zapier Text action event t\uFEFFo t\uFEFF\
    runcate text](img/B18474_17_05.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.5 – Using the Formatter by Zapier Text action event to truncate text
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to truncate characters in a string of words. The result from the
    scenario in *Figure 17**.5* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.6 – An example of the altered value when using the Text action
    event to truncate and append ellipses to a string of text](img/B18474_17_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.6 – An example of the altered value when using the Text action event
    to truncate and append ellipses to a string of text
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Truncate** transform
    function. Next, let’s cover how to remove HTML from blocks of text using the **Remove
    HTML Tags** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Removing HTML tags to leave plain text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As **HyperText Markup Language** (**HTML**) is used to customize the way data
    is displayed on the web, such as on websites, digital documents, and emails, there
    will be occasions when you will want to view just the plain text without any coding.
    You can use the Formatter by Zapier **Text** action event with the **Remove HTML
    Tags** transform function to achieve this by stripping out all the HTML coding
    to leave just the plain text behind.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to extract the body of an email, but the data is only presented
    in HTML
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you publish a new blog post on WordPress, and you want to remove any HTML
    before posting a teaser summary on social media
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s review how to set up an action step with the **Remove HTML Tags** transform
    option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Remove HTML Tags transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Remove HTML Tags** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the string of text that you want to remove
    the HTML tags from. You can either enter a static value, a dynamic value from
    previous steps, or a combination of both to specify the **Input** value. Although
    this is not a required field, the formatter function will not return a result
    if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.7 – Using the Formatter by Zapier Text action event to remove HTM\uFEFF\
    L \uFEFFfrom a block of text](img/B18474_17_07.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.7 – Using the Formatter by Zapier Text action event to remove HTML
    from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to remove HTML from a block of text. The result from the scenario
    in *Figure 17**.7* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.8 – An example of the altered value when using the Text action\uFEFF\
    \ e\uFEFFvent to remove HTML](img/B18474_17_08.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.8 – An example of the altered value when using the Text action event
    to remove HTML
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Remove HTML Tags**
    transform function. Next, let’s cover how to assign a default value.
  prefs: []
  type: TYPE_NORMAL
- en: Assigning a default value
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You might encounter situations where data has not been entered for whatever
    reason, therefore leaving a field blank. In some cases, this lack of data may
    cause problems later in your workflow. To prevent such problems, you might want
    to conditionally assign a value that acts as the default where data might be missing
    from a specific field. You can use the Formatter by Zapier **Text** action event
    with the **Default Value** transform function to achieve this by assigning a default
    value when a field contains no data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When new deals are created in Zoho CRM, but an owner has not been assigned,
    you may want to automatically assign these deals to a specific user who can then
    reassign the deal to a member of the team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When new cards are created in Trello but members have not been assigned, you
    may want to automatically assign these cards to a manager who then assigns the
    card to someone in the team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s review how to set up an action step with the **Default Value** transform
    option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Default Value transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Default Value** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the text that you want to truncate. You
    can either enter a static value, a dynamic value from previous steps, or a combination
    of both to specify the **Input** value. If a line-item value is entered, a line-item
    field will be returned. Although this is not a required field, the formatter function
    will not return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`[:space:]`, `[:tab:]`, `[:newline:]`, and `[:return:]` special character syntaxes.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where if a new Trello card
    does not have a member assigned, a senior staff member will be assigned in later
    steps by using their user ID in the **Default** **Value** field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.9 – Using the Formatter by Zapier Text action event to assign a
    default value](img/B18474_17_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.9 – Using the Formatter by Zapier Text action event to assign a default
    value
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to assign a default value if a text field is empty. The result
    from the scenario in *Figure 17**.9* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.10 – An example of the altered value when using the Text action\
    \ event t\uFEFFo as\uFEFFsign a default value](img/B18474_17_10.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.10 – An example of the altered value when using the Text action event
    to assign a default value
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Default Value**
    transform function. Next, let’s cover how to transform text using a spreadsheet-style
    formula with the **Spreadsheet-Style Formula** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Transforming text with a spreadsheet-style formula
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 15*](B18474_15.xhtml#_idTextAnchor1653), *Formatting Numbers*,
    we explored how to use the Formatter by Zapier **Numbers** action event and the
    **Spreadsheet-Style Formula** transform option to do complex calculations with
    numbers. You can use the Formatter by Zapier **Text** action event and the **Spreadsheet-Style
    Formula** transform option to do the same with text.
  prefs: []
  type: TYPE_NORMAL
- en: An example of this situation would be when you want to use complex `IF`, `AND`,
    or `OR` conditions – for example, if two text values match then output one result,
    otherwise output another. In this case, you could use `IF("value1"="value2", "``same",
    "different")`.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: When using text strings with this transform option, you must use quotation marks
    around the string, as shown in the preceding example.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s review how to set up the **Spreadsheet-Style Formula** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Spreadsheet-Style Formula transform
    option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon, and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Spreadsheet-Style Formula**
    option. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Formula**: Use this field to specify the formula with the text values that
    you want to use. Add static values for the formula and text values, or dynamic
    values mapped from previous steps under the **Custom** tab. This is a required
    field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zapier has created a handy reference document with various formulas that can
    be used with Formatter by Zapier, which you can refer to at [https://zapier.com/help/create/format/understand-spreadsheet-style-formula-functions](https://zapier.com/help/create/format/understand-spreadsheet-style-formula-functions).
  prefs: []
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.11 – Using the Formatter by Zapier Text action event to perform
    a spreadsheet-style operation](img/B18474_17_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.11 – Using the Formatter by Zapier Text action event to perform a
    spreadsheet-style operation
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the output. The result from the scenario in *Figure
    17**.11* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.12 – An example of the output value when using the Text action
    event to perform spreadsheet-style operations](img/B18474_17_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.12 – An example of the output value when using the Text action event
    to perform spreadsheet-style operations
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Spreadsheet-Style
    Formula** transform function. Next, let’s cover how to extract email addresses,
    numbers, URLs, and phone numbers from blocks of text using the **Extract** transform
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting data from blocks of text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another brilliant feature of the Formatter by Zapier’s **Text** action is its
    ability to extract data from blocks of text. This is especially useful if you
    have large strings of text and you want to return the first expressed value of
    an email address, number, phone number, or URL.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, your web form may not integrate with Zapier, but you receive a
    confirmation email with the submission details. The form asks the person submitting
    to add three email addresses, and you only want to extract the first email address
    entered. Alternatively, you may want to retrieve a phone number, URL, or number
    from this web form submission. You can use the Formatter by Zapier **Text** action
    event with the following transform functions to achieve this:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Extract** **Email Address**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extract Number**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extract URL**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extract** **Phone Number**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To illustrate how to use each of these transform functions, we will use the
    trigger data highlighted in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.13 – Trigger data that will be used to illustrate extracting data
    from blocks of text](img/B18474_17_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.13 – Trigger data that will be used to illustrate extracting data
    from blocks of text
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s dive into each of these transform functions in turn.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting an email address from a block of text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When using the `@` symbol and a site domain name, such as `solvaa.co.uk` – for
    example, `joe-bloggs1@abccompany.com`. It will not recognize disjunct email address
    strings with spaces, such as `Joe Bloggs at abccompany` `dot com`.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s review how to set up an action step with the **Extract Email Address**
    transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Extract Email Address transform option
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Extract Email Address**
    option. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: You can use this field to enter some text to extract the first email
    address from a block of text. You can either enter a static value, a dynamic value
    from previous steps, or a combination of both to specify the **Input** value.
    Although this is not a required field, the formatter function will not return
    a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.14 – Using the Formatter by Zapier Text action event to \uFEFF\
    ex\uFEFFtract an email address from a block of text](img/B18474_17_14.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.14 – Using the Formatter by Zapier Text action event to extract an
    email address from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to extract an email address from a block of text. The result of
    the scenario in *Figure 17**.14* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.15 – An example of the returned value when using the Text action
    event to extract an email address from a block of text](img/B18474_17_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.15 – An example of the returned value when using the Text action event
    to extract an email address from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s discuss how to extract numbers from blocks of text using the **Extract
    Number** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting numbers from blocks of text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When using the `1,758,000.82`, whereas `1-758-000-82` would only extract the
    first number before the first dash. In other words, only `1` would be extracted.
    Let’s review how to set up an action step with the **Extract Number** transform
    option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Extract Number transform option
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Extract Number** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the block of text containing the number
    that you want to extract. You can either enter a static value, a dynamic value
    from previous steps, or a combination of both to specify the **Input** value.
    Although this is not a required field, the formatter function will not return
    a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.16 – Using the Formatter by Zapier Text action event to extract
    a number from a block of text](img/B18474_17_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.16 – Using the Formatter by Zapier Text action event to extract a
    number from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to extract a number from a block of text. The result from the scenario
    in *Figure 17**.16* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.17 – An example of the returned value when using the Text action
    event to extract a number from a block of text](img/B18474_17_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.17 – An example of the returned value when using the Text action event
    to extract a number from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: From the trigger data shown in *Figure 17**.13*, if the phone number was displayed
    first, the value that would be returned from the phone number would be `1`.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s explore how to extract URLs from blocks of text using the **Extract
    URL** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting URLs from blocks of text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When using the `.com`, `.org`, `.co.uk`, or `.com.au`. You can find out more
    about TLDs here: [https://en.wikipedia.org/wiki/Top-level_domain](https://en.wikipedia.org/wiki/Top-level_domain).
    The formatter also recognizes the `https://` and `http://` prefixes, as well as
    subdomains, folders, and query parameters. Therefore, an accepted string example
    would be [https://solvaa.co.uk/?s=zapier](https://solvaa.co.uk/?s=zapier). It
    will not recognize disjunct URL strings with spaces, such as `solvaa` `dot com`.'
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to set up an action step with the **Extract URL** transform
    option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Extract URL transform option
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Extract URL** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the block of text containing the URL that
    you want to extract. You can either enter a static value, a dynamic value from
    previous steps, or a combination of both to specify the **Input** value. Although
    this is not a required field, the formatter function will not return a result
    if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.18 – Using the Formatter by Zapi\uFEFFer\uFEFF Text action event\
    \ to extract a URL from a block of text](img/B18474_17_18.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.18 – Using the Formatter by Zapier Text action event to extract a
    URL from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Action** section to
    test this step to extract a URL from a block of text. The result from the scenario
    in *Figure 17**.18* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.19 – An example of the returned value when using th\uFEFFe Text\
    \ action even\uFEFFt to extract a URL from a block of text](img/B18474_17_19.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.19 – An example of the returned value when using the Text action event
    to extract a URL from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s take a look at how to extract phone numbers from blocks of text
    using the **Extract Phone Number** transform function.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting phone numbers from blocks of text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When using the `x`, `ext`, or `extension`. For example, an acceptable phone
    number string would be `+44 (``758) 592-0332`.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to set up an action step with the **Extract Phone Number**
    transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Text action event with the Extract Phone Number transform option
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use the **Text** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Text** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Extract Phone Number**
    option. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the block of text containing the phone number
    that you want to extract. You can either enter a static value, a dynamic value
    from previous steps, or a combination of both to specify the **Input** value.
    Although this is not a required field, the formatter function will not return
    a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Phone Number Format**: Use this drop-down field to select which phone number
    format you want to use for the search. The options are **North American Number
    Plan (NANP) e.g. (123) 456-7890**, **International e.g. (12) 34-56-78-90**, **Universal
    1 (includes NANP and some International)**, and **Universal 2 (includes NANP and
    some International)**. The default that’s used in searches is **Universal 1 (includes
    NANP and some International)**, which will recognize most NANP and international
    numbers. Choose one of the other options for more specific searches if this proves
    unreliable.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.20 – Using the Formatter by Z\uFEFFap\uFEFFier Text action event\
    \ to extract a number from a block of text](img/B18474_17_20.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.20 – Using the Formatter by Zapier Text action event to extract a
    number from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to extract a phone number in Universal 1 format from a block of
    text. The result from the scenario in *Figure 17**.20* is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 17.21 – An example of the returned value when using t\uFEFFhe Te\uFEFF\
    xt action event to extract a number from a block of text](img/B18474_17_21.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 17.21 – An example of the returned value when using the Text action event
    to extract a number from a block of text
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Text** action step.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to extract data from blocks
    of text using the **Extract Email Address**, **Extract Number**, **Extract URL**,
    and **Extract Phone Number** transform functions. Next, let’s review the advanced
    text formatting features that Zapier has to offer.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced text formatting features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you have learned so far, the Formatter by Zapier built-in app allows you
    to manipulate text in many versatile ways without having any knowledge of coding
    or any technical background whatsoever. There are, however, a few transform functions
    that allow you to manipulate text using programming languages. As these are advanced
    topics, we will only provide a brief overview of their functionality, without
    going into too much detail.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following transform options can be used to manipulate text with programming
    languages:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Extract Pattern**: You can use this transform option when you need to extract
    partial data from a field with more specificity than the other **Extract** transform
    options we have covered. This allows you to use Python **regular expressions**
    (**regexes**). You can find out more about Python regexes here: [https://developers.google.com/edu/python/regular-expressions](https://developers.google.com/edu/python/regular-expressions).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Convert HTML to Markdown**: You can use this transform option when you want
    to convert **HTML** into **Markdown**, a markup language used to add formatting
    elements to plain text. You can find out more about Markdown here: [https://en.wikipedia.org/wiki/Markdown](https://en.wikipedia.org/wiki/Markdown).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Convert Markdown to HTML**: You can use this transform option to do the reverse
    of the preceding, converting Markdown into HTML.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Convert to ASCII**: You can use this transform option when you want to convert
    plain text into **American Standard Code for Information Interchange** (**ASCII**).
    You can find out more about ASCII here: [https://en.wikipedia.org/wiki/ASCII](https://en.wikipedia.org/wiki/ASCII).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**URL Encode**: You can use this transform option when you want to encode non-approved
    characters such as spaces to **Uniform Resource Identifier** (**URI**) approved
    characters. You can find out more about **URL encoding** here: [https://en.wikipedia.org/wiki/URL_encoding](https://en.wikipedia.org/wiki/URL_encoding).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**URL Decode**: You can use this transform option to do the reverse of the
    preceding and decode URI-approved characters to non-approved characters.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the various advanced
    text formatting features of the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we continued to focus on the versatile Formatter by Zapier
    built-in app and the extensive functionality available to format text. First,
    we explored how to create a superhero name, split text into segments, truncate
    text, remove HTML, and use a default value. Then, we covered how to extract data
    from text – specifically, how to extract URLs, phone numbers, numbers, and email
    addresses. Lastly, we briefly discussed the more advanced functions for extracting
    patterns, converting Markdown into HTML and vice versa, converting text into ASCII,
    and encoding or decoding URLs.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn how to use the **Utilities** functions within
    the Formatter built-in app. We will cover line item creation and customization,
    converting text into line items and vice versa, using lookup tables and picklists,
    and importing CSV files.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which transform option of the Formatter by Zapier built-in app could you use
    if you wanted to separate the full name of a person into first name and last name
    presented as two values?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When might you want to use the **Truncate** transform option of the **Text**
    action event of Formatter by Zapier?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
