["```py\nSocial media post: \"My favorite restaurant is opening again Monday. I can't wait!\"\nSentiment (positive, neutral, negative):\n```", "```py\n{\n  \"query\": \"That makes me smile\",\n  \"examples\": [\n    [\"That is awesome\", \"Happy\"],\n    [\"I feel so sad\", \"Sad\"],\n    [\"I don't know how I feel\", \"Neutral\"]\n  ],\n  \"model\": \"curie\"\n}\n```", "```py\n{\"text\": \"that is awesome\", \"label\": \"Happy\", \"metadata\": {\"id\":\"1\"}}\n{\"text\": \"i feel so sad\", \"label\": \"Sad\", \"metadata\": {\"id\":\"2\"}}\n{\"text\": \"i don't know how i feel\", \"label\": \"Neutral\", \"metadata\": {\"id\":\"3\"}}\n```", "```py\n    const axios = require('axios');\n    const client = axios.create({\n      headers: {\n        'Authorization': 'Bearer ' + process.env.OPENAI_API_KEY\n      }\n    });\n    const endpoint = \"https://api.openai.com/v1/classifications\";\n    ```", "```py\n    const examples = [\n      [\"The service was super quick. I love that.\",\"Good\"],\n      [\"Would not go back.\",\"Poor\"],\n      [\"I tried the chicken and cranberry pizza...mmmm!\",\"Good\"],\n      [\"There were no signs indicating cash only!\",\"Poor\"],\n      [\"I was disgusted. There was a hair in my food.\",\"Poor\"],\n      [\"The waitress was a little slow but friendly.\",\"Neutral\"]\n    ]\n    ```", "```py\n    const params = {\n      \"query\": \"I'm never going to this place again\",\n      \"examples\": reviews,\n      \"model\": \"curie\"\n    }\n    ```", "```py\n    client.post(endpoint, params)\n      .then(result => {\n        console.log(params.query + '\\nLABEL:' + result.data.label);\n      }).catch(err => {\n        console.log(err);\n      });\n    ```", "```py\n    run = \"node chapter08/reviews-classifier.js\"\n    ```", "```py\n    import requests\n    import os\n    import json\n    headers = {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + os.environ.get(\"OPENAI_API_KEY\")\n    }\n    endpoint = \"https://api.openai.com/v1/classifications\"\n    ```", "```py\n    examples = [\n      [\"The service was super quick. I love that.\",\"Good\"],\n      [\"Would not go back.\",\"Poor\"],\n      [\"I tried the chicken and cranberry pizza...mmmm!\",\"Good\"],\n      [\"There were no signs indicating cash only!\",\"Poor\"],\n      [\"I was disgusted. There was a hair in my food.\",\"Poor\"],\n      [\"The waitress was a little slow but friendly.\",\"Neutral\"]\n    ]\n    ```", "```py\n    params = {\n      \"query\": \"I'm never going to this place again\",\n      \"examples\": examples,\n      \"model\": \"curie\"\n    }\n    ```", "```py\n    result = requests.post(endpoint, headers=headers, data=json.dumps(params))\n    print(params[\"query\"] + '\\nLABEL:' + result.json()[\"label\"])\n    ```", "```py\n    run = \"python chapter08/reviews-classifier.py\"\n    ```", "```py\n    const axios = require('axios');\n    const apiKey = process.env.OPENAI_API_KEY;\n    const client = axios.create({\n      headers: { 'Authorization': 'Bearer ' + apiKey }\n    });\n    const endpoint = \"https://api.openai.com/v1/engines/davinci/completions\";\n    ```", "```py\n    const params = {\n      prompt: \"Provide an ESRB rating for the following text:\\n\\n\\\"i'm going to hunt you down, and when I find you, I'll make you wish you were dead.\\\"\\n\\nESRB rating:\",\n      temperature: 0.7,\n      max_tokens: 60,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0,\n      stop: [\"\\n\"]\n    }\n    ```", "```py\n    client.post(endpoint, params)\n      .then(result => {\n        console.log(params.prompt + result.data.choices[0].text);\n        // console.log(result.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    ```", "```py\n    run = \"node chapter08/esrb-rating-classifier.js\"\n    ```", "```py\n    import requests\n    import os\n    import json\n    headers = {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + os.environ.get(\"OPENAI_API_KEY\")\n    }\n    endpoint = 'https://api.openai.com/v1/engines/davinci/completions'\n    ```", "```py\n    params = {\n      \"prompt\": \"Provide an ESRB rating for the following text:\\n\\n\\\"i'm going to hunt you down, and when I find you, I'll make you wish you were dead.\\\"\\n\\nESRB rating:\",\n      \"temperature\": 0.7,\n      \"max_tokens\": 60,\n      \"top_p\": 1,\n      \"frequency_penalty\": 0,\n      \"presence_penalty\": 0,\n      \"stop\": [\"\\n\"]\n    }\n    ```", "```py\n    result = requests.post(endpoint, headers=headers, data=json.dumps(params))\n    print(params[\"prompt\"] + result.json()[\"choices\"][0][\"text\"])\n    ```", "```py\n    run = \"node chapter08/esrb-rating-classifier.js\"\n    ```", "```py\n    const axios = require('axios');\n    const apiKey = process.env.OPENAI_API_KEY;\n    const client = axios.create({\n      headers: { 'Authorization': 'Bearer ' + apiKey }\n    });\n    const endpoint = \"https://api.openai.com/v1/classifications\";\n    ```", "```py\n    const examples = [\n      [\"Hello, I'm interested in applying for the prompt designer position you are hiring for. Can you please tell me where I should send my resume?\",\"English\"],\n      [\"Здравствуйте, я хочу подать заявку на должность быстрого дизайнера, на которую вы нанимаете. Подскажите, пожалуйста, куда мне отправить резюме?\",\"Russian\"],\n      [\"Hola, estoy interesado en postularme para el puesto de diseñador rápido para el que está contratando. ¿Puede decirme dónde debo enviar mi currículum?\", \"Spanish\"],\n      [\"Bonjour, je suis intéressé à postuler pour le poste de concepteur rapide pour lequel vous recrutez. Pouvez-vous me dire où je dois envoyer mon CV?\",\"French\"],\n      [\"नमस्कार, मैं उस त्वरित डिज़ाइनर पद के लिए आवेदन करने में रुचि रखता हूं, जिसके लिए आप नौकरी कर रहे हैं। क्या आप मुझे बता सकते हैं कि मुझे अपना रिज्यूम कहां भेजना चाहिए?\",\"Hindi\"]\n    ]\n    ```", "```py\n    const params = {\n      \"query\": \"¿Con quién debo comunicarme sobre ofertas de trabajo técnico?\",\n      \"examples\": examples,\n      \"model\": \"curie\"\n    }\n    ```", "```py\n    client.post(endpoint, params)\n      .then(result => {\n        console.log(params.query + '\\nLABEL:' + result.data.label);\n      }).catch(err => {\n        console.log(err);\n      });\n    ```", "```py\n    run = \"node chapter08/language-classifier.js\"\n    ```", "```py\n    import requests\n    import os\n    import json\n    headers = {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + os.environ.get(\"OPENAI_API_KEY\")\n    }\n    endpoint = \"https://api.openai.com/v1/classifications\"\n    ```", "```py\n    examples = [\n      [\"Hello, I'm interested in applying for the prompt designer position you are hiring for. Can you please tell me where I should send my resume?\",\"English\"],\n      [\"Здравствуйте, я хочу подать заявку на должность быстрого дизайнера, на которую вы нанимаете. Подскажите, пожалуйста, куда мне отправить резюме?\",\"Russian\"],\n      [\"Hola, estoy interesado en postularme para el puesto de diseñador rápido para el que está contratando. ¿Puede decirme dónde debo enviar mi currículum?\", \"Spanish\"],\n      [\"Bonjour, je suis intéressé à postuler pour le poste de concepteur rapide pour lequel vous recrutez. Pouvez-vous me dire où je dois envoyer mon CV?\",\"French\"],\n      [\"नमस्कार, मैं उस त्वरित डिज़ाइनर पद के लिए आवेदन करने में रुचि रखता हूं, जिसके लिए आप नौकरी कर रहे हैं। क्या आप मुझे बता सकते हैं कि मुझे अपना रिज्यूम कहां भेजना चाहिए?\",\"Hindi\"]\n    ]\n    ```", "```py\n    const params = {\n      \"query\": \"¿Con quién debo comunicarme sobre ofertas de trabajo técnico?\",\n      \"examples\": examples,\n      \"model\": \"curie\"\n    }\n    ```", "```py\n    result = requests.post(endpoint, headers=headers, data=json.dumps(params))\n    print(params[\"query\"] + '\\nLABEL:' + result.json()[\"label\"])\n    ```", "```py\n    run = \"python chapter08/language-classifier.py\"\n    ```", "```py\n    const axios = require('axios');\n    const apiKey = process.env.OPENAI_API_KEY;\n    const client = axios.create({\n      headers: { 'Authorization': 'Bearer ' + apiKey }\n    });\n    const endpoint = \"https://api.openai.com/v1/engines/davinci/completions\";\n    ```", "```py\n    const params = {\n      prompt: \"Text: When NASA opened for business on October 1, 1958, it accelerated the work already started on human and robotic spaceflight. NASA's first high profile program was Project Mercury, an effort to learn if humans could survive in space. This was followed by Project Gemini, which used spacecraft built for two astronauts to perfect the capabilities needed for the national objective of a human trip to the Moon by the end of the 1960s. Project Apollo achieved that objective in July 1969 with the Apollo 11 mission and expanded on it with five more successful lunar landing missions through 1972\\. After the Skylab and Apollo-Soyuz Test Projects of the mid-1970s, NASA's human spaceflight efforts again resumed in 1981, with the Space Shuttle program that continued for 30 years. The Shuttle was not only a breakthrough technology, but was essential to our next major step in space, the construction of the International Space Station.\\n\\nKeywords:\",\n      temperature: 0.3,\n      max_tokens: 60,\n      top_p: 1,\n      frequency_penalty: 0.8,\n      presence_penalty: 0,\n      stop: [\"\\n\"]\n    }\n    ```", "```py\n    client.post(endpoint, params)\n      .then(result => {\n        console.log(params.prompt + result.data.choices[0].text);\n        // console.log(result.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    ```", "```py\n    run = \"node chapter08/keywords-classifier.js\"\n    ```", "```py\n    import requests\n    import os\n    import json\n    headers = {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + os.environ.get(\"OPENAI_API_KEY\")\n    }\n    endpoint = 'https://api.openai.com/v1/engines/davinci/completions'\n    ```", "```py\n    params = {\n      \"prompt\": \"Text: When NASA opened for business on October 1, 1958, it accelerated the work already started on human and robotic spaceflight. NASA's first high profile program was Project Mercury, an effort to learn if humans could survive in space. This was followed by Project Gemini, which used spacecraft built for two astronauts to perfect the capabilities needed for the national objective of a human trip to the Moon by the end of the 1960s. Project Apollo achieved that objective in July 1969 with the Apollo 11 mission and expanded on it with five more successful lunar landing missions through 1972\\. After the Skylab and Apollo-Soyuz Test Projects of the mid-1970s, NASA's human spaceflight efforts again resumed in 1981, with the Space Shuttle program that continued for 30 years. The Shuttle was not only a breakthrough technology, but was essential to our next major step in space, the construction of the International Space Station.\\n\\nKeywords:\",\n      \"temperature\": 0.3,\n      \"max_tokens\": 60,\n      \"top_p\": 1,\n      \"frequency_penalty\": 0.8,\n      \"presence_penalty\": 0,\n      \"stop\": [\"\\n\"]\n    }\n    ```", "```py\n    result = requests.post(endpoint, headers=headers, data=json.dumps(params))\n    print(params[\"prompt\"] + result.json()[\"choices\"][0][\"text\"])\n    ```", "```py\n    run = \"python chapter08/keywords-classifier.py\"\n    ```"]