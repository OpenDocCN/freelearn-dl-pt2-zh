- en: '15'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Formatting Numbers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Often, you might find that numerical data values do not usually appear in the
    way you want them to be displayed visually or in the way your other apps will
    accept them. There might be several scenarios where this will be the case. For
    example, a lead may enter a contact phone number when they submit an inquiry form,
    but that format may not be recognized by your SMS app. Or, if your team submits
    timesheets, you may need to calculate their overtime payments before sending them
    a summary by email. You might also want to add a space, period, or comma to a
    number or transform a number into a specific currency format. As you can imagine,
    there are many possible situations when you might need to adjust a number, and
    that is where the Formatter by Zapier **Numbers** action event comes in.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will dive into using the Formatter by Zapier built-in app
    to manipulate a range of number formats. We will begin with an introduction to
    using Zapier to transform numerical values. Next, we will explore how to format
    numbers, currencies, and phone numbers. Then, we will cover how to use the Formatter
    by Zapier built-in app to perform basic mathematical operations and generate random
    numbers. Lastly, we will examine how to use spreadsheet-style formulas to perform
    calculations.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following key topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Using Zapier to transform numerical values
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Formatting numbers with Formatter by Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Formatting currencies with Formatter by Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Formatting phone numbers with Formatter by Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing mathematical operations with Formatter by Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating random numbers with Formatter by Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using spreadsheet-style formulas with Formatter by Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can use the magic AI to ask Zapier to format data in your Zap steps, which
    will then create Formatter by Zapier steps with the relevant transform options.
    We will discuss this in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216), *AI*
    *and Automation*.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have worked through each of these topics, you will have a better understanding
    of the different number-transforming events available for use with the Formatter
    by Zapier built-in app. You will know how to adjust numbers, currencies, and phone
    numbers, as well as how to perform math operations and use spreadsheet-style formulas
    in your Zaps.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of the content in this chapter, you will need access to
    a Zapier account. The Zapier Starter plan will be required for you to create multi-step
    workflows using the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Using Zapier to transform numerical values
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Formatter by Zapier can easily be used to transform numerical values from one
    format into another. There might be several scenarios in which you need to transform
    your data, such as when a value is not accepted in some of your apps, when you
    want to display the format differently, or if you need to make calculations.
  prefs: []
  type: TYPE_NORMAL
- en: 'For manipulating numbers, Formatter by Zapier can only be used as an action
    step and is available as the **Numbers** action event. When using this action
    event, you can use the following **Numbers** transform options, which can be found
    within the **Action** section of your action step:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Format Number**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Format Currency**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Format** **Phone Number**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Perform** **Math Operation**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Random Number**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Spreadsheet-Style Formula**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started by exploring how to transform general number formats.
  prefs: []
  type: TYPE_NORMAL
- en: Formatting numbers with Formatter by Zapier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Changing the format of a number can be very useful when you want to adjust the
    way decimal marks, thousands separators, and spaces are displayed. In general,
    these situations might arise when data from one app is presented in one format,
    and you want to change it to be displayed in another way. Zapier has a solution
    to this problem. You can use the Formatter by Zapier **Numbers** action event
    with the **Format Number** transform option to adjust the format of numbers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to change the format of a number using a period as a decimal mark,
    such as `1000.00`, so that it uses a comma as a decimal mark, such as `1000,00`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to change the format of a number using groupings with a comma,
    such as `1,000,000`, so that it uses spaces, such as `1` `000 000`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to change the format of a number where no thousands separators
    are present, such as `1000000`, so that it has separators with commas, such as
    `1,000,000`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Essentially, this transform option can be used to change a number so that it’s
    in a new style. However, it does not allow you to round or pad a number.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s explore how to set up the **Format Number** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Numbers action event with the Format Number transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Numbers** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon and chosen **Formatter by Zapier** as the app and
    **Numbers** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Format Number** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the number format you want to manipulate.
    You can either enter a static value, a dynamic value from previous steps (using
    the **Custom** tab), or a combination of both, to specify the **Input** value.
    Although this is not a required field, the formatter function will not return
    a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`,` or `.` character, respectively. This is a required field and must have
    a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0`, `1`, `2`, or `3`. This is a required field and must have a value for the
    Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where we want to convert the
    input value containing a period as the decimal mark, and the output required has
    a space for the thousands separator and a comma for the decimal:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.1 – \uFEFFOverview of using the Formatter by Zapier Numbers action\
    \ event to format a number\uFEFF](img/B18474_15_01.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.1 – Overview of using the Formatter by Zapier Numbers action event
    to format a number
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the altered number format. The result from the scenario
    in *Figure 15**.1* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.2 – \uFEFFOverview of the altered numerical value when using the\
    \ Numbers action event to format a number](img/B18474_15_02.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.2 – Overview of the altered numerical value when using the Numbers
    action event to format a number
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Numbers** action step or
    publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to format numbers with the
    Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s dive into formatting currency values.
  prefs: []
  type: TYPE_NORMAL
- en: Formatting currencies with Formatter by Zapier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whether you work with single or multiple currencies in your business, it’s likely
    that at some point or another, you'll need to convert numerical values into a
    currency format appropriate to your (or another) locale or to be displayed in
    a certain way. You can do this easily using the Formatter by Zapier **Numbers**
    action event with the **Format Currency** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a couple of examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to change the format of a number such as `1,000.23` to a German
    (Germany) locale format with the comma as the decimal mark, displayed in Euros
    with the currency symbol at the start, and the currency shortcode at the end,
    such as `€``1.000,23 EUR`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to change the format of a number such as `1000.23` to an English
    (United States) locale format with the period as the decimal mark, displayed in
    US dollars with the currency symbol at the start, with no thousands grouping,
    such as `$1000.23`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before we dive into setting up an action step with the **Format Currency** transform
    option, let’s review some useful information about country locales and currency
    formats.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding country locales and currency formatting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working with currencies, it’s useful to know that most countries have a
    specific format in which they display their currencies. For example, many European
    countries use a comma for the decimal mark, whereas the United States uses a period.
  prefs: []
  type: TYPE_NORMAL
- en: Currencies can be formatted using Zapier following **Unicode** character guidelines
    to display number patterns. According to Wikipedia, Unicode is defined as “*an
    information technology (IT) standard for the consistent encoding, representation,
    and handling of text expressed in most of the world’s* *writing systems.*”
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common Unicode characters that are used in currency pattern formatting
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`.` in a pattern specifies where the decimal mark should be placed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`,` in a pattern specifies where the thousands separator should be placed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0` in a pattern specifies that there is “zero padding.” Therefore, if the
    input number is too short, a zero will be placed there.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`#` in a pattern specifies that there is “no padding.” Therefore, if the input
    number is too short, no value will be placed there.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`¤` in a pattern specifies where the currency symbol or code should be placed.
    If multiple symbols are used in sequence, the currency is displayed slightly differently.
    For example, for Euro in the English (United Kingdom) locale, `¤` equals `€`,
    `¤¤` equals `EUR`, and `¤¤¤` equals `euros`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Therefore, you can put together a string of Unicode characters to convert currencies
    into the format you would like them to be displayed as.
  prefs: []
  type: TYPE_NORMAL
- en: More information on Unicode number patterns, including some example pattern
    formats, can be found at [http://www.unicode.org/reports/tr35/tr35-numbers.html#Number_Format_Patterns](http://www.unicode.org/reports/tr35/tr35-numbers.html#Number_Format_Patterns).
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s explore how to set up the **Format Currency** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Numbers action event with the Format Currency transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Numbers** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon, and chosen **Formatter by Zapier** as the app and
    **Numbers** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Format Currency** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: Use this field to enter the number that you want to transform into
    a currency format. You can either enter a static value, a dynamic value from previous
    steps (using the **Custom** tab), or a combination of both, to specify the **Input**
    value. Although this is not a required field, the formatter function will not
    return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Currency**: Here, you can specify the currency you want the number output
    to be displayed as. Select a format from a comprehensive list in the drop-down
    menu, or add the **ISO** (an international standard) 4217 three-character currency
    code under the **Custom** tab. Details of currency codes can be found at [https://en.wikipedia.org/wiki/ISO_4217](https://en.wikipedia.org/wiki/ISO_4217).
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`en_US` format for English (United States). Details of language codes can be
    found at [https://en.wikipedia.org/wiki/ISO_639](https://en.wikipedia.org/wiki/ISO_639).
    Details of country codes can be found at [https://en.wikipedia.org/wiki/ISO_3166](https://en.wikipedia.org/wiki/ISO_3166).
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Currency Format**: Here, you can specify the format you want the currency
    output to be displayed in by selecting a Unicode pattern format from the drop-down
    menu. Alternatively, you can add a custom format under the **Custom** tab by either
    entering a static value in Unicode pattern format, a dynamic value from previous
    steps, or a combination of both. Use the Unicode characters from the *Understanding
    country locales and currency formatting* section as guidance. This is a required
    field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.3 – \uFEFFOverview of using the Formatter by Zapier Numbers action\
    \ event to fo\uFEFFrma\uFEFFt currencies](img/B18474_15_03.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.3 – Overview of using the Formatter by Zapier Numbers action event
    to format currencies
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the altered currency format. The result from the scenario
    in *Figure 15**.3* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.4 – \uFEFFOverview of the altered value when using the Numbers\
    \ action event to format a currency](img/B18474_15_04.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.4 – Overview of the altered value when using the Numbers action event
    to format a currency
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Numbers** action step or
    publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to format currencies with
    the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s review the basics of how to transform phone numbers.
  prefs: []
  type: TYPE_NORMAL
- en: Formatting phone numbers with Formatter by Zapier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Telephone communication is not dead! Second to email, communicating with prospects,
    customers, and suppliers via telephone is an important part of any business. Being
    able to automate your telephone communications is a bonus. You may want to automatically
    send an SMS or voicemail to a prospect when they first make contact with you.
    However, sometimes, the telephone numbers that our contacts supply us with aren’t
    always in a format that we can use in other apps. Therefore, having the ability
    to automatically adjust and manipulate telephone numbers is crucial when you use
    multiple apps for communicating by telephone. That is where the Formatter by Zapier
    **Numbers** action event with the **Format Phone Number** transform option comes
    in.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you receive a lead with a cellphone number, and you want to change it to
    an internationally recognized format so that you can send an automated SMS using
    Twilio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a new customer signs up to your service and provides a phone number, and
    you want to change it to a format that is recognized by a voicemail drop app,
    such as **Slybroadcast**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a new contact is added to your CRM, and you want to change the format of
    the contact phone number they provided to one that is recognized by your CRM calling
    module
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, let’s review how to set up the **Format Phone Number** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Numbers action event with the Format Phone Number transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Numbers** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon, and chosen **Formatter by Zapier** as the app and
    **Numbers** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Format Phone Number**
    option. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: You can use this field to enter the number that you want to transform
    into another phone number format. You can either enter a static value, a dynamic
    value from previous steps (using the **Custom** tab), or a combination of both,
    to specify the **Input** value. Although this is not a required field, the formatter
    function will not return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0`, `1`, `2`, to `8`. This is a required field and must have a value for the
    Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`US` country code) will produce a phone number where the first two characters
    are `+1`. If left blank, the country code will not be displayed in the output.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`true` or `false` format, respectively. Set this to **No** when testing or
    if only formatting is required. If the number is invalid, the number specified
    in the **Input** field will be output unformatted. The default for this field
    is **Yes**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.5 – \uFEFFOverview of using the Formatter by Zapier Numbers action\
    \ ev\uFEFFent\uFEFF to format phone numbers](img/B18474_15_05.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.5 – Overview of using the Formatter by Zapier Numbers action event
    to format phone numbers
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the altered phone number format. The result from the
    scenario in *Figure 15**.5* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.6 – \uFEFFOverview of the output value when using the Numbers action\
    \ event\uFEFF to\uFEFF format a phone number](img/B18474_15_06.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.6 – Overview of the output value when using the Numbers action event
    to format a phone number
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Numbers** action step or
    publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to format phone numbers with
    the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s take a look at how to perform basic math operations.
  prefs: []
  type: TYPE_NORMAL
- en: "Performing mathematical operations with Formatter \Lby Zapier"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There will be situations where you are consistently manually performing basic
    mathematical functions. You might want to add two or three values together or
    convert a number into a percentage. Thankfully, Formatter by Zapier allows you
    to perform standard math operations using multiple values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the **Numbers** action event and the **Perform Math Operation** transform
    option, Formatter by Zapier allows you to perform the following basic mathematical
    operations:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Add**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subtract**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiply**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Divide**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Make Negative**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When your customer fills out an order form on **Google Forms** with an order
    amount for red balls and an order amount for yellow balls, and you want to calculate
    the total order amount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When your team members submit an expense claim form with **FastField Mobile
    Forms** for travel and subsistence and you want to deduct the value from their
    monthly allowance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When a lead engages with you by email, and you want to add a predefined engagement
    point value to a lead score
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, let’s review how to set up the **Perform Math Operation** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Numbers action event with the Perform Math Operation transform
    option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Numbers** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon, and chosen **Formatter by Zapier** as the app and
    **Numbers** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Perform Math Operation**
    option. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`add`, `sub`, `mul`, `div`, or `neg`, respectively. This is a required field
    and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Input**: You can use this field to enter the values you want to use in the
    calculation on multiple lines. You can either enter static values, dynamic values
    from previous steps, or a combination of both. Although this is not a required
    field, the formatter function will not return a result if there is no value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where we want to multiply
    the values `9` and `10`:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.7 – \uFEFFOverview of using the Formatter by Zapier Numbers actio\uFEFF\
    n event to perform a math\uFEFF operation](img/B18474_15_07.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.7 – Overview of using the Formatter by Zapier Numbers action event
    to perform a math operation
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the output from the math operation. The result from
    the scenario in *Figure 15**.7* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.8 – \uFEFFOverview of the output value when using the Numbers action\
    \ event to perform math operations](img/B18474_15_08.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.8 – Overview of the output value when using the Numbers action event
    to perform math operations
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Numbers** action step or
    publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to perform basic mathematical
    operations with the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s explore how to create a random number in your Zaps.
  prefs: []
  type: TYPE_NORMAL
- en: Generating random numbers with Formatter by Zapier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another function of Formatter by Zapier is the ability to generate a random
    number between a lower- and upper-value range. It also allows you to specify the
    number of decimal points you want the output to be presented as. If you need to
    do more than use the five basic mathematical operations that we just discussed,
    you can use complex spreadsheet-style formulas in your Zaps instead. You can do
    this using the Formatter by Zapier **Numbers** action event’s **Random Number
    Formula** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a couple of examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to randomly assign ID numbers to members of your team for your
    human resource records
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to randomly generate a passcode for new users to access protected
    data that you want to send them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, let’s review how to set up the **Random Number** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Numbers action event with the Random Number transform option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Numbers** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon, and chosen **Formatter by Zapier** as the app and
    **Numbers** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Random Number** option.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0`. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`100`. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`0` and `15`, with the default value being `0`. This field is optional.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where we want to generate
    a random number between `0` and `100` with no decimal places:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.9 – \uFEFFOverview of using the Formatter by Zapier Numbers action\
    \ event to generate a random number](img/B18474_15_09.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.9 – Overview of using the Formatter by Zapier Numbers action event
    to generate a random number
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the output. The result from the scenario in *Figure
    15**.9* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.10 – \uFEFFOverview of the output value when using the Numbers\
    \ action event to generate a random number](img/B18474_15_10.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.10 – Overview of the output value when using the Numbers action event
    to generate a random number
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Numbers** action step or
    publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s explore how to use spreadsheet-type formulas in your Zaps.
  prefs: []
  type: TYPE_NORMAL
- en: "Using spreadsheet-style formulas with Formatter \Lby Zapier"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you need to do more than use the five basic mathematical operations that
    we just discussed, you can use complex spreadsheet-style formulas in your Zaps
    instead. You can do this using the Formatter by Zapier **Numbers** action event’s
    **Spreadsheet-Style Formula** transform option.
  prefs: []
  type: TYPE_NORMAL
- en: This transform option allows you to perform complex calculations with numbers,
    as well as manipulate strings of text using formulas commonly used in spreadsheets
    instead of using code.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: When using text strings with this transform option, you must use quotation marks
    around the string – for example, `=IF("string1"="string2", "``same", "different")`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you can use this transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to calculate the average of several numbers, such as `8`, `12`,
    and `13` to get `11`, using the `AVERAGE(number, [number, …])` formula.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to output the largest number from a list of values, such as `1`,
    `9`, and `53` to get `53`, using the `MAX(number, [number, …])` formula.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to produce a random number between 0 and 1, such as `0.512453`,
    using the `RAND()` formula.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to perform an `if`-`then` statement replacement. For example,
    if your first value is `car` and your second value is `bicycle`, then return `orange`;
    otherwise, return `not relevant`. For this, you could use the `=IF(AND("string1"="red",
    "string2"="yellow"), "orange", "not` `relevant")` formula.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are a few Zapier Community articles that give good context for using the
    **Spreadsheet-Style Formula** transform option:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Formatter Features: using IF, AND, OR in spreadsheet-style* *formulas*: [https://community.zapier.com/featured-articles-65/formatter-features-using-if-and-or-in-spreadsheet-style-formulas-10367](https://community.zapier.com/featured-articles-65/formatter-features-using-if-and-or-in-spreadsheet-style-formulas-10367'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '*Formatter Features: MEDIAN/AVERAGE and ROUNDUP/ROUNDDOWN in spreadsheet-style*
    *formulas*: [https://community.zapier.com/featured-articles-65/formatter-features-median-average-and-roundup-rounddown-in-spreadsheet-style-formulas-10621](https://community.zapier.com/featured-articles-65/formatter-features-median-average-and-roundup-rounddown-in-spreadsheet-style-formulas-10621'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '*Formatter Features: RAND/RANDBETWEEN and MIN/MAX in spreadsheet-style* *formulas*:
    [https://community.zapier.com/featured-articles-65/formatter-features-rand-randbetween-and-min-max-in-spreadsheet-style-formulas-10599](https://community.zapier.com/featured-articles-65/formatter-features-rand-randbetween-and-min-max-in-spreadsheet-style-formulas-10599'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s review how to set up the **Spreadsheet-Style Formula** transform
    option.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Numbers action event with the Spreadsheet-Style Formula transform
    option
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Numbers** action event once you have set up your trigger step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step either by selecting the **Action** step
    or clicking on the **+** icon, and chosen **Formatter by Zapier** as the app and
    **Numbers** as the action event, you can edit the fields in the **Action** section,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Transform**: From the drop-down menu, select the **Spreadsheet-Style Formula**
    option. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Formula**: You can use this field to specify the formula with the values
    that you want to be calculated. Add static values for the formula and numeric
    values, or dynamic values mapped from previous steps under the **Custom** tab.
    This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zapier has created a handy reference document with various formulas that can
    be used with Formatter by Zapier, which you can refer to at [https://help.zapier.com/hc/en-us/articles/8496181204877](https://help.zapier.com/hc/en-us/articles/8496181204877).
  prefs: []
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where we want to divide the
    sum of `2` and `4` by `3`:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.11 – \uFEFFOverview of using the Formatter by Zapier Number\uFEFF\
    s action event to perform a spreadsheet-style operation](img/B18474_15_11.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.11 – Overview of using the Formatter by Zapier Numbers action event
    to perform a spreadsheet-style operation
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Continue** button. You can then use the **Test** section to
    test this step to generate the output. The result from the scenario in *Figure
    15**.11* is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 15.12 – \uFEFFOverview of the output value when using the Numbers\uFEFF\
    \ act\uFEFFion event to perform spreadsheet-style operations](img/B18474_15_12.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 15.12 – Overview of the output value when using the Numbers action event
    to perform spreadsheet-style operations
  prefs: []
  type: TYPE_NORMAL
- en: Proceed to add one or more action steps after your **Numbers** action step or
    publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a handy Zapier Community article with examples of how you can use Formatter
    by Zapier to format numbers: [https://community.zapier.com/featured-articles-65/formatter-features-currency-number-formatting-11091](https://community.zapier.com/featured-articles-65/formatter-features-currency-number-formatting-11091).'
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to use the **Numbers** transform
    option of the Formatter by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered how to use the Formatter by Zapier built-in app
    to manipulate a variety of number formats. We started by introducing how to use
    Zapier for the general formatting of numbers. Then, we covered how to format numbers,
    currencies, and phone numbers in more detail. Next, we explored how to use the
    Formatter by Zapier built-in app to perform basic mathematical operations and
    generate random numbers. Lastly, we examined how to use spreadsheet-style formulas
    to perform calculations.
  prefs: []
  type: TYPE_NORMAL
- en: You now know how to use the Formatter by Zapier built-in app to transform numerical
    values such as numbers, currencies, and phone numbers, as well as how to perform
    basic math operations and use spreadsheet-style formulas to perform calculations.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn how to use some of the functionality of
    the Formatter by Zapier built-in app to format text. We will explore adjusting
    title case, uppercase, and lowercase, finding and replacing text, trimming whitespace,
    counting words, adjusting the length of a string of text, and pluralizing text.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Can you use the Formatter by Zapier built-in app to format a United Kingdom
    phone number so that it’s in an internationally recognized format?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What math operations can be performed by the Formatter by Zapier built-in app?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
