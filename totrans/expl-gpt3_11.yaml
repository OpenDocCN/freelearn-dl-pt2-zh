- en: '*Chapter 8*: Classifying and Categorizing Text'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第8章*：分类和归类文本'
- en: In the last chapter, we looked at different ways to generate text. In this chapter,
    we'll discuss text classification and the OpenAI API classifications endpoint.
    We'll start with a quick overview of text classification and the classifications
    endpoint, and then we'll work through implementing sentiment analysis, assigning
    an ESRB rating to text, categorizing text by language, and classifying text from
    keywords, which are all common text classification examples.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了生成文本的不同方法。在本章中，我们将讨论文本分类和OpenAI API分类端点。我们将从快速概述文本分类和分类端点开始，然后进行实施情感分析、为文本分配ESRB评级、通过语言对文本进行分类以及从关键词对文本进行分类，这些都是常见的文本分类示例。
- en: 'The topics we will be covering in this chapter are as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding text classification
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解文本分类
- en: Introducing the classifications endpoint
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍分类端点
- en: Implementing sentiment analysis
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施情感分析
- en: Assigning an ESRB rating to text
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为文本分配ESRB评级
- en: Classifying text by language
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过语言对文本进行分类
- en: Classifying text from keywords
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从关键词对文本进行分类
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter requires that you have access to the OpenAI API. You can request
    access by visiting [https://openapi.com](https://openapi.com).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要您访问OpenAI API。您可以通过访问[https://openapi.com](https://openapi.com)来请求访问权限。
- en: Understanding text classification
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解文本分类
- en: A text classification task takes in text and returns a label. Classifying email
    as spam or determining the sentiment of a tweet are both examples of text classification
    tasks. There are multiple ways to do text classification using the OpenAI API
    and we've looked at some of them already. But one method we haven't covered yet
    is using the **completions endpoint**. However, before we dive into the completions
    endpoint, let's quickly review some of the different ways we can do text classification
    that we've already covered.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 文本分类任务接受文本并返回标签。将电子邮件分类为垃圾邮件或确定推文的情感都是文本分类任务的例子。使用OpenAI API进行文本分类有多种方法，我们已经看过其中一些。但我们还没有涵盖的一种方法是使用**完成端点**。然而，在我们深入研究完成端点之前，让我们快速回顾一下我们已经涵盖的一些不同的文本分类方法。
- en: Using the completions endpoint for text classification
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用完成端点进行文本分类
- en: 'For starters, you can perform classification tasks using the completions endpoint
    by describing the task in our prompt. For example, the following prompt can be
    used to classify a social media post:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用完成端点来执行分类任务，只需在提示中描述任务。例如，下面的提示可用于对社交媒体发布进行分类：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The previous prompt would return positive, natural, or negative, but most likely
    positive, given the post.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以往的提示可能会根据发布返回积极，自然或消极，但很可能是积极的。
- en: Content filtering is a text classification task
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内容过滤是一个文本分类任务
- en: Content filtering is also a type of text classification task. Recall from [*Chapter
    6*](B16854_06_ePub_AM.xhtml#_idTextAnchor126), *Content Filtering*, when we used
    the content filter engine, that it returned **0 = safe**, **1 = sensitive**, and
    **2 = unsafe**, for text that was provided. That was text classification.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 内容过滤也是一种文本分类任务。回想一下[*第6章*](B16854_06_ePub_AM.xhtml#_idTextAnchor126)中的*内容过滤*，当我们使用内容过滤引擎时，返回的结果是**0
    = 安全**，**1 = 敏感**和**2 = 不安全**，这就是文本分类。
- en: While there are multiple ways to do text classification using the OpenAI API.
    There is one endpoint that is specifically designed for classification tasks.
    That endpoint is the classifications endpoint, and we'll discuss this next.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以使用OpenAI API进行多种文本分类的方法，但有一个端点专门设计用于分类任务。该端点就是分类端点，接下来我们将讨论这个内容。
- en: Introducing the classifications endpoint
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍分类端点
- en: The OpenAI API also provides the **classifications endpoint** for text classification
    tasks. The classifications endpoint simplifies many classification tasks. It uses
    a combination of semantic search and completions engines to classify text based
    on the samples you provide. You can provide up to 200 examples along with your
    HTTP request or you can pre-uploaded files containing example data.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: OpenAI API还为文本分类任务提供了**分类端点**。分类端点简化了许多分类任务。它使用语义搜索和完成引擎的组合，根据您提供的样本对文本进行分类。您可以在HTTP请求中提供最多200个示例，或者可以提前上传包含示例数据的文件。
- en: The URL for the classifications endpoint is [https://api.openai.com/v1/classifications](https://api.openai.com/v1/classifications).
    It expects an HTTP `POST` with a JSON body containing input parameters. One of
    the required parameters is the query parameter. The value of the query parameter
    is the text to classify. The query value is first used to do a semantic search
    to find relevant examples from the examples provided. Then, the examples are used,
    along with the query, to create a prompt for a defined completions engine that
    will classify the text.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 分类端点的URL是[https://api.openai.com/v1/classifications](https://api.openai.com/v1/classifications)。它期望使用包含输入参数的JSON主体的HTTP
    `POST`。其中一个必需的参数是*query*参数。*query*参数的值是要分类的文本。*query*值首先用于进行语义搜索，以从提供的示例中找到相关示例。然后，这些示例连同查询一起用于创建一个定义的完成引擎的提示，该引擎将对文本进行分类。
- en: 'The following code block shows a simple request body for the classifications
    endpoint. Note that the examples are provided with this request and the model
    that will be used to do the classification is the `curie` model:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码块显示了分类端点的简单请求主体。请注意，此请求与示例一起提供，并且将用于执行分类的模型是`curie`模型：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As mentioned, you can also upload example data and use a file parameter to reference
    the uploaded example data. This is useful when you have a large number of examples
    – over 200\. Let's look at uploading files.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，你也可以上传示例数据，并使用*file*参数引用上传的示例数据。当你有大量示例时，这是很有用的 – 超过200个。让我们来看看如何上传文件。
- en: Uploading files
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传文件
- en: Example data for the classifications endpoint can be uploaded using the OpenAI
    API files endpoint. The file should be formatted based on the JSON lines text
    format, which is basically a valid JSON object on each line that is separated
    by a line break.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用OpenAI API文件端点上传分类端点的示例数据。文件应该基于JSON行文本格式进行格式化，基本上就是每行一个有效的JSON对象，这些对象之间用换行符分隔。
- en: Important note
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You can learn more about the JSON lines format at [https://jsonlines.org](https://jsonlines.org).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://jsonlines.org](https://jsonlines.org)了解更多关于JSON行格式的信息。
- en: 'The following code block provides an example of the format required for a classifications
    sample file. The text property and label properties are required, but the metadata is
    optional. The metadata property can contain a JSON object with any information
    you''d like. This data can then optionally be returned with the query results:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码块提供了一个分类样本文件所需的格式示例。*text*属性和*label*属性是必需的，但*metadata*是可选的。元数据属性可以包含一个JSON对象，其中包含您想要的任何信息。然后这些数据可以选择性地随查询结果返回：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To upload a sample file, you use the OpenAI API files endpoint. For the examples
    in this chapter, we won't be using files. However, we'll take a closer look at
    the files endpoint in [*Chapter 9*](B16854_09_ePub_AM.xhtml#_idTextAnchor172),
    *Building a GPT-3 Powered Question-Answering App*.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传一个样本文件，您可以使用OpenAI API的文件端点。在本章的示例中，我们不会使用文件。但是，在[*第9章*](B16854_09_ePub_AM.xhtml#_idTextAnchor172)中，我们将更仔细地研究文件端点，*构建一个GPT-3支持的问答应用*。
- en: Implementing sentiment analysis
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施情感分析
- en: A common classification task is sentiment analysis. Using sentiment analysis,
    you can classify text based on its general tone – for example, happy, sad, mad,
    or neutral. This can be useful in a lot of applications; for example, if you're
    a restaurant owner and you want to respond quickly to unhappy customer reviews.
    Let's take a look at how we could do that using the OpenAI API classifications
    endpoint.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的分类任务是情感分析。使用情感分析，您可以根据文本的一般语气进行分类 – 例如，快乐，悲伤，愤怒或中性。这在许多应用中都很有用；例如，如果您是餐馆老板，您希望能够迅速对不满意的顾客评论做出回应。让我们来看看如何使用OpenAI
    API分类端点来实现这一点。
- en: In this example, we will classify restaurant reviews. We'll label the reviews
    with the labels Good, Poor, or Neutral. We will use the classifications endpoint
    for this example, and we'll provide some example reviews with the request.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将对餐厅评论进行分类。我们将使用分类端点进行此示例，并且我们将在请求中提供一些示例评论。
- en: Node.js/JavaScript example
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Node.js/JavaScript示例
- en: 'To create the review classifier example in Node.js/JavaScript, follow these
    steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Node.js/JavaScript中创建评论分类器示例，请按照以下步骤进行：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node** REPL.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到[replit.com](http://replit.com)，并打开你的**exploring-gpt3-node** REPL。
- en: Create a new file – `chapter08/reviews-classifier.js`.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 – `chapter08/reviews-classifier.js`。
- en: 'Add the following code to the beginning of the `reviews-classifier.js` file:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到`reviews-classifier.js`文件的开头：
- en: '[PRE3]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, add example reviews that will be used with the request:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，添加将与请求一起使用的示例评论：
- en: '[PRE4]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, add the request parameters for the classifications endpoint:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，为分类端点添加请求参数：
- en: '[PRE5]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, add the following code to log the result to the console:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，添加以下代码将结果记录到控制台：
- en: '[PRE6]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的根文件夹中的 `.replit` 文件更改为以下内容：
- en: '[PRE7]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Click the `chapter08/reviews-classifier.js` file, you should see a result similar
    to the console output in the following screenshot:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 `chapter08/reviews-classifier.js` 文件，你应该会看到类似于以下截图中控制台输出的结果：
- en: '![Figure 8.1 – Example output from chapter08/reviews-classifier.js'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.1 – 来自 chapter08/reviews-classifier.js 的示例输出'
- en: '](img/B16854_08_001.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_001.jpg)'
- en: Figure 8.1 – Example output from chapter08/reviews-classifier.js
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – 来自 chapter08/reviews-classifier.js 的示例输出
- en: Next, let's look at the same example using Python.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用 Python 来看一下相同的示例。
- en: Python example
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Python 示例
- en: 'To create the online review classifier example in Python, follow these steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 Python 中的在线评论分类器示例，请按照以下步骤操作：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python** REPL.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 [replit.com](http://replit.com)，并打开你的 **exploring-gpt3-python** REPL。
- en: Create a new file – `chapter08/reviews-classifier.py`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 – `chapter08/reviews-classifier.py`。
- en: 'Add the following code to the beginning of the `reviews-classifier.py` file:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `reviews-classifier.py` 文件的开头：
- en: '[PRE8]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create an array for the review examples:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为评论示例创建一个数组：
- en: '[PRE9]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Set the request parameters for the endpoint:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为端点设置请求参数：
- en: '[PRE10]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Make the HTTP request and print the results to the console:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行 HTTP 请求并将结果打印到控制台：
- en: '[PRE11]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的根文件夹中的 `.replit` 文件更改为以下内容：
- en: '[PRE12]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Click the `chapter08/online-review-classifier.py` file, you should see a result
    similar to the console output in the following screenshot:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 `chapter08/online-review-classifier.py` 文件，你应该会看到类似于以下截图中控制台输出的结果：
- en: '![Figure 8.2 – Example output from chapter08/online-review-classifier.py'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.2 – 来自 chapter08/online-review-classifier.py 的示例输出'
- en: '](img/B16854_08_002.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_002.jpg)'
- en: Figure 8.2 – Example output from chapter08/online-review-classifier.py
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.2 – 来自 chapter08/online-review-classifier.py 的示例输出
- en: Let's now take a look at another example.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看另一个示例。
- en: Assigning an ESRB rating to text
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为文本分配 ESRB 等级
- en: In the last example, we provided sample data to help with our classification
    task. But GPT-3 is pre-trained with a huge dataset, meaning it can perform a surprising
    number of classification tasks without providing any example data. Let's take
    a look at another example using the completions endpoint. In this example, we'll
    look at classifying text with an **Entertainment Software Rating Board** (**ESRB**)
    rating.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个示例中，我们提供了样本数据来帮助我们的分类任务。但 GPT-3 是预先训练的，具有大量数据集，这意味着它可以执行令人惊讶的数量的分类任务，而无需提供任何示例数据。让我们看另一个使用完成端点的示例。在这个示例中，我们将研究使用
    **娱乐软件评级委员会** (**ESRB**) 等级对文本进行分类。
- en: In this example, we will use the completions endpoint to assign an ESRB rating
    to text without any example data.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用完成端点为文本分配 ESRB 等级，而不需要任何示例数据。
- en: Node.js/JavaScript example
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Node.js/JavaScript 示例
- en: 'To create the ESRB rating classifier example in `Node.js/JavaScript`, follow
    these steps:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 `Node.js/JavaScript` 中的 ESRB 等级分类器示例，请按照以下步骤操作：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node** REPL.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 [replit.com](http://replit.com)，并打开你的 **exploring-gpt3-node** REPL。
- en: Create a new file – `chapter08/esrb-rating-classifier.js`.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 – `chapter08/esrb-rating-classifier.js`。
- en: 'Add the following code to the beginning of the `esrb-rating-classifier.js`
    file:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `esrb-rating-classifier.js` 文件的开头：
- en: '[PRE13]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add the endpoint parameters to the `esrb-rating-classifier.js` file with the
    following code:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将端点参数添加到 `esrb-rating-classifier.js` 文件中：
- en: '[PRE14]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Add the following code to log the endpoint response to the console:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到将端点响应记录到控制台的文件中：
- en: '[PRE15]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的根文件夹中的 `.replit` 文件更改为以下内容：
- en: '[PRE16]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Click the `chapter08/esrb-rating-classifier.js` file, you should see a result
    similar to the console output in the following screenshot:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 `chapter08/esrb-rating-classifier.js` 文件，你应该会看到类似于以下截图中控制台输出的结果：
- en: '![Figure 8.3 – Example output from chapter08/esrb-rating-classifier.js'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 8.3 – 来自 chapter08/esrb-rating-classifier.js 的示例输出'
- en: '](img/B16854_08_003.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_003.jpg)'
- en: Figure 8.3 – Example output from chapter08/esrb-rating-classifier.js
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.3 – 来自 chapter08/esrb-rating-classifier.js 的示例输出
- en: Now, let's look at the ESRB rating classifier in Python.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下 Python 中的 ESRB 等级分类器。
- en: Python example
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Python 示例
- en: 'To create the ESRB rating classifier example in Python, follow these steps:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Python 中创建 ESRB 分级分类器示例，请按照以下步骤操作：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python** REPL.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 [replit.com](http://replit.com) 并打开你的 **exploring-gpt3-python** REPL。
- en: Create a new file – `chapter08/esrb-rating-classifier.py`.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 – `chapter08/esrb-rating-classifier.py`。
- en: 'Add the following code to the beginning of the `esrb-rating-classifier.py`
    file:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `esrb-rating-classifier.py` 文件的开头添加以下代码：
- en: '[PRE17]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Add the endpoint parameters to the `esrb-rating-classifier.js` file with the
    following code:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将端点参数添加到 `esrb-rating-classifier.js` 文件中：
- en: '[PRE18]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Add the following code to log the endpoint response to the console:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码将端点响应记录到控制台：
- en: '[PRE19]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改你根目录下的 `.replit` 文件为以下内容：
- en: '[PRE20]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Click the `chapter08/esrb-rating-classifier.js` file, you should see a result
    similar to the console output in the following screenshot:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `chapter08/esrb-rating-classifier.js` 文件，你应该看到类似于以下截图中控制台输出的结果：
- en: '![Figure 8.4 – Example output from chapter08/esrb-rating-classifier.py'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.4 – 来自 chapter08/esrb-rating-classifier.py 的示例输出]'
- en: '](img/B16854_08_004.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_004.jpg)'
- en: Figure 8.4 – Example output from chapter08/esrb-rating-classifier.py
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – 来自 chapter08/esrb-rating-classifier.py 的示例输出
- en: Let's now take a look at another example.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看另一个例子。
- en: Classifying text by language
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本分类为语言
- en: Now, let's consider an example. Suppose we needed to route support messages
    based on the language the message was written in – for a multinational support
    center. In this case, we could use GPT-3 to classify messages by language, such
    as English, French, Hindi, Spanish, and Russian. Let's see how we'd go about doing
    that.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们考虑一个例子。假设我们需要根据消息所写的语言将支持消息路由到一个跨国支持中心。在这种情况下，我们可以使用 GPT-3 来按语言分类消息，例如英语、法语、印地语、西班牙语和俄语。让我们看看我们如何去做。
- en: In this example, we will classify support messages by language using the classifications
    endpoint and examples for each language.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将使用分类端点和每种语言的示例来按语言分类支持消息。
- en: Node.js/JavaScript example
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Node.js/JavaScript 示例
- en: 'To create the email classifier example in Node.js/JavaScript, follow these
    steps:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Node.js/JavaScript 中创建电子邮件分类器示例，请按照以下步骤操作：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node** REPL.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 [replit.com](http://replit.com) 并打开你的 **exploring-gpt3-node** REPL。
- en: Create a new file – `chapter08/language-classifier.js`.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 – `chapter08/language-classifier.js`。
- en: 'Add the following code to the beginning of the `language-classifier.js` file:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `language-classifier.js` 文件的开头添加以下代码：
- en: '[PRE21]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create an array for the language examples:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为语言示例创建一个数组：
- en: '[PRE22]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If necessary, you can use [https://translate.google.com](https://translate.google.com)
    to create the example data.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果需要，你可以使用 [https://translate.google.com](https://translate.google.com) 创建示例数据。
- en: 'Add the endpoint parameters with the following code:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码添加端点参数：
- en: '[PRE23]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add the following code to log the endpoint response to the console:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码将端点响应记录到控制台：
- en: '[PRE24]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改你根目录下的 `.replit` 文件为以下内容：
- en: '[PRE25]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Click the `chapter08/email-classifier.js` file, you should see a result similar
    to the console output in the following screenshot:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `chapter08/email-classifier.js` 文件，你应该看到类似于以下截图中控制台输出的结果：
- en: '![Figure 8.5 – Example output from chapter08/language-classifier.js'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.5 – 来自 chapter08/language-classifier.js 的示例输出]'
- en: '](img/B16854_08_005.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_005.jpg)'
- en: Figure 8.5 – Example output from chapter08/language-classifier.js
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – 来自 chapter08/language-classifier.js 的示例输出
- en: Let's look at the Python version next.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来让我们看看 Python 版本。
- en: Python example
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Python 示例
- en: 'To create the language classifier example in Python, follow these steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Python 中创建语言分类器示例，请按照以下步骤操作：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python** REPL.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 [replit.com](http://replit.com) 并打开你的 **exploring-gpt3-python** REPL。
- en: Create a new file – `chapter08/language-classifier.py`.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 – `chapter08/language-classifier.py`。
- en: 'Add the following code to the beginning of the `language-classifier.py` file:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `language-classifier.py` 文件的开头添加以下代码：
- en: '[PRE26]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Create an array for the language examples:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为语言示例创建一个数组：
- en: '[PRE27]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: If necessary, you can use [https://translate.google.com](https://translate.google.com)
    to create the example data.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果需要，你可以使用 [https://translate.google.com](https://translate.google.com) 创建示例数据。
- en: 'Add the endpoint parameters with the following code:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码添加端点参数：
- en: '[PRE28]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the following code to log the endpoint response to the console:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码将端点响应记录到控制台：
- en: '[PRE29]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的根文件夹中的`.replit`文件更改为以下内容：
- en: '[PRE30]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Click the `chapter08/language-classifier.py` file, you should see a result
    similar to the console output in the following screenshot:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`chapter08/language-classifier.py`文件，您应该看到与以下截图中的控制台输出类似的结果：
- en: '![Figure 8.6 – Example output from chapter08/language-classifier.py'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.6 - 来自chapter08/language-classifier.py的示例输出'
- en: '](img/B16854_08_006.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_006.jpg)'
- en: Figure 8.6 – Example output from chapter08/language-classifier.py
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6 - 来自chapter08/language-classifier.py的示例输出
- en: Let's now take a look at another example.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看另一个例子。
- en: Classifying text from keywords
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于关键字分类文本
- en: Another common text classification task is to classify documents based on keywords.
    To do this, we can use GPT3 to create a list of keywords that will be related
    to the content of the document. However, GPT3 doesn't just extract keywords from
    the document. It determines keywords that are relevant based on the document content.
    Let's try an example.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的文本分类任务是基于关键字对文档进行分类。为此，我们可以使用GPT3创建一个与文档内容相关的关键字列表。然而，GPT3不仅仅是从文档中提取关键字。它根据文档内容确定相关的关键字。让我们尝试一个例子。
- en: In this example, we will use the completions endpoint to classify a document
    based on relevant keywords.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用完成端点来基于相关关键字对文档进行分类。
- en: Node.js/JavaScript example
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Node.js/JavaScript示例
- en: 'To create the keywords classifier example in `Node.js/JavaScript`, follow these
    steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`Node.js/JavaScript`中创建关键词分类器示例，请按照以下步骤进行：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node** REPL.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到[replit.com](http://replit.com)，然后打开您的**exploring-gpt3-node** REPL。
- en: Create a new file – `chapter08/keywords-classifier.js`.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 - `chapter08/keywords-classifier.js`。
- en: 'Add the following code to the beginning of the `keywords-classifier.js` file:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`keywords-classifier.js`文件的开头添加以下代码：
- en: '[PRE31]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Add the endpoint parameters to `keywords-classifier.js` with the help of the
    following code:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将端点参数添加到`keywords-classifier.js`中：
- en: '[PRE32]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Add the following code to log the endpoint response to the console:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码以将端点响应记录到控制台：
- en: '[PRE33]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Change the `.replit` file in your root folder to the following:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的根文件夹中的`.replit`文件更改为以下内容：
- en: '[PRE34]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Click the `chapter08/keywords-classifier.js` file, you should see a result
    similar to the console output in the following screenshot. Notice in the results
    that some of the keywords identified may not exist in the original text:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`chapter08/keywords-classifier.js`文件，您应该看到与以下截图中的控制台输出类似的结果。请注意，在结果中识别出的一些关键字可能不存在于原始文本中：
- en: '![Figure 8.7 – Example output from chapter08/keywords-classifier.js'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.7 - 来自chapter08/keywords-classifier.js的示例输出'
- en: '](img/B16854_08_007.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_007.jpg)'
- en: Figure 8.7 – Example output from chapter08/keywords-classifier.js
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 - 来自chapter08/keywords-classifier.js的示例输出
- en: Alright, next, let's look at the Python version.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，接下来，让我们看一下Python版本。
- en: Python example
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Python示例
- en: 'To create the keywords classifier example in Python, follow these steps:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Python中创建关键词分类器示例，请按照以下步骤进行：
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python** REPL.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到[replit.com](http://replit.com)，然后打开您的**exploring-gpt3-python** REPL。
- en: Create a new file – `chapter08/keywords-classifier.py`.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新文件 - `chapter08/keywords-classifier.py`。
- en: 'Add the following code to the beginning of the `keywords-classifier.py` file:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`keywords-classifier.py`文件的开头添加以下代码：
- en: '[PRE35]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Add a `params` variable to `chapter08/keywords-classifier.py` with the following
    code:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`chapter08/keywords-classifier.py`中添加一个`params`变量，其中包含以下代码：
- en: '[PRE36]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Add the following code to log the endpoint response to the console:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码以将端点响应记录到控制台：
- en: '[PRE37]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Change the .`replit` file in your root folder to the following:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的根文件夹中的`.replit`文件更改为以下内容：
- en: '[PRE38]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Click the `chapter08/keywords-classifier.py` file, you should see a result
    similar to the console output in the following screenshot:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`chapter08/keywords-classifier.py`文件，您应该看到与以下截图中的控制台输出类似的结果：
- en: '![Figure 8.8 – Example output from chapter08/keywords-classifier.py'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图8.8 - 来自chapter08/keywords-classifier.py的示例输出'
- en: '](img/B16854_08_008.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16854_08_008.jpg)'
- en: Figure 8.8 – Example output from chapter08/keywords-classifier.py
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 - 来自chapter08/keywords-classifier.py的示例输出
- en: Again, notice that some of the keywords returned don't appear in the text provided,
    but they are still relevant. This is possible because GPT3 is using its language
    model to consider keywords that are the best fit, even if they aren't contained
    in the text.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 再次注意，返回的一些关键字并不出现在提供的文本中，但它们仍然相关。这是可能的，因为GPT3正在使用其语言模型来考虑最合适的关键字，即使它们不包含在文本中。
- en: Summary
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered understanding text classification and the classifications
    API endpoint. Then, we worked through examples of implementing sentiment analysis,
    assigning an ESRB rating to text, classifying text by language, and classifying
    text with keywords.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了理解文本分类和分类 API 端点。然后，我们通过实例来实现情感分析，为文本分配 ESRB 等级，语言分类和关键字文本分类。
- en: In the next chapter, we will look at working with the semantic search API endpoint.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解如何使用语义搜索 API 端点。
