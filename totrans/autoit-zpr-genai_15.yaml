- en: '13'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Newly Released Apps and Features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we explored a wide array of Zapier’s built-in apps
    and their capabilities for automating tasks. In this chapter, we will dive deeper
    into the built-in Zapier apps that have been released since the previous edition
    of this book (published in 2021), offering functionality to further enhance your
    automation workflows. Some of these are, at the time of publication, still in
    the **beta** user testing phase. We will provide descriptions of their features
    and offer practical tips on how to make the most of them.
  prefs: []
  type: TYPE_NORMAL
- en: First, we will cover how to get early access to new Zapier features. Then, we
    will dive into an overview of Looping by Zapier, a built-in app designed to help
    you process datasets with multiple values. Next, we will explore Sub-Zap by Zapier,
    a game-changer for modular automation, which allows you to break down complex
    Zaps into multiple linked components. Then, we will dive into Web Parser by Zapier,
    which allows you to scrape data from web pages. Next, we will move on to Transfers
    by Zapier, Zapier’s feature for seamless bulk data transfer between applications.
    We will then explore Zapier Interfaces, a dynamic module that empowers you to
    create custom forms, chatbots, and visual interfaces, followed by the Zapier Tables
    feature, Zapier’s robust solution for managing and storing data.
  prefs: []
  type: TYPE_NORMAL
- en: Looping by Zapier and Sub-Zaps by Zapier are categorized by Zapier as **Developer
    Tools**, and as these are advanced topics, we will only provide a brief overview
    of their functionality, without going into too much detail. Likewise, with Zapier
    Interfaces and Zapier Tables, as they are still undergoing beta testing and their
    features are likely to change, we will only provide a brief overview of their
    functionality, without going into too much detail. We will, however, provide you
    with some use cases and further references.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following key topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Early access to new features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looping by Zapier – using loops to process datasets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sub-Zap by Zapier (feature in beta) – building modular processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web Parser by Zapier – scraping data from web pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Transfers by Zapier – moving bulk data between apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zapier Interfaces (feature in beta) – building custom forms, chatbots, and visual
    interfaces
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zapier Tables (feature in beta) – storing and structuring data in tables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the end of this chapter, you will have acquired in-depth knowledge of the
    built-in Zapier apps and features that have been released since the first edition
    of this book was published. From looping through datasets to modularizing your
    Zaps, scraping data from web pages, creating interactive interfaces, and managing
    data in tables, you will be equipped to take your automation capabilities to new
    heights.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To fully benefit from the content in this chapter, you will need access to a
    Zapier account. The Zapier Starter plan will provide you with the necessary features
    to effectively build and implement multi-step Zaps with the features discussed
    in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Early access to new features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Zapier team works hard to develop new features that will benefit users.
    These features are released in the **alpha** phase to a select number of test
    users, and then in the **beta** phase when enough testing has been done to release
    them to a larger audience in staged releases to user groups. In other words, even
    though a feature might be released in beta, you might not have access to it. You
    can, however, sign up for Zapier’s **Early Access Program** to be included in
    the early-stage user testing groups. You can do that at [https://zapier.com/early-access](https://zapier.com/early-access).
    You can also sign up for notifications about new AI feature releases at [https://zapier.com/ai](https://zapier.com/ai).
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s dive into an overview of the **Looping by Zapier** built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Looping by Zapier – using loops to process datasets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you have multiple items in a set of data and need to perform one or more
    actions for each of the individual items rather than as a bulk set, the **Looping
    by Zapier** built-in app becomes a handy tool in your Zap-building toolkit. This
    built-in app enables you to leverage looping functionality to iterate through
    sets of data so that you can automate bulk actions, process large datasets efficiently,
    and handle complex workflows with ease. The following figure illustrates how Looping
    by Zapier works:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.1 – How Looping by Zapier works](img/B18474_13_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.1 – How Looping by Zapier works
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples where leveraging loops with Looping by Zapier would
    be useful:'
  prefs: []
  type: TYPE_NORMAL
- en: For meetings that you have set up in your calendar, you will want to send a
    personalized email to each of the invitees with a Zoom link 1 hour before the
    meeting’s start time. Instead of setting up individual email actions for each
    address, you can use Looping by Zapier to iterate through the list and send each
    attendee an email.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You receive a bulk dataset of support ticket information and you need to assign
    it to different team members for resolution. You can use Looping by Zapier to
    iterate through the list and create cards in Trello, with assigned members and
    notifications sent via Slack.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Looping by Zapier built-in app can be used to create data loops with line
    items, numbers, and text, and has the following action events:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Create Loop From** **Line Items**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create Loop** **From Numbers**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create Loop** **From Text**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding how to use line items in your Zaps will help you harness the functionality
    of the Looping by Zapier built-in app. We will cover line items in the *Manipulating
    lineitems* section in [*Chapter 18*](B18474_18.xhtml#_idTextAnchor2073), *Zapier’s*
    *Utilities Functions*.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a look at what a Zap that uses Looping by Zapier would look like.
  prefs: []
  type: TYPE_NORMAL
- en: An example of using the Create Loop from Line Items action event of Looping
    by Zapier
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We will use the example mentioned earlier where, for specific meetings that
    you have set up in your Google Calendar, you want to send a personalized email
    to each of the invitees with the Zoom link, 1 hour before the meeting’s start
    time. In the Zap, there would be a Filter step to specify which meeting types
    we want the Zap to continue to run for, Formatter steps to extract the Zoom URL
    from the meeting description, a loop containing a further filter to specify which
    invitees should receive the email, and then finally the step to send the email.
    The following screenshot shows an example of what this would look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.2 – An example of a Zap containing Looping by Zapier](img/B18474_13_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.2 – An example of a Zap containing Looping by Zapier
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Looping by Zapier action step, you need to add one or more fields under
    `Attendees email` addresses and the `Attendee response` confirmation to use in
    the Send Email and Filter steps, respectively. This is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 13.3 – \uFEFFOverview of how to set up a Looping by Zapier action\
    \ step](img/B18474_13_03.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 13.3 – Overview of how to set up a Looping by Zapier action step
  prefs: []
  type: TYPE_NORMAL
- en: 'You can review a more detailed overview of how to set up Looping by Zapier
    in your Zaps and further details on the limitations of this built-in app at [https://help.zapier.com/hc/en-us/articles/8496106701453](https://help.zapier.com/hc/en-us/articles/8496106701453).
    You can get a very detailed dive into using Looping by Zapier that provides comprehensive
    examples from the following article: [https://community.zapier.com/featured-articles-65/by-zapier-learn-about-looping-11670](https://community.zapier.com/featured-articles-65/by-zapier-learn-about-looping-11670).'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: For more inspiration and access to pre-built templates, you can review the Looping
    by Zapier built-in app profile page at [https://zapier.com/apps/looping/integrations](https://zapier.com/apps/looping/integrations).
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how and when to use the Looping
    by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to use the **Sub-Zap by Zapier** feature to break your
    Zaps into reusable components.
  prefs: []
  type: TYPE_NORMAL
- en: Sub-Zap by Zapier (feature in beta) – building modular processes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the **Sub-Zap by Zapier** built-in app, you can now break down your Zaps
    into reusable components called **Sub-Zaps**. This means you can connect your
    Zaps to Sub-Zaps to run tasks outside of your originating or parent Zap.
  prefs: []
  type: TYPE_NORMAL
- en: As Sub-Zap by Zapier is currently in beta and considered a Developer Tool, we
    will only provide a brief overview of the built-in app and then provide further
    useful resources with more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples of when you might find using Sub-Zap by Zapier useful:'
  prefs: []
  type: TYPE_NORMAL
- en: When you want to create reusable formulas using Formatter by Zapier steps across
    multiple Zaps with different trigger events. Instead of having multiple Zaps with
    the same steps, you can use Sub-Zap by Zapier to call a Sub-Zap that performs
    the required steps and passes the result to the parent Zap. You can read more
    about this example at [https://community.zapier.com/featured-articles-65/using-sub-zaps-to-create-reusable-formulas-10326](https://community.zapier.com/featured-articles-65/using-sub-zaps-to-create-reusable-formulas-10326).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you want to retrieve API access tokens using Webhooks by Zapier or an API
    Request action event outside of your main Zap. You can use Sub-Zap by Zapier for
    this. You can read more about this example at [https://community.zapier.com/featured-articles-65/an-example-of-using-sub-zaps-by-zapier-to-retrieve-an-access-token-11001](https://community.zapier.com/featured-articles-65/an-example-of-using-sub-zaps-by-zapier-to-retrieve-an-access-token-11001).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Sub-Zap by Zapier built-in app can be used with the following trigger and
    action events:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Start a** **Sub-Zap** (trigger)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Return from a** **Sub-Zap** (action)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Call a** **Sub-Zap** (action)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These actions and trigger events must be used together for your Sub-Zap to
    successfully work. The originating Zap must have a **Call a Sub-Zap** action event,
    and your Sub-Zap must have a **Start a Sub-Zap** trigger event and a final step
    with the **Return from a Sub-Zap** action event. An example of a parent Zap is
    illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.4 – An example of a parent Zap containing a Call a Sub-Zap action
    step](img/B18474_13_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.4 – An example of a parent Zap containing a Call a Sub-Zap action
    step
  prefs: []
  type: TYPE_NORMAL
- en: 'The related Sub-Zap is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.5 – An example of a Sub-Zap showing the Start a Sub-Zap trigger
    and Return From a Sub-Zap action steps](img/B18474_13_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.5 – An example of a Sub-Zap showing the Start a Sub-Zap trigger and
    Return From a Sub-Zap action steps
  prefs: []
  type: TYPE_NORMAL
- en: 'You can review a short overview of how to create a Sub-Zap and further details
    on the limitations of Sub-Zap by Zapier at [https://help.zapier.com/hc/en-us/articles/8496308527629-Build-reusable-Sub-Zaps](https://help.zapier.com/hc/en-us/articles/8496308527629-Build-reusable-Sub-Zaps).
    You can get a very detailed dive into using Sub-Zaps with comprehensive examples
    by reading the following article: [https://community.zapier.com/featured-articles-65/by-zapier-sub-zaps-and-how-to-use-them-11497](https://community.zapier.com/featured-articles-65/by-zapier-sub-zaps-and-how-to-use-them-11497).'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: For more inspiration and access to pre-built templates, you can review the Sub-Zap
    by Zapier built-in app profile page at [https://zapier.com/apps/sub-zap-by-zapier/integrations](https://zapier.com/apps/sub-zap-by-zapier/integrations).
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how and when to use the Sub-Zaps
    by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to use the **Web Parser by Zapier** feature to scrape
    data from web pages.
  prefs: []
  type: TYPE_NORMAL
- en: Web Parser by Zapier – scraping data from webpages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web parser applications offer flexibility in extracting and parsing relevant
    data from websites and can be valuable tools for automating data collection, research,
    and monitoring tasks. By using the **Web Parser by Zapier** built-in app, you
    can automate workflows to gather and extract product details, pricing information,
    job listings, news articles, and much more from multiple websites. This allows
    for efficient comparison, aggregation, and analysis of data, saving time and effort.
    It facilitates the seamless integration of web-based information into broader
    workflows, enabling organizations and individuals to leverage the power of web
    data for improved efficiency, decision-making, and productivity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a few examples where using Web Parser by Zapier would be useful:'
  prefs: []
  type: TYPE_NORMAL
- en: When performing competitor research, you can use Web Parser by Zapier to extract
    product information and prices from different e-commerce websites. This allows
    you to compare prices between different sites without manually visiting each website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you’re searching for job opportunities, Web Parser by Zapier can extract
    job titles, descriptions, locations, and application links from job listing websites.
    This allows you to automate the process of collecting and organizing job postings
    from multiple sources. This is especially useful if the job website does not have
    alert functionality.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web Parser by Zapier can scrape data from websites and extract specific information,
    such as product reviews, user ratings, or customer feedback. This data can then
    be used for market research, sentiment analysis, or other data-driven decision-making
    processes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are many more ways to use Web Parser by Zapier in your Zaps.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: For more inspiration and access to pre-built templates, you can review the Web
    Parser by Zapier built-in app profile page at [https://zapier.com/apps/web-parser-by-zapier/integrations](https://zapier.com/apps/web-parser-by-zapier/integrations).
  prefs: []
  type: TYPE_NORMAL
- en: The Web Parser by Zapier built-in app can only be used with the **Parse Webpage**
    action event. Next, let’s explore how to use this built-in app and action event.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the Parse Webpage action event
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can use the **Parse Webpage** action event once you have set up your trigger
    step.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have added an action step, by either selecting the **Action** step
    or clicking on the **+** icon, and chosen **Web Parser by Zapier** as the app
    and **Parse Webpage** as the action event, you can edit the fields in the **Set
    up action** section as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**URL to Parse**: Add the URL that you want to parse data from by adding static
    text or mapping in dynamic values from previous steps, or use a combination of
    both. This is a required field and must have a value for the Zap to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Content output format**: Choose **HTML**, **Markdown**, or **Plaintext**
    from the drop-down list. You can also add static text or map in a dynamic field
    value from previous steps using the **Custom** option.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continue on failure**: Use this Boolean field to select **True** or **False**
    from the drop-down menu, enter text, or insert data from previous steps for this
    step to be considered a “success” if nothing is found in the search or the action
    fails. The default for this field is **False**, which you should choose if you
    want the Zap to stop running at this point if nothing is found; this is the most
    common use case. This means that all dependent steps will be skipped. Use the
    **True** option if you want to allow the Zap to continue and subsequent steps
    to run. You can then add more control to your workflows by adding Filter by Zapier
    or Paths by Zapier conditional logic for more control and allowing those steps
    to pass or stop based on whether the search returned a result or not. Filter by
    Zapier and Paths by Zapier were covered in [*Chapter 7*](B18474_07.xhtml#_idTextAnchor905),
    *Getting Started with* *Built-in Apps*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s use the example of searching for customer service job opportunities on
    the job website Reed. You might want to add details of a web parse to a spreadsheet
    every day at 9 A.M. by using Schedule by Zapier as your trigger app, parse data
    from the website using Web Parser by Zapier, and then update a Google Sheet. You
    can start by setting up a filter and copying the URL, which in this example might
    be [https://www.reed.co.uk/jobs/customer-service-jobs?keywords=customer-service&parentsector=customer-service](https://www.reed.co.uk/jobs/customer-service-jobs?keywords=customer-service&parentsector=customer-service).
    This is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.6 – Customizing the Parse Webpage action event](img/B18474_13_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.6 – Customizing the Parse Webpage action event
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Continue** button. Now, you can use the **Test action** section
    to test this step or click **Skip test**.
  prefs: []
  type: TYPE_NORMAL
- en: 'The result of this parsing is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.7 – The result from the Parse Webpage action step](img/B18474_13_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.7 – The result from the Parse Webpage action step
  prefs: []
  type: TYPE_NORMAL
- en: You can then proceed to add one or more action steps, then publish your Zap.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how and when to use the Web Parser
    by Zapier built-in app.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to use the **Transfers** feature to move data in bulk
    between apps.
  prefs: []
  type: TYPE_NORMAL
- en: Transfers by Zapier – moving bulk data between apps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes, it is useful to move data in bulk between your apps. With the **Transfers**
    feature, you can do just that with certain apps. The **Transfers** feature is
    standalone, allowing you to move data between apps in bulk, on-demand, or at regular
    frequencies. In other words, this feature is not connected to your Zaps.
  prefs: []
  type: TYPE_NORMAL
- en: 'It might be useful to use this feature when you would like to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Move historical data for your existing Zaps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a one-off on-demand data transfer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Move data when you begin to use one or more new apps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Schedule regular bulk transfers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Before using the **Transfers** feature, you will need to know the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Frequency**: This specifies how many times you want your transfer to run.
    This could be set to **Run Once** or to run periodically based on **Schedule**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source app**: The application that you want to send data from – for example,
    EventBrite. Only certain apps are supported.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source data**: The record type that you want to pull data from in **Source
    app**. For example, in EventBrite, this could be **Attendee** or **Event**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Destination app**: The application that you want to send data to – for example,
    Google Drive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Destination action**: The action event that you want to perform to push data
    into **Destination app** based on the existing action events for that app. For
    example, in Google Drive, this could be **Copy File** or **Create folder**. Certain
    apps, such as Shopify, QuickBooks, and Zendesk, support the **Create or update**
    action event in addition to the standard action events for that app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will also need to know what data you would like to map from **Source app**
    to **Destination app**.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: 'All Zapier integrated apps can be used as destination apps. However, there
    are limited source apps and destination apps that support the update or create
    action events in the **Transfers** feature. A current list can be found at [https://help.zapier.com/hc/en-us/articles/8496260754957-Which-apps-does-Transfer-support](https://help.zapier.com/hc/en-us/articles/8496260754957-Which-apps-does-Transfer-support).
    If you would like to request an addition to the support app list, you can fill
    out this form: [https://zapier.typeform.com/to/t9z7NNlx](https://zapier.typeform.com/to/t9z7NNlx).
    A workaround, if your app does not exist as a source app, is to add your data
    to a Google Sheet and use that as your source. Check out the article at [https://community.zapier.com/show-tell-5/use-google-sheets-to-import-existing-data-from-your-apps-12143](https://community.zapier.com/show-tell-5/use-google-sheets-to-import-existing-data-from-your-apps-12143)
    for more details.'
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s dive into how to use this feature.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a transfer between apps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you have decided on the frequency of transfers, apps, records, and action
    events you want to use, follow these steps to set up your transfer:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the **Transfers** dashboard by clicking on the **Transfers** link
    in the left-hand navigation menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, click the **New** **Transfer** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, select the **Run once** button for a one-off transfer or
    the **Schedule** button for a regularly scheduled transfer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, click the **Create a new** **transfer** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the next screen, select your **Source app**, **Source data**, **Destination
    app**, and **Destination action** values, then click the **Next** button. An example
    is shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 13.8 – An example of setting up the Transfers feature](img/B18474_13_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.8 – An example of setting up the Transfers feature
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen, select the **Source app** account you want to use, then
    click the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For some apps with hierarchical structures, such as databases, you might be
    required to specify the location of the data. For example, in Airtable, this could
    be **Base** and **Table**, and **Limit to View**. Upon clicking the **Next** button,
    Zapier will retrieve the data from your selected app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, select the **Destination app** account you want to use,
    then click the **Next** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, map the relevant fields in your **Destination app** account
    as required.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, check the preview to make sure that all your data has been
    mapped correctly. Click the **Edit fields** button to make changes or the **Looks
    good** button to continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, if you have chosen a scheduled transfer, choose how frequently
    you would like the transfer to run. You can choose from **Every hour**, **Every
    day**, **Every week**, or **Every month**, then click the **Next** button to choose
    the hour and day of the week or month if relevant.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, add any filters to stop your transfer from running unless
    the data meets certain conditions, then click **Confirm Schedule**, if it is a
    scheduled transfer, or **Send data**, if it is a one-off transfer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once your transfer has been confirmed, click **Go to My Transfers** to go back
    to the **Transfers** dashboard, where you will see a list of your transfers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At any time while setting up your transfer, you can click the **Start over**
    or **Back** buttons to either start from the beginning or go back to the previous
    step, respectively.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s explore how to manage transfers.
  prefs: []
  type: TYPE_NORMAL
- en: Managing your transfers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From the **Transfers** dashboard, you will see each of your transfers, who
    owns them, when they were created, the apps involved, and whether they are **Scheduled**
    or **One time** transfers. You can click on the title to edit the transfer settings
    or click on the three dots icon to access a drop-down menu that contains the following
    options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Edit Transfer settings**: Use this menu option to edit any part of your Transfer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Details**: Use this menu option to view the **Details** screen, similar to
    the **Zap Details** menu item in the Zap Editor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**History**: Use this menu option to view **Transfers History**, similar to
    the **Zap History** menu item in the Zap Editor'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rename**: Use this menu option to rename your transfer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Delete**: Use this menu option to delete your transfer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 13.9 – Managing your \uFEFFtransfers from the Transfers dashboard](img/B18474_13_09.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 13.9 – Managing your transfers from the Transfers dashboard
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: For more details on possible issues and notes, check out this useful Zapier
    article about the **Transfers** feature at [https://help.zapier.com/hc/en-us/articles/8496274335885-Bulk-import-data-into-apps-with-Transfer](https://help.zapier.com/hc/en-us/articles/8496274335885-Bulk-import-data-into-apps-with-Transfer).
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s take a look at how to transfer existing data from Zaps.
  prefs: []
  type: TYPE_NORMAL
- en: Transferring existing data from your Zaps
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If an existing Zap has a trigger that is supported by the **Transfers** feature,
    you will be able to transfer existing data from this Zap. You will see a **Transfer
    existing data** option in the three dots icon in your Zap from the Zap management
    area. An example of this is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.10 – How to transfer existing data from your Zaps](img/B18474_13_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.10 – How to transfer existing data from your Zaps
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve selected this option, you will be taken to the **Transfers** module,
    prompted to filter your data, and asked to select the records you want to transfer.
    Click **Next** and then **Send data**.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how and when to use the Transfers
    by Zapier feature.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to use the **Interfaces** feature to build visual interfaces
    such as forms and chatbots.
  prefs: []
  type: TYPE_NORMAL
- en: Zapier Interfaces (feature in beta) – building custom forms, chatbots, and visual
    interfaces
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The new **Zapier Interfaces** feature allows you to design user-friendly interfaces
    to collect data and trigger Zaps effortlessly. You can harness the potential of
    user interactions to supercharge your automation workflows by building forms and
    chatbots, all from within your Zapier account.
  prefs: []
  type: TYPE_NORMAL
- en: With Zapier Interfaces, you create pages and then add **components** to those
    pages. Components can be **Forms**, **Text**, **Tables** (using **Zapier Tables**),
    **Kanban**, **Link cards**, **AI prompts**, **Chatbots**, **Dividers**, and **Media**.
    You can read more about the different types of components at [https://help.zapier.com/hc/en-us/articles/15930394291341-Types-of-components-in-Zapier-Interfaces](https://help.zapier.com/hc/en-us/articles/15930394291341-Types-of-components-in-Zapier-Interfaces).
  prefs: []
  type: TYPE_NORMAL
- en: 'Zapier Interfaces is available for free with all Zapier plans but with some
    limitations. You can get access to premium features such as tracking visitors,
    customizing branding, removing the Zapier logo, restricting user access, and connecting
    OpenAI to use other AI models with the chatbot component by upgrading to **Interfaces
    Premium** for an additional monthly fee. The different pricing plans are shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 13.11 – \uFEFFOverview of pricing options of the Zapier Interfaces\
    \ feature](img/B18474_13_11.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 13.11 – Overview of pricing options of the Zapier Interfaces feature
  prefs: []
  type: TYPE_NORMAL
- en: You can find more details on the pricing of Zapier Interfaces and a comparison
    of the different prices at [https://interfaces.zapier.com/pricing](https://interfaces.zapier.com/pricing).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a look at how to get started with Zapier Interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Zapier Interfaces
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To give you some insight into the **Interfaces** feature, you can find the
    **Interfaces** dashboard by clicking on the **Interfaces (beta)** link in the
    left-hand navigation menu or navigating to [https://interfaces.zapier.com/](https://interfaces.zapier.com/).
    Your dashboard will look similar to what is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.12 – The Zapier Interfaces dashboard](img/B18474_13_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.12 – The Zapier Interfaces dashboard
  prefs: []
  type: TYPE_NORMAL
- en: 'If you click the **+ Create** button, you can start to create your interface.
    To do this, first, you must choose to build from scratch by clicking on the **Start
    from scratch** button, choose from one of the many templates for forms or chatbots,
    or choose to create your interface from an existing table. An example is shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.13 – Using Zapier Interfaces templates](img/B18474_13_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.13 – Using Zapier Interfaces templates
  prefs: []
  type: TYPE_NORMAL
- en: 'As this feature is still in beta and might change, we will not cover all the
    details of how to create and manage your interfaces. Instead, you can stay abreast
    with the latest changes by reading these useful articles from Zapier that will
    help you understand the best practices for using Zapier Interfaces:'
  prefs: []
  type: TYPE_NORMAL
- en: '**How to create pages and** **apps**: [https://help.zapier.com/hc/en-us/articles/14490267815949-Create-interactive-pages-and-apps-with-Zapier-Interfaces-Beta-](https://help.zapier.com/hc/en-us/articles/14490267815949-Create-interactive-pages-and-apps-with-Zapier-Interfaces-Beta-'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**How to customize your Zapier Interfaces** **project**: [https://help.zapier.com/hc/en-us/articles/15932034572685-Customize-your-Zapier-Interfaces-project](https://help.zapier.com/hc/en-us/articles/15932034572685-Customize-your-Zapier-Interfaces-project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**How to use forms in your Zapier** **Interfaces**: [https://help.zapier.com/hc/en-us/articles/15927500577037-Use-forms-in-Zapier-Interfaces](https://help.zapier.com/hc/en-us/articles/15927500577037-Use-forms-in-Zapier-Interfaces'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**How to create chatbots using Zapier** **Interfaces**: [https://help.zapier.com/hc/en-us/articles/15931071482509-Create-chatbots-in-Zapier-Interfaces](https://help.zapier.com/hc/en-us/articles/15931071482509-Create-chatbots-in-Zapier-Interfaces'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**How to fix errors in your chatbots built with Zapier** **Interfaces**: [https://help.zapier.com/hc/en-us/articles/16451058327693-Fix-errors-in-Zapier-Interfaces-chatbots](https://help.zapier.com/hc/en-us/articles/16451058327693-Fix-errors-in-Zapier-Interfaces-chatbots'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how and when to use the Zapier
    Interfaces feature.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s review how to use the **Zapier Tables** feature to store data in
    tabular records.
  prefs: []
  type: TYPE_NORMAL
- en: Zapier Tables (feature in beta) – storing and structuring data in tables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The new **Zapier Tables** feature allows you to create, edit, access, and share
    tabular records, all stored within Zapier, rather than using spreadsheets such
    as Google Sheets or databases such as Airtable to store simple data. Not having
    to use additional tools means that you can reduce your task history overall and
    have one place for storing certain data.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: This feature is undergoing beta user testing and is still in active development.
    You should be aware that functionality could change, and it might be wise to keep
    a backup of your data in another app.
  prefs: []
  type: TYPE_NORMAL
- en: Zapier Tables is a perfect complement to Zapier Interfaces, whereby you can
    collect form submission data and tabulate it within Zapier, allowing for one easy
    collection point for data to be stored and transferred to your other apps.
  prefs: []
  type: TYPE_NORMAL
- en: You will be able to link your Tables to Zaps and feed them from interfaces,
    create filters to specify which records to display in your Tables, select which
    fields you want to hide or display, and share the Tables with individuals in your
    team and with a public link.
  prefs: []
  type: TYPE_NORMAL
- en: 'Your Zapier price plan determines how many **Tables**, **Fields**, **Records**,
    and **Views** (a feature soon to be released) you can create, as well as which
    features you will have access to, such as public sharing, the ability to use buttons
    in tables, and the number of seats you will have access to. This is shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.14 – Pricing the Zapier Tables feature](img/B18474_13_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.14 – Pricing the Zapier Tables feature
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a look at how to get started with Zapier Tables.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Zapier Tables
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To give you some insight into the **Zapier Tables** feature, you can find the
    **Tables** dashboard by clicking the **Tables (beta)** link in the left-hand navigation
    menu or navigating to [https://tables.zapier.com/](https://tables.zapier.com/).
    Your dashboard will look similar to what is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.15 – The Zapier Tables dashboard](img/B18474_13_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.15 – The Zapier Tables dashboard
  prefs: []
  type: TYPE_NORMAL
- en: 'If you click the **+ Create** button, you can start to create your table. An
    example is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 13.16 – Creating a table using Zapier Tables](img/B18474_13_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13.16 – Creating a table using Zapier Tables
  prefs: []
  type: TYPE_NORMAL
- en: 'As this feature is still in beta and might change, we will not cover all the
    details of how to create and manage your Tables. Instead, you can stay abreast
    with the latest changes by reading these useful articles from Zapier that will
    help you understand the best practices for using Zapier Tables:'
  prefs: []
  type: TYPE_NORMAL
- en: '**How to create new tables and edit table** **settings**: [https://help.zapier.com/hc/en-us/articles/9804340895245-Store-data-with-Zapier-Tables](https://help.zapier.com/hc/en-us/articles/9804340895245-Store-data-with-Zapier-Tables'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**Using different field types in your** **Tables**: [https://help.zapier.com/hc/en-us/articles/9775472454157-Different-field-types-in-Zapier-Tables](https://help.zapier.com/hc/en-us/articles/9775472454157-Different-field-types-in-Zapier-Tables'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**Creating Zaps from Table records and triggering the Zap manually or automatically
    from records, including specific** **fields**: [https://help.zapier.com/hc/en-us/articles/9881673906701-Trigger-and-continue-Zaps-from-records](https://help.zapier.com/hc/en-us/articles/9881673906701-Trigger-and-continue-Zaps-from-records'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**Triggering Zaps to run or running actions such as approval steps by using
    button fields in your** **Tables**: [https://help.zapier.com/hc/en-us/articles/15720961080717-Use-button-fields-in-Zapier-Tables](https://help.zapier.com/hc/en-us/articles/15720961080717-Use-button-fields-in-Zapier-Tables'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**Sharing your Tables and managing user** **permissions**: [https://help.zapier.com/hc/en-us/articles/16021760381453-Manage-permissions-in-Zapier-Tables](https://help.zapier.com/hc/en-us/articles/16021760381453-Manage-permissions-in-Zapier-Tables'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: '**Understanding field-related, plan-related, and plan-limited** **limits**:
    [https://help.zapier.com/hc/en-us/articles/15721386410765-Zapier-Tables-usage-limits](https://help.zapier.com/hc/en-us/articles/15721386410765-Zapier-Tables-usage-limits'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how and when you can use the **Zapier**
    **Tables** feature.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, first, we covered how to get early access to new Zapier features
    and how to use the Looping by Zapier, Sub-Zap by Zapier, and Web Parser by Zapier
    built-in apps in our Zaps. Then, we explored how to transfer data between applications
    using Transfer by Zapier. After, we covered how to use the customizable **Interfaces**
    module to create forms, chatbots, and visual interfaces. Finally, we looked at
    how to use the **Tables** module to manage and store data in tables.
  prefs: []
  type: TYPE_NORMAL
- en: You should now understand how to leverage Looping by Zapier to process datasets,
    break down complex Zaps using Sub-Zap by Zapier, extract data from web pages with
    Web Parser by Zapier, seamlessly move between applications using the Transfers
    by Zapier module, create interfaces, and manage data effectively with tables.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn how to manipulate dates and times with the
    versatile Formatter by Zapier built-in app. We will cover how to convert and adjust
    date and time values into different formats, as well as how to add and subtract
    time.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What Zapier feature should you use if you want to transfer data in bulk from
    one app to another?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which two Zapier features currently in beta work well hand-in-hand to capture
    data and store it in tables?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
