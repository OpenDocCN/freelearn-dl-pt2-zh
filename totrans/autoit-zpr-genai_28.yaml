- en: '24'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tips, Tricks, and Best Practices to Enhance Your Productivity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We’ll soon be coming to the end of our Zapier coaching journey. We have covered
    many topics that will help you to create effective workflow automations in your
    business or for your clients using Zapier. In this chapter, we will discuss the
    best practices for utilizing Zapier effectively and build on the tips and tricks
    we learned in each chapter. First, we will recap the steps covered throughout
    this book to help you with your Zap building. We will also explore a range of
    tips and tricks that you can use to effectively create workflows in Zapier for
    top performance.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following key topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Best practices for using Zapier effectively
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tips and tricks to enhance your use of Zapier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have worked through each of these topics, you will have a better understanding
    of the best practices to use when building workflow automations in Zapier.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of the content in this chapter, you will need access to
    a Zapier account. The Zapier Free plan will be adequate for you to create single-step
    workflows and use Zapier’s pre-built templates. The Zapier Starter plan will be
    required for you to use Premium apps and to create multi-step workflows.
  prefs: []
  type: TYPE_NORMAL
- en: Best practices for using Zapier effectively
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The best way to understand how to optimize using Zapier in your business is
    to review the content we explored in each chapter of this book so that you have
    a point for quick reference. Let’s briefly explore the content we covered in this
    book as an overview of the best practices to use when building workflows in Zapier.
  prefs: []
  type: TYPE_NORMAL
- en: Starting with the basics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Getting the groundwork done at the beginning will prepare you for success. Once
    you’ve chosen the best Zapier plan for you and created a Zapier account, the next
    step is to familiarize yourself with navigation on the Zapier platform and then
    edit your settings and preferences to suit. Make sure you’ve also grasped the
    terminology used on the Zapier platform as this will help you when troubleshooting.
    We covered these topics in [*Chapter 1*](B18474_01.xhtml#_idTextAnchor014), *Introduction
    to Business Process Automation* *with Zapier*.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing before you automate
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Preparation is the key to success and will save you a lot of time from the start.
    A large part of implementing effective automations is ensuring you have identified
    your manual and repetitive processes, documented them, and simplified them first.
    Once you’ve done that, you should establish how your business apps fit into those
    processes and how those apps integrate with Zapier. Make the most of the information
    provided in the Zapier app ecosystem directory to help you do this. We covered
    these topics in [*Chapter 2*](B18474_02.xhtml#_idTextAnchor225), *Preparing to
    Automate* *Your Processes*.
  prefs: []
  type: TYPE_NORMAL
- en: When you’re ready to start building your Zaps, strategize the best flow structure
    first. As you can’t drag and drop your steps around in the Zap editor, planning
    out the steps in advance of building your Zaps will save you time. We covered
    this topic in [*Chapter 3*](B18474_03.xhtml#_idTextAnchor374), *Building Your
    First Automated* *Workflow (Zap)*.
  prefs: []
  type: TYPE_NORMAL
- en: Getting to grips with steps, fields, and data mapping
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A crucial first step in your Zap building is understanding how trigger, action,
    and search action steps work together. It’s also important to have a firm grasp
    on how to enter data into fields in your action steps by using dropdowns, data
    mapping from the previous steps of your Zap, and entering text. You will also
    need to know about the different field types used in action steps and what kind
    of data is accepted in these fields. We covered these topics in [*Chapter 3*](B18474_03.xhtml#_idTextAnchor374),
    *Building Your First Automated* *Workflow (Zap)*.
  prefs: []
  type: TYPE_NORMAL
- en: Managing your Zaps effectively
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Having a well-organized Zapier account will help you maintain structure the
    more Zaps you build and the more you automate in your business. Keeping your Zaps
    organized with appropriate naming and storage in specific folders helps maintain
    a tidy account. It’s also useful to know how to individually manage your Zaps
    and connected apps, as well as understand statuses, to save you time with troubleshooting.
    You might also want to share Zaps with other Zapier users, and Zaps, app connections,
    and folders with team members. We covered these topics in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520),
    *Managing* *Your Zaps*.
  prefs: []
  type: TYPE_NORMAL
- en: Staying on top of your task usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While you’re getting to grips with Zapier, you will want to keep an eye on your
    task usage. It may not seem obvious from the start; however, it is easy to make
    a mistake in your Zaps that can cause your Zaps to trigger excessively, resulting
    in high task usage. This is even more important when you’re using lower-priced
    plans with less task allocation. The solution is often adding a Filter by Zapier
    step soon after the trigger step to allow your Zap to run only if the trigger
    data satisfies certain conditions. Now, to ensure you are able to monitor your
    task usage, you can set up a Zap using the Zapier Manager built-in app and turn
    off a specific Zap if required. We covered this topic in [*Chapter 12*](B18474_12.xhtml#_idTextAnchor1468),
    *Managing Your Zapier Account with* *Built-In Apps*.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up alerts and understand how to troubleshoot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At some point, you will experience errors and issues with your Zaps. A key tip
    for success is to have a well-monitored Zapier account so that you can address
    these problems swiftly. Make sure that you have adjusted your account settings
    accordingly and have created Zap error and app status alerts to notify you of
    problems with your Zaps and your Zapier account. Once you’ve done that, knowing
    how to troubleshoot when you see errors or when things don’t go according to plan
    with workflows is critical to success with Zapier. When you can’t solve the problem
    yourself, you’ll also need to know where to go to find assistance. We covered
    these topics in [*Chapter 5*](B18474_05.xhtml#_idTextAnchor635), *Troubleshooting
    and Handling Zap Errors*, and [*Chapter 12*](B18474_12.xhtml#_idTextAnchor1468),
    *Managing Your Zapier Account with* *Built-In Apps*.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the different built-in Zapier apps and features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You don’t need to know how to use all of the built-in apps by Zapier at once,
    but having a good understanding of what they all do and how they can help you
    when you’re building your Zaps is extremely useful.
  prefs: []
  type: TYPE_NORMAL
- en: We started with a handy overview of all the approved built-in apps (those not
    in the beta phase) in [*Chapter 6*](B18474_06.xhtml#_idTextAnchor795), *Creating
    Multi-Step Zaps and Using Built-In Apps*, then discussed each one in detail from
    [*Chapter 7*](B18474_07.xhtml#_idTextAnchor905), *Getting Started with Built-In*
    *Apps*, onward.
  prefs: []
  type: TYPE_NORMAL
- en: The most useful built-in apps to start with are Filter by Zapier, which we covered
    in [*Chapter 7*](B18474_07.xhtml#_idTextAnchor905), *Getting Started with Built-In
    Apps*, and the versatile Formatter by Zapier built-in app, which we covered from
    [*Chapter 14*](B18474_14.xhtml#_idTextAnchor1580), *Formatting Date and Time*,
    to [*Chapter 18*](B18474_18.xhtml#_idTextAnchor2073), *Zapier’s* *Utilities Functions*.
  prefs: []
  type: TYPE_NORMAL
- en: You can also explore how to supercharge your automations with AI. We discussed
    using AI with Zapier in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216), *AI*
    *and Automation*.
  prefs: []
  type: TYPE_NORMAL
- en: "You can get access to a comprehensive cheat sheet for all the Zapier built-in\
    \ apps at [https://bit.ly/zapier-book](https://bit.ly/zapier-\uFEFF\uFEFFbook)."
  prefs: []
  type: TYPE_NORMAL
- en: Getting inspired
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Having a good idea of what you can automate in your business is an important
    starting point in your Zap-building process. If you need some inspiration and
    examples of ways in which you can automate your different business function processes
    with Zapier, you can check out the content from [*Chapter 20*](B18474_20.xhtml#_idTextAnchor2242),
    *Automating Your Marketing Processes*, to [*Chapter 23*](B18474_23.xhtml#_idTextAnchor2594),
    *Automating Your Finance and* *Reporting Processes*.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing your processes and automations regularly
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Continuous improvement is another key factor in maintaining successful automated
    processes. Once you have built your first few Zaps, make sure that you review
    them regularly and adjust them accordingly based on errors and changes in your
    processes. Reviewing your Zaps regularly and ensuring they have the minimum number
    of required steps will also help reduce task usage and prevent you from paying
    more than you need to. We covered this topic in [*Chapter 3*](B18474_03.xhtml#_idTextAnchor374),
    *Building Your First Automated* *Workflow (Zap)*.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of the best practices for using Zapier
    effectively. Next, let’s review a few tips and tricks that will further optimize
    your Zapier usage.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks to enhance your use of Zapier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you’ve learned how to build your first few Zaps and you’re on your
    way to supercharging your business and running it on autopilot, there might be
    times that you come across pain points that can be solved relatively easily if
    you know what to do next. Let’s go over a few tips and tricks that will help you.
  prefs: []
  type: TYPE_NORMAL
- en: Trigger data not pulling through
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some app integrations may have issues pulling through real trigger data for
    you to use when building your Zap and you try to test your trigger. In many cases,
    if no trigger data can be found, Zapier will pull through dummy data that you
    can use in your action step mapping. Sometimes, Zapier doesn’t produce any dummy
    data, and if you click on the **Skip Test** button, you should be able to use
    placeholders in your action steps that will fill with data once the Zap is turned
    on and running. Rest assured that your Zap will run with the correct mappings
    once you have turned it on.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also manually map data using the code for the node ID for the step
    containing the data and the field name, which might, for example, look like this:
    `{{122484559__First Name}}`. You can read more about how to handle this in the
    Zapier Community article at [https://community.zapier.com/featured-articles-65/how-to-manually-map-fields-that-do-not-appear-in-the-sample-data-aka-custom-pill-mapping-9738](https://community.zapier.com/featured-articles-65/how-to-manually-map-fields-that-do-not-appear-in-the-sample-data-aka-custom-pill-mapping-9738).'
  prefs: []
  type: TYPE_NORMAL
- en: Timezone settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ensure that you have specified your timezone settings in **Account Settings**,
    and if applicable, in specific Zaps. While many apps use your computer or location
    settings to set timezones, there might be differences between how your apps handle
    this information. This can cause problems in your Zaps by causing time or date
    discrepancies in your Zap run results. Timezones can be tricky to work with, so
    you should reach out to Zapier Support if you need some extra help assessing issues
    with timezones. You can read more about handling time and dates in [*Chapter 14*](B18474_14.xhtml#_idTextAnchor1580),
    *Formatting Date* *and Time*.
  prefs: []
  type: TYPE_NORMAL
- en: Extra Fields alerts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You might find that, once you have built your steps, when you change the app
    or folder within an action step, you will be presented with an **Extra Fields**
    warning. This means that fields that you had previously filled in no longer exist.
    This is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 24.1 – \uFEFFOverview of an Extra Fields warning message](img/Figure_24.01_B18474.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 24.1 – Overview of an Extra Fields warning message
  prefs: []
  type: TYPE_NORMAL
- en: It is best to ensure that you always clear unused field data or this can cause
    errors when your Zaps run. Just click on the **Remove these extra fields** button
    to do so.
  prefs: []
  type: TYPE_NORMAL
- en: Refreshing fields when you make adjustments in your app
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you add new custom fields to your apps, make sure that you refresh the
    fields in any steps involving this change. This is important as, often, data in
    old fields may remap against newer fields, causing inaccuracies when your Zap
    is turned on. This is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 24.2 – \uFEFFOverview of using the Refresh fields button to bring\
    \ through new field information](img/Figure_24.02_B18474.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 24.2 – Overview of using the Refresh fields button to bring through new
    field information
  prefs: []
  type: TYPE_NORMAL
- en: This is quite common, for example, if you add additional columns to a Google
    Sheets spreadsheet, particularly between existing columns, or new merge fields
    in a Google Docs template. Click on the **Refresh fields** button to bring in
    new field information.
  prefs: []
  type: TYPE_NORMAL
- en: Doing more than what Zapier integration with an app allows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You might find that the Zapier integration with one or more apps that you use
    in your business is tailored to common use cases. However, you might want to achieve
    more with the integration, with different triggers, actions, or searches, or you
    might want certain fields to be added and data to be restructured in a more usable
    way. Often, you can achieve more by becoming familiar with reading API documentation
    and then making HTTP requests with the Webhooks by Zapier built-in app, via the
    **API Request** action available in some apps in beta, or by using code with the
    Code by Zapier built-in app. You can also approach Zapier Support to find out
    who built the integration, be it a **Software-as-a-Service** (**SaaS**) app vendor
    or Zapier, and discuss whether improvements can be made to the integration. When
    app integrations are in the beta phase, this is usually a good opportunity to
    give feedback and suggest improvements.
  prefs: []
  type: TYPE_NORMAL
- en: Thinking outside the box
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you’re creating your workflows, be creative. If you can’t achieve something
    with the Zapier integration with your app and you’ve explored all avenues, think
    about using a free tool as a stepping stone. You don’t have to stick to conventional
    uses of the app. For example, you can use the Formatter by Zapier **Utilities**
    action event with the **Lookup Table** transform function to look up one value
    matching a key. If, however, you want to search for numerous values related to
    one key, you could use a Google Sheets spreadsheet as the lookup table instead.
  prefs: []
  type: TYPE_NORMAL
- en: Using the Zapier community as a resource
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you run into a problem, chances are that other Zapier users will have experienced
    it too. The Zapier Community forum, which can be found at [https://community.zapier.com/](https://community.zapier.com/),
    holds a log of searchable questions and answers to problems experienced by other
    users. The forum is also frequented by the Zapier Support team, several Zapier
    Experts, and other advanced users who will happily help with your issue if you
    find it hasn’t been addressed previously.
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of the tips and tricks for enhancing
    your use of Zapier.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed the best practices to adopt to enhance your success
    with using Zapier in your business. First, we did a recap of the topics that were
    covered in this book, which will help you use Zapier effectively. Then, we explored
    some practical tips and tricks for optimum Zap building.
  prefs: []
  type: TYPE_NORMAL
- en: You now know the best practices to follow to enhance your success with Zapier
    while implementing and using it in your business.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we’ll look at various scenarios that will help you assess
    your problem-solving and Zapier workflow-building skills. We will look into a
    specific problem that can be solved using Zapier and work through each example
    practically, with tips given along the way. The scenarios are classified by skill
    level, and you will have the opportunity to put your knowledge to the test and
    adapt your problem-solving and Zap-building skills.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What are the two first best practices to follow to ensure success in automating
    your processes?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is it possible to do more than what is presented to you with the triggers, actions,
    and searches in a Zapier integration?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
