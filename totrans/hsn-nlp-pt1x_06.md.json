["```py\ninput_text = \"<b> This text is in bold</br>, <i> This text is in italics </i>\"\noutput_text =  BeautifulSoup(input_text, \"html.parser\").get_text()\nprint('Input: ' + input_text)\nprint('Output: ' + output_text)\n```", "```py\ninput_text = ['Cat','cat','CAT']\noutput_text =  [x.lower() for x in input_text]\nprint('Input: ' + str(input_text))\nprint('Output: ' + str(output_text))\n```", "```py\ninput_text = \"This ,sentence.'' contains-£ no:: punctuation?\"\noutput_text = re.sub(r'[^\\w\\s]', '', input_text)\nprint('Input: ' + input_text)\nprint('Output: ' + output_text)\n```", "```py\ninput_text = \"Cats & dogs\"\noutput_text = input_text.replace(\"&\", \"and\")\nprint('Input: ' + input_text)\nprint('Output: ' + output_text)\n```", "```py\ndef to_digit(digit):\n    i = inflect.engine()\n    if digit.isdigit():\n        output = i.number_to_words(digit)\n    else:\n        output = digit\n    return output\ninput_text = [\"1\",\"two\",\"3\"]\noutput_text = [to_digit(x) for x in input_text]\nprint('Input: ' + str(input_text))\nprint('Output: ' + str(output_text))\n```", "```py\ninput_text = [\"0800118118\"]\noutput_text = [to_digit(x) for x in input_text]\nprint('Input: ' + str(input_text))\nprint('Output: ' + str(output_text))\n```", "```py\n    porter = PorterStemmer()\n    ```", "```py\n    word_list = [\"see\",\"saw\",\"cat\", \"cats\", \"stem\", \"stemming\",\"lemma\",\"lemmatization\",\"known\",\"knowing\",\"time\", \"timing\",\"football\", \"footballers\"]\n    for word in word_list:\n        print(word + ' -> ' + porter.stem(word))\n    ```", "```py\n    def SentenceStemmer(sentence):\n        tokens=word_tokenize(sentence)\n        stems=[porter.stem(word) for word in tokens]\n        return \" \".join(stems)\n    SentenceStemmer('The cats and dogs are running')\n    ```", "```py\nwordnet_lemmatizer = WordNetLemmatizer()\nprint(wordnet_lemmatizer.lemmatize('horses'))\nprint(wordnet_lemmatizer.lemmatize('wolves'))\nprint(wordnet_lemmatizer.lemmatize('mice'))\nprint(wordnet_lemmatizer.lemmatize('cacti'))\n```", "```py\nprint(wordnet_lemmatizer.lemmatize('madeupwords'))\nprint(porter.stem('madeupwords'))\n```", "```py\nprint(wordnet_lemmatizer.lemmatize('run'))\nprint(wordnet_lemmatizer.lemmatize('ran'))\n```", "```py\nprint(wordnet_lemmatizer.lemmatize('ran', pos='v'))\nprint(wordnet_lemmatizer.lemmatize('run', pos='v'))\n```", "```py\nsentence = 'The cats and dogs are running'\ndef return_word_pos_tuples(sentence):\n    return nltk.pos_tag(nltk.word_tokenize(sentence))\nreturn_word_pos_tuples(sentence)\n```", "```py\ndef get_pos_wordnet(pos_tag):\n    pos_dict = {\"N\": wordnet.NOUN,\n                \"V\": wordnet.VERB,\n                \"J\": wordnet.ADJ,\n                \"R\": wordnet.ADV}\n    return pos_dict.get(pos_tag[0].upper(), wordnet.NOUN)\nget_pos_wordnet('VBG')\n```", "```py\ndef lemmatize_with_pos(sentence):\n    new_sentence = []\n    tuples = return_word_pos_tuples(sentence)\n    for tup in tuples:\n        pos = get_pos_wordnet(tup[1])\n        lemma = wordnet_lemmatizer.lemmatize(tup[0], pos=pos)\n        new_sentence.append(lemma)\n    return new_sentence\nlemmatize_with_pos(sentence)\n```"]