- en: 'Conclusion: Democratizing Access to AI'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 结论：民主化AI的获取途径
- en: Artificial intelligence has the potential to improve ordinary people’s lives
    in countless ways. Democratizing access to AI will make it possible for this transformative
    technology to benefit everyone.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能有着改善普通人生活的无数可能。民主化AI的获取将使这一变革性技术能够造福于每个人。
- en: The authors of this book believe that businesses and research facilities working
    in the field of AI have a big role to play in making AI more accessible—by sharing
    the outcomes of their research and development with a broader audience, much as
    OpenAI has done with GPT-3 in the form of its publicly available API. Making such
    a powerful tool available at a marginal cost to users in important fields can
    have a long-lasting positive impact on the world.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的作者们相信，在AI领域工作的企业和研究机构在使AI更加可访问方面扮演着重要角色——通过与更广泛的受众分享他们的研究和开发成果，就像OpenAI通过其公开可用的API形式分享GPT-3一样。将这样一个强大的工具以边际成本提供给重要领域的用户，对世界产生了长期积极的影响。
- en: To conclude the book, this short chapter will look at how no-code and low-code
    programming leverage GPT-3 to move from ideas to working products. It’s a great
    example of how GPT-3 and large language models are changing jobs, economies, and
    futures. Then we’ll finish up with some takeaways for you to consider as you begin
    your GPT-3 journey.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书结尾，这一小节将讨论无代码和低代码编程如何利用GPT-3从想法到工作产品的转变。这是GPT-3和大型语言模型如何改变工作、经济和未来的一个很好的例子。然后，我们将提出一些您在开始GPT-3之旅时可以考虑的要点。
- en: No Code? No Problem!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 无代码？没有问题！
- en: At its simplest, no-code is a way of programming computers—creating websites,
    mobile apps, programs, or scripts— using a simple interface, instead of writing
    in a programming language. The no-code movement, often [hailed](https://techcrunch.com/)
    as the “[future of coding](https://onezero.medium.com/the-future-of-coding-is-no-code-3fdbd35ac15b),”
    rests upon the fundamental belief that technology should enable and facilitate
    creation, not act as a barrier to entry for those who want to develop software[[29]](xhtml-0-12.xhtml#aid_31).
    The no-code movement’s goal is to make it possible for anyone to create programs
    and apps that work, without programming skills or specialized equipment. This
    mission seems to go hand in hand with the evolution of model-as-a-service and
    the overall trend toward democratizing AI.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，无代码是一种编程计算机的方法——创建网站、移动应用、程序或脚本——使用简单的界面，而不是用编程语言编写。无代码运动，通常被誉为“[编程的未来](https://onezero.medium.com/the-future-of-coding-is-no-code-3fdbd35ac15b)，”基于这样一个基本信念，即技术应该促进和促进创造，而不是作为那些想要开发软件的人的入门障碍。无代码运动的目标是使任何人都能够创建有效的程序和应用程序，而无需编程技能或专门设备。这一使命似乎与模型即服务的演进和整体向民主化AI的趋势相辅相成。
- en: As of early 2022, the industry standard for no-code platform tools is Bubble,
    a pioneering visual-programming language and app-development program that enables
    users to create full-fledged web applications without writing a single line of
    code. The ripples from its impact have put a whole new industry in motion. In
    the words of founder Josh Haas, Bubble is “a
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 截至2022年初，无代码平台工具的行业标准是Bubble，这是一种开创性的可视化编程语言和应用程序开发程序，使用户能够在不编写一行代码的情况下创建成熟的网页应用程序。它所带来的影响已经使一个全新的行业运转起来。用创始人乔希·哈斯的话说，Bubble是“一个平台，用户只需简单地描述他们想要的内容和方式，就可以自动完成开发，无需任何代码。”哈斯在一次采访中解释说，他受到了“人们想要用技术创造的巨大需求，建立网站，构建Web应用程序，以及形式化工程人才资源之间的巨大不匹配”的启发。
- en: platform where users can just describe in simple language what they want and
    how they want it and can automate the development without any code.” Haas was
    inspired, he explains in an interview, by noticing a  “huge mismatch between the
    number of people who want to create with technology, build websites, build web
    applications, and the resources available in the form of engineering talent.”
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 平台，用户只需用简单的语言描述他们想要的内容和方式，就可以自动化开发，无需任何代码。”哈斯在一次采访中解释说，他受到了“人们想要用技术创造的巨大需求，建立网站，构建Web应用程序，以及形式化工程人才资源之间的巨大不匹配”的启发。
- en: Currently, building, developing, and maintaining an enterprise-level web application
    (such as Twitter, Facebook, or Airbnb, to name a few of the largest) requires
    talent with extensive technical expertise. Independent would-be developers who
    start at the beginner level must learn to code from scratch before actually building
    anything. That takes time and effort. “It's such a time-consuming process for
    most people that it poses a huge barrier to entry,” Haas says.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，构建、开发和维护企业级Web应用程序（如Twitter、Facebook或Airbnb等）需要具有广泛技术专长的人才。从初学者水平开始的独立开发者必须从零开始学习编码，然后才能构建任何东西。这需要时间和精力。“对于大多数人来说，这是一个耗时的过程，它构成了进入门槛，”哈斯说。
- en: This means that entrepreneurs who don’t have a development, software engineering,
    or coding background, but who have a great application idea and want to build
    a company around it, must depend on those who have that expertise– and persuade
    them to work on the idea.  Haas notes that, as you might expect, “it is very hard
    to convince someone to work just for equity on an unproven idea, even if it's
    a good idea.”
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着没有开发、软件工程或编码背景，但拥有出色应用点子并想将公司建立在其上的创业者，必须依赖于那些具有该专业知识的人，并说服他们去实现这一想法。哈斯指出，正如你可能期望的，“即使是一个好点子，也很难说服某人毫无证明的想法只是凭股权而工作。”
- en: 'In-house talent is crucial, Haas argues: while it’s possible to work with independent
    contractors, this requires a lot of back and forth and often detracts from the
    product quality and experience. Haas’s goal in founding Bubble was to lower the
    technological barrier to entrepreneurs entering the market, and to make the learning
    curve for technological skills as quick and smooth as possible. What excites him
    about no-code tools, Haas says, is the possibility of “turning an ordinary individual
    into a programmer or a software developer.” Indeed, a staggering 40% of Bubble
    users have no coding background. While Haas allows that “prior experience in programming
    definitely helps to smooth the learning curve and reduce time to pick things up,”
    even users with no experience can reach full Bubble proficiency in weeks and create
    sophisticated applications.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 哈斯认为公司内部人才至关重要：尽管与独立承包商合作是可能的，但这需要大量来回沟通，并且常常会削弱产品质量和体验。哈斯成立Bubble的目标是降低技术创业者进入市场的门槛，并使技术技能的学习曲线尽可能迅速而顺畅。哈斯对无代码工具的激动之处在于“将普通个人变成程序员或软件开发人员的可能性。”事实上，惊人的40%的Bubble用户没有编码背景。尽管哈斯承认“有编程经验确实有助于平滑学习曲线并缩短学习时间”，即使没有经验的用户也可以在几周内达到完全的Bubble熟练，并创建复杂的应用程序。
- en: 'No code represents a step forward in the evolution of programming: we have
    moved from low-level programming languages (such as Assembly, where you have to
    understand a specific machine language to give instructions), to abstract, high-level
    languages, like Python and Java (with syntax similar to that of English). Low-level
    languages offer granularity and flexibility, but moving to high-level programming
    makes it possible to develop software applications at scale in months, instead
    of years. Proponents of no-code take this forward, arguing that no-code innovations
    could reduce that period even more, from months to days. “Today even many engineers
    are using Bubble to build applications because it''s faster and more direct,”
    Haas says, and he hopes to see this trend continue.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 没有代码代表了编程演进的一大步：我们已经从低级编程语言（如汇编语言，您必须理解特定的机器语言来给出指令）发展到抽象的高级语言，如Python和Java（其语法类似于英语）。低级语言提供了粒度和灵活性，但转向高级编程使得可以在几个月内大规模开发软件应用程序，而不是几年。无代码的支持者将这一点进一步，认为无代码创新可以将这段时间缩短更多，从几个月缩短到几天。“今天，甚至许多工程师正在使用Bubble来构建应用，因为它更快速、更直接，”哈斯说，他希望看到这一趋势持续下去。
- en: 'The people working to democratize AI—many of whom, we emphasize, come from
    non-technical backgrounds— are full of groundbreaking ideas: for example, creating
    a universal language for human interactions with AI. Such a language would make
    it far easier for people without technical training to interact and build tools
    with AI. We can already see this powerful trend coming to life with the OpenAI
    API Playground interface, which uses natural language and does not require coding
    skills. We believe that combining this idea with no-code applications could create
    a revolutionary outcome.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: 'Haas agrees: “We view our job as defining the vocabulary that can allow you
    to talk to the computer." Bubble’s initial focus is developing a language that
    allows humans to communicate with computers about requirements, design, and other
    elements of programs. The second step will be to teach the computer how to use
    that language to interact with humans. Haas says, “Currently, you have to draw
    and assemble the workflow manually in Bubble in order to build something, but
    it would be amazing to accelerate it by typing the English description and it
    popping into existence for you.”'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: In its current state, Bubble is a visual programming interface capable of building
    fully functional software applications. Integrating it with Codex (which you learned
    about in chapter 5) will, Haas predicts, result in an interactive no-code ecosystem
    that can understand the context and build an application from a simple English
    description. “I think that’s where no-code is eventually moving,” Haas says, “but
    the short-term challenge is the availability of training data. We have seen Codex
    work with Javascript applications since there are massive public repositories
    of code that are supplemented with comments, notes, and everything else required
    for training an LLM.”
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Codex seems to already have created quite a stir in the AI community. New projects
    as of this writing include AI2SQL, a startup that helps to generate SQL queries
    from plain English, automating an otherwise time-consuming process, and Writepy,
    which uses Codex to power a platform for learning Python and analyzing data using
    English.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Using no-code, you can develop applications through visual programming and drag-and-drop
    in an interface that smoothes the learning curve and reduces the need for any
    prerequisites. LLMs are capable of understanding context much as humans do, and
    can thus generate code with just a nudge from humans. We’re just now seeing the
    “initial potential” of combining them, says Haas.  “I'm pretty sure if you interview
    me in five years, we will be using them internally. The integration between the
    two will make no-code more expressive and easier to learn. It will become a bit
    smarter and have a sense of empathy for what users are trying to accomplish.”
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: You learned in Chapter 5 about GitHub Copilot. This code generation has the
    advantage of huge training datasets consisting of billions of lines of code in
    conventional programming languages like Python and Javascript. Similarly, as no-code
    development picks up speed and  more and more applications are created, their
    code will become part of the training data for a large language model. The logical
    connections between the visual components of no-code application logic and the
    generated code will serve as a vocabulary for the model training process. This
    vocabulary can then be fed to an LLM to generate a fully functional application
    with high-level textual descriptions. “It’s basically a matter of time until it
    becomes technically feasible,” says Haas.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Access and Model-as-a-Service
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: As we’ve described throughout this book, getting access to AI is becoming much
    easier across the board. Model-as-a-service is a burgeoning field where powerful
    AI models like GPT-3 are provided as a hosted service. Anyone can use that service
    via a simple API without worrying about collecting training data, training the
    model, hosting the application, and so forth.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'YouTube star Kilcher told us, “I think the level of knowledge required to interact
    with either these models or AI in general will decrease rapidly.” Early versions
    of tools like TensorFlow had little documentation and were  “super cumbersome,”
    he explains, so  “just the level of comfort we have right now in coding is amazing.”
    He cites tools like the Hugging Face Hub and Gradio alongside the OpenAI API,
    noting that such tools offer a “separation of concerns: ‘I am not good at running
    the model. I''m just going to let someone else do that.’” There are potential
    disadvantages to model-as-a-service, however: Kilcher notes the possibility that
    APIs and similar tools can create a “chokepoint.”'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Kilcher’s colleague Awan says he’s excited about the “freeing effect” of model-as-a-service
    for creators. He notes that many people struggle with writing, “whether it's because
    of focus or attention span or something else. But they're brilliant thinkers and
    will benefit from the support in communicating their thoughts” with the help of
    “an AI tool that can help you put words on a page.”
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Awan looks forward to the future iterations of the model, especially in “mediums
    like music, video, graphic designers, and product designers,” whom he predicts 
    will “benefit symbiotically from it and push all their mediums forward in ways
    we simply cannot conceptualize.”
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: GPT-3 marks an important milestone in the history of AI. It is also a part of
    a bigger LLM trend that will continue to grow forward in the future. The revolutionary
    step of providing API access has created a new model-as-a-service business model.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 2 introduced you to the OpenAI Playground and showed you how to begin
    using it with several standard NLP tasks. You also learned about different variants
    of GPT-3 and how to  balance the quality of output with pricing.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 第 2 章介绍了 OpenAI Playground，并向您展示了如何开始使用它来完成几项标准的 NLP 任务。您还了解了不同变体的 GPT-3 以及如何在输出质量与定价之间取得平衡。
- en: Chapter 3 tied together these concepts with a template for using GPT-3 with
    popular  programming languages in your software applications. You also learned
    how to use a low-code GPT-3 sandbox to plug-and-play prompts for your use case.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第 3 章通过一个使用 GPT-3 与流行编程语言在软件应用中的模板将这些概念联系在一起。您还学会了如何使用一个低代码 GPT-3 沙盒为您的用例即插即用地提供提示。
- en: 'The second half of the book presents a variety of use cases, from startups
    to enterprises. We also looked at the challenges and limitations of this technology:
    without great care, AI tools can amplify bias, invade privacy, and fuel the rise
    of low-quality digital content and misinformation.  They can also affect the environment.
    Fortunately, the OpenAI team and other researchers are working hard to create
    and deploy solutions to these problems.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的下半部分介绍了各种用例，从初创公司到企业。我们还探讨了这项技术的挑战和局限性：如果不小心使用，人工智能工具可能会放大偏见，侵犯隐私，并助长低质量的数字内容和错误信息的传播。它们也可能影响环境。幸运的是，OpenAI
    团队和其他研究人员正在努力创建和部署解决这些问题的解决方案。
- en: The democratization of AI and the rise of no-code are encouraging signs that
    GPT-3 has the potential to empower ordinary people and make the world better.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: AI 的民主化和无代码的兴起是 GPT-3 有潜力赋予普通人权力并使世界变得更美好的令人鼓舞的迹象。
- en: All's well that ends well, dear reader. We hope you had as much fun learning
    about GPT-3 as we did sharing it with you. And we hope you will find it useful
    in your own journey to build impactful and innovative NLP products using GPT-3\.
    We wish you the best of luck and great success!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都以尊敬的读者满意结束。我们希望您与我们分享 GPT-3 的乐趣一样多。我们也希望您会在使用 GPT-3 构建具有影响力和创新性的 NLP 产品的旅程中发现它的用处。我们祝您好运，大获成功！
- en: '* * *'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[[1]](xhtml-0-6.xhtml#aid_27) Andrej Karpathy et al., Generative Models blog
    post, source: [https://openai.com/blog/generative-models/](https://openai.com/blog/generative-models/).[[2]](xhtml-0-6.xhtml#aid_64)
    Malcolm Gladwell, Outliers: The Story of Success (Little, Brown, 2008).[[3]](xhtml-0-6.xhtml#aid_53)
    Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakon Uszkoreit, Llion Jones, Aidan
    Gomez, Lukasz Kaiser, and Illia Polosukhin, “[Attention Is All You Need,](https://arxiv.org/abs/1706.03762)”
    Advances in Neural Information Processing Systems 30 (2017).[[4]](xhtml-0-6.xhtml#aid_88)
    Jay Alammar, The Illustrated Transformer blog post, source: [https://jalammar.github.io/illustrated-transformer/](https://jalammar.github.io/illustrated-transformer/).[[5]](xhtml-0-6.xhtml#aid_76)
    Jay Alammar, The Illustrated Transformer blog post, source: [https://jalammar.github.io/illustrated-transformer/](https://jalammar.github.io/illustrated-transformer/).[[6]](xhtml-0-7.xhtml#aid_19)
    Andrew Mayne, How to get better Q&A answers from GPT-3, source: [https://andrewmayneblog.wordpress.com/2022/01/22/how-to-get-better-qa-answers-from-gpt-3/](https://andrewmayneblog.wordpress.com/2022/01/22/how-to-get-better-qa-answers-from-gpt-3/).[[7]](xhtml-0-7.xhtml#aid_65)
    Blog post Azure OpenAI Model, source: [https://learn.microsoft.com/en-us/azure/cognitive-services/openai/concepts/models](https://learn.microsoft.com/en-us/azure/cognitive-services/openai/concepts/models).[[8]](xhtml-0-7.xhtml#aid_71)
    For more than 200 documents, OpenAI offers a [beta API](https://beta.openai.com/docs/api-reference/files).[[9]](xhtml-0-7.xhtml#aid_49)
    Blog post Customizing GPT-3 for Your Application, source: https://openai.com/blog/customized-gpt-3/[[10]](xhtml-0-7.xhtml#aid_81)
    A longstanding Internet abbreviation for “too long; didn’t read.”[[11]](xhtml-0-9.xhtml#aid_42)
    For a brief explanation, see [this blog post by OpenAI](https://openai.com/blog/openai-codex/);
    for a deeper dive, see the development team’s [research paper](https://arxiv.org/abs/2107.03374).[[12]](xhtml-0-9.xhtml#aid_35)
    You can watch Dracula [on Vimeo](https://vimeo.com/507808135);  a Fable Studios
    [blog post](https://fable-studio.com/behind-the-scenes/ai-collaboration) also
    offers a a behind-the-scenes overview.[[13]](xhtml-0-10.xhtml#aid_78) Shubham
    Saboo, blog post GPT-3 for Corporates — Is Data Privacy an Issue?, source: [https://pub.towardsai.net/gpt-3-for-corporates-is-data-privacy-an-issue-92508aa30a00](https://pub.towardsai.net/gpt-3-for-corporates-is-data-privacy-an-issue-92508aa30a00).[[14]](xhtml-0-10.xhtml#aid_47)
    Nat Friedman, blog post Introducing GitHub Copilot: your AI pair programmer, source:
    [https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/](https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/).[[15]](xhtml-0-10.xhtml#aid_24)
    Harri Edwards, source: [https://github.com/features/copilot/](https://github.com/features/copilot/?ref=heydesigner). [[16]](xhtml-0-10.xhtml#aid_63)
    The European Union’s [General Data Protection Regulation](https://gdpr.eu/tag/gdpr/)
    requirements, prohibit companies from hiding behind illegible terms and conditions
    that are difficult to understand. It requires companies to clearly define their
    data privacy policies and make them easily accessible.[[17]](xhtml-0-11.xhtml#aid_56)
    Emily M. Bender, Angelina McMillan-Major, Timnit Gebru, and Shmargaret Shmitchell,
    “On the Dangers of Stochastic Parrots: Can Language Models Be Too Big?” In Conference
    on Fairness, Accountability, and Transparency (FAccT ’21), March 3–10, 2021, virtual
    event, Canada. [https://doi.org/10.1145/3442188.3445922](https://doi.org/10.1145/3442188.3445922).
    The fallout from this paper [forced one of its coauthors, acclaimed AI ethics
    researcher Timnit Gebru, to leave Google](https://www.technologyreview.com/2020/12/04/1013294/google-ai-ethics-research-paper-forced-out-timnit-gebru/).[[18]](xhtml-0-11.xhtml#aid_57)
    Samuel Gehman, Suchin Gururangan, Maarten Sap, Yejin Choi, and Noah A. Smith,
    “RealToxicityPrompts: Evaluating Neural Toxic Degeneration in Language Models,”
    ACL Anthology, Findings of the Association for Computational Linguistics: EMNLP
    2020, https://aclanthology.org/2020.findings-emnlp.301.[[19]](xhtml-0-11.xhtml#aid_67)
    Abubakar Abid, Maheen Farooqi, and James Zou, “Persistent Anti-Muslim Bias in
    Large Language Models,” Computation and Language, January 2021, https://arxiv.org/pdf/2101.05783.pdf.[[20]](xhtml-0-11.xhtml#aid_20)
    ​​Perspective API is an open-source API that uses machine learning to identify
    "toxic" comments, making it easier to host better conversations online. It emerged
    from a collaborative research effort by two teams within Google: the Counter Abuse
    Technology team and Jigsaw, a team that explores threats to open societies.[[21]](xhtml-0-11.xhtml#aid_44)Chengcheng
    Shao, Giovanni Luca Ciampaglia, Onur Varol, Kai-Cheng Yang, Alessandro Flammini,
    and Filippo Menczer, “The spread of low-credibility content by social bots,” Nature
    Human Behaviour, 2018, https://www.nature.com/articles/s41562-017-0132.[[22]](xhtml-0-11.xhtml#aid_21)
    Onur Varol, Emilio Ferrara, Clayton A. Davis, Filippo Menczer, and Alessandro
    Flammini, “Font Size:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'Online Human-Bot Interactions: Detection, Estimation, and Characterization,”
    Eleventh International AAAI Conference on Web and Social Media, 2017, https://aaai.org/ocs/index.php/ICWSM/ICWSM17/paper/view/15587\.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[[23]](xhtml-0-11.xhtml#aid_80) Ben Buchanan, Micah Musser, Andrew Loh, and
    Katerina Sedova, “Truth, Lies, and Automation: How Language Models Could Change
    Disinformation,” Center for Security and Emerging Technology, 2021, [https://cset.georgetown.edu/wp-content/uploads/CSET-Truth-Lies-and-Automation.pdf](https://cset.georgetown.edu/wp-content/uploads/CSET-Truth-Lies-and-Automation.pdf),
    Table 1.[[24]](xhtml-0-11.xhtml#aid_66) Buchanan et al., “Truth, Lies, and Automation,”
    p. 6.[[25]](xhtml-0-11.xhtml#aid_25) Buchanan et al., “Truth, Lies, and Automation,”
    p. 21.[[26]](xhtml-0-11.xhtml#aid_46) Buchanan et al., “Truth, Lies, and Automation,”
    p. 44.[[27]](xhtml-0-11.xhtml#aid_89) Buchanan et al., “Truth, Lies, and Automation,”
    p. 34.[[28]](xhtml-0-11.xhtml#aid_28) Source: Patterson, David, Joseph Gonzalez,
    Quoc Le, Chen Liang, Lluis-Miquel Munguia, Daniel Rothchild, David So, Maud Texier,
    and Jeff Dean. "Carbon emissions and large neural network training." arXiv preprint
    arXiv:2104.10350 (2021).[[29]](xhtml-0-12.xhtml#aid_60) Source: [https://webflow.com/no-code](https://webflow.com/no-code).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
