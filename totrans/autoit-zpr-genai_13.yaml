- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Advanced Built-In Apps by Zapier
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zapier的高级内置应用
- en: The power of Zapier lies in using the extensive functionality made available
    in the built-in apps, all without using code. You can accomplish a vast array
    of automations using these apps. However, you will find that there will be times
    when you may want to achieve something with your Zaps that won’t be possible using
    the standard, no-code, built-in app functionality or using an existing integration
    in Zapier. When this happens, it is time to use webhooks, code, and API requests
    in your Zaps, thus opening up even more possibilities to automate your manual
    and repetitive tasks with Zapier. You can use Webhooks by Zapier, Code by Zapier,
    and **API Request** action steps, respectively, to accomplish this.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Zapier的强大之处在于利用内置应用提供的广泛功能，而无需编码。使用这些应用程序，您可以完成各种各样的自动化。然而，您会发现，在使用标准的无代码内置应用功能或使用Zapier中的现有集成时，可能会遇到想要使用Zap实现的某些功能是不可能的。当发生这种情况时，就是使用webhooks、代码和API请求的时候了，从而为您提供更多的可能性来自动化您的手动和重复性任务。您可以分别使用Webhooks
    by Zapier、Code by Zapier和**API请求**操作步骤来实现这一点。
- en: It is also useful to know about one of the other built-in apps that will help
    when you want to store and retrieve small datasets. You can use Storage by Zapier
    to store reference data every time a Zap runs and then share it with other Zaps
    by retrieving it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个有用的内置应用可用于存储和检索小型数据集时。您可以使用Storage by Zapier在每次运行Zap时存储参考数据，然后通过检索它与其他Zap共享。
- en: In this chapter, you will be provided with an overview of the more advanced
    built-in apps in Zapier, which allow you to use webhooks and polling triggers,
    make HTTP requests with Webhooks by Zapier, make API calls in action steps using
    your authenticated connection, use **App Extensions** in multiple Zaps, use JavaScript
    or Python code (Code by Zapier) in your Zaps, and store and retrieve data (Storage
    by Zapier). We will also briefly cover how to use ChatGPT to generate code for
    your Code by Zapier steps. These apps and built-in functions are categorized by
    Zapier as **Developer Tools**, and as these are advanced topics, we will only
    provide a brief overview of their functionality, without going into too much detail.
    We will, however, provide you with some use cases and further references.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将为您提供有关Zapier中更高级的内置应用的概述。这些应用允许您使用webhooks和轮询触发器，使用Webhooks by Zapier发出HTTP请求，在操作步骤中使用经过身份验证的连接进行API调用，使用多个Zap中的**App扩展**，在您的Zap中使用JavaScript或Python代码（Code
    by Zapier），以及存储和检索数据（Storage by Zapier）。我们还将简要介绍如何使用ChatGPT为您的Code by Zapier步骤生成代码。这些应用和内置功能被Zapier归类为**开发者工具**，由于这些是高级主题，我们只会对它们的功能提供一个简要的概述，而不会过多地详细讨论。但是，我们会为您提供一些用例和进一步的参考资料。
- en: This chapter will be most useful for Zapier users with a higher level of technical
    skill. A good understanding of concepts around the use of APIs, including reading
    API documentation and using programming languages such as Python and JavaScript,
    would be beneficial. The content that we will cover will, however, give non-technical
    users an introduction to what is possible with these built-in apps.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有较高技术技能的Zapier用户，本章将非常有用。了解API使用相关概念，包括阅读API文档和使用Python和JavaScript等编程语言，将会对你有益。然而，我们将涵盖的内容将为非技术用户提供这些内置应用的功能介绍。
- en: 'We will cover the following key topics in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中将涵盖以下主要内容：
- en: Resources for understanding API documentation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解API文档的资源
- en: Webhooks by Zapier – using webhooks and HTTP requests in your Zaps
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Webhooks by Zapier - 在您的Zap中使用webhooks和HTTP请求
- en: Using API Request action steps (feature in beta)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用API请求操作步骤（测试功能）
- en: Using App Extensions in multiple Zaps (feature in beta)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多个Zap中使用App扩展（测试功能）
- en: Code by Zapier – using JavaScript or Python code in your Zaps
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Code by Zapier - 在您的Zap中使用JavaScript或Python代码
- en: Storage by Zapier – saving and storing data
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Storage by Zapier - 保存和存储数据
- en: Once you have reviewed each of these topics, you will understand how to use
    webhooks, code, and API requests in your Zaps, as well as how to save and store
    data.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在您查看了这些主题之后，您将了解如何在您的Zap中使用webhooks、代码和API请求，以及如何保存和存储数据。
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To get the most out of the content in this chapter, you will need access to
    a Zapier account. The Zapier Free plan will be adequate. You will need the Zapier
    Starter plan to create multi-step workflows and use the Webhooks by Zapier built-in
    app.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用本章内容，你将需要访问Zapier账户。Zapier免费计划将足够使用。你将需要Zapier启动计划来创建多步工作流程，并使用Zapier内置应用程序中的Webhooks。
- en: Resources for understanding API documentation
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解API文档的资源
- en: 'In [*Chapter 1*](B18474_01.xhtml#_idTextAnchor014), *Introduction to Business
    Process Automation with Zapier*, we introduced how integrations work to request
    data from one application, producing a response in another. The information requests
    are usually in the form of creating new resources, retrieving existing ones, editing/updating
    existing resources, or deleting existing resources. In **Hypertext Transfer Protocol**
    (**HTTP** – the foundation for how data is passed along on the internet) terms,
    these requests are denoted as the following methods:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第一章*](B18474_01.xhtml#_idTextAnchor014)，*使用Zapier进行业务流程自动化的介绍*中，我们介绍了集成是如何从一个应用程序请求数据，在另一个应用程序中产生响应的。信息请求通常以创建新资源、检索现有资源、编辑/更新现有资源或删除现有资源的形式进行。在**超文本传输协议**（**HTTP**
    - 互联网数据传输的基础）术语中，这些请求被表示为以下方法：
- en: '**POST**: Used to create a new resource'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**POST**：用于创建新资源'
- en: '**GET**: Used to retrieve an existing resource'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GET**：用于检索现有资源'
- en: '**PUT**: Used to edit or update an existing resource'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PUT**：用于编辑或更新现有资源'
- en: '**DELETE**: Used to delete an existing resource'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DELETE**：用于删除现有资源'
- en: As you already know, the API integrations that have been created between Zapier
    and other apps have specific trigger, action, and search events that you can use
    in your Zaps.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所知，已经在Zapier和其他应用程序之间创建的API集成具有特定的触发器、操作和搜索事件，你可以在你的Zaps中使用。
- en: 'Although, in most cases, the integrations built with Zapier cover the most
    commonly requested events users may need, often, the app’s API allows for many
    more events, therefore increasing flexibility. If an application has an open API,
    in most cases, there will be **API documentation** available on the SaaS provider’s
    website that will provide information about how to use the API. Knowing how to
    read and understand API documentation is an important prerequisite for knowing
    how to create custom triggers and actions using the API outside of Zapier’s standard
    integration with each app. This is a lengthy topic and is outside the scope of
    this book. However, here are some useful resources that will help you get to grips
    with reading API documentation:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在大多数情况下，使用Zapier构建的集成覆盖了用户可能需要的最常见请求事件，但通常，应用程序的API允许进行更多事件，因此增加了灵活性。如果一个应用程序拥有开放的API，在大多数情况下将会在SaaS提供商的网站上提供有关如何使用API的**API文档**的信息。了解如何阅读和理解API文档是了解如何在Zapier与每个应用的标准集成之外使用API创建自定义触发器和操作的重要先决条件。这是一个庞大的主题，超出了本书的范围。但是，以下是一些有用的资源，将帮助你掌握阅读API文档的方法：
- en: '*Understanding APIs and RESTful APIs Crash Course [**Video]* ([https://www.packtpub.com/product/understanding-apis-and-restful-apis-crash-course-video/9781800564121](https://www.packtpub.com/product/understanding-apis-and-restful-apis-crash-course-video/9781800564121))'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*理解API和RESTful API入门课程 [**视频]** ([https://www.packtpub.com/product/understanding-apis-and-restful-apis-crash-course-video/9781800564121](https://www.packtpub.com/product/understanding-apis-and-restful-apis-crash-course-video/9781800564121))'
- en: '*What Is API* *Documentation?* ([https://blog.hubspot.com/website/api-documentation](https://blog.hubspot.com/website/api-documentation))'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*API文档是什么*？([https://blog.hubspot.com/website/api-documentation](https://blog.hubspot.com/website/api-documentation))'
- en: 'If you would like to dive deeper into how to understand APIs as a whole, this
    Zapier resource will help: [https://zapier.com/resources/guides/apis](https://zapier.com/resources/guides/apis).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想更深入地了解如何全面理解API，这个Zapier资源将有所帮助：[https://zapier.com/resources/guides/apis](https://zapier.com/resources/guides/apis)。
- en: Once you have reviewed the app’s API documentation to assess what other events
    are possible, you can then use webhooks (if they are available for use) to trigger
    your Zaps using the Webhooks by Zapier built-in app, make HTTP requests in action
    steps and polling triggers, once again using Webhooks by Zapier, use API Request
    action steps in certain app integrations with Zapier (a feature still in beta),
    and use Code by Zapier to take advantage of these options. The app’s API documentation
    will also normally give clear instructions on how to authenticate or authorize
    requests and how to configure them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你查阅了应用的 API 文档，评估了可能的其他事件，那么你就可以使用 webhooks（如果可用）来触发你的 Zaps，使用内置应用程序 Webhooks
    by Zapier，进行动作步骤和轮询触发的 HTTP 请求，再次使用 Webhooks by Zapier，利用 Zapier 中某些应用程序集成的 API
    请求动作步骤（这仍然是测试版功能），并使用 Code by Zapier 来利用这些选项。应用的 API 文档通常也会清楚地说明如何进行身份验证或授权请求以及如何配置它们。
- en: Important
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If you create custom HTTP requests within your Zaps, bear in mind that if an
    app changes its API, this may cause disruption or errors in your Zaps, stopping
    them from working adequately. You will need to make adjustments to your custom
    steps accordingly.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在你的 Zaps 中创建了自定义的 HTTP 请求，请记住，如果应用程序更改其 API，这可能会导致你的 Zaps 发生中断或错误，导致它们无法正常工作。你需要相应地调整你的自定义步骤。
- en: Next, we’ll provide an overview of how to use the Webhooks by Zapier built-in
    app.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将概述如何使用 Webhooks by Zapier 内置应用程序。
- en: Webhooks by Zapier – using webhooks and HTTP requests in your Zaps
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[Zapier 的 Webhooks](https://wiki.example.org/webhooks_by_zapier) - 在你的 Zaps
    中使用 webhooks 和 HTTP 请求'
- en: First of all, it is important to mention that perhaps the choice of name for
    this built-in app does not correctly describe its function, and could imply that
    it only works with webhooks. The **Webhooks by Zapier** built-in app allows you
    to use webhooks as instant triggers, create polling triggers, and also make HTTP
    requests to an API. Therefore, it is better to separate these uses by event type.
    Let’s look at each.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，重要的是要提到，或许这个内置应用的名字的选择并不正确地描述了它的功能，并且可能会暗示它只与 webhooks 一起使用。**Webhooks by
    Zapier** 内置应用允许你使用 webhooks 作为即时触发器，创建轮询触发器，并向 API 发送 HTTP 请求。因此，最好根据事件类型将这些用途进行分开。让我们来看看每一个。
- en: Webhooks by Zapier trigger events
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Webhooks by Zapier 触发事件
- en: As we covered in [*Chapter 1*](B18474_01.xhtml#_idTextAnchor014), *Introduction
    to Business Process Automation with Zapier*, event changes in apps are identified
    by either using a polling method or by using webhooks, which then cause the trigger
    step in your Zaps to run. The polling method involves repeatedly checking for
    new information at scheduled intervals. However, with webhooks, you provide the
    app with a URL that your originating app constantly monitors for new events, thus
    receiving information in real time. Webhooks are an instant, and therefore a much
    more efficient, way of communicating event information. This means that Zaps using
    webhooks trigger much quicker than other Zaps where the trigger step uses the
    polling method.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第1章*](B18474_01.xhtml#_idTextAnchor014)中所讨论的那样，*使用 Zapier 进行业务流程自动化的简介*，应用程序中的事件变化可以通过轮询方法或使用
    webhooks 来识别，然后导致你的 Zaps 中的触发步骤运行。轮询方法涉及定期检查计划间隔内的新信息。然而，使用 webhooks，则是提供一个 URL，你的起始应用程序会不断监视以获取新事件，因此可以实时接收信息。Webhooks
    是一种即时、因此更高效的通信事件信息的方式。这意味着使用 webhooks 触发的 Zaps 比触发步骤使用轮询方法的其他 Zaps 要快得多。
- en: 'The Webhooks by Zapier built-in app can be used with the following webhook
    and polling trigger events:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Webhooks by Zapier 内置应用可以用于以下 webhook 和轮询触发事件：
- en: '**Retrieve Poll** (trigger): This trigger event polls a URL and searches for
    new entries. This polling trigger will search for new entries periodically based
    on the update time specified by your Zapier subscription plan.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检索轮询**（触发器）：此触发事件会轮询一个 URL 并搜索新条目。此轮询触发器将根据你的 Zapier 订阅计划指定的更新时间周期性地搜索新条目。'
- en: '`POST`, `GET`, or `PUT` notification to a URL provided by Zapier.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`POST`、`GET` 或 `PUT` 通知到由 Zapier 提供的 URL。'
- en: '`POST`, `GET`, or `PUT` notification to a URL provided by Zapier. This is a
    more detailed version of the **Catch Hook** trigger event and supplies the request
    body as unparsed data. It also includes headers.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`POST`、`GET` 或 `PUT` 通知到由 Zapier 提供的 URL。这是**捕获钩子**触发事件的更详细版本，并以未解析的数据形式提供请求体。它还包括标题。'
- en: Both the **Catch Hook** and **Catch Raw Hook** trigger events require you to
    set up webhooks in the app you are hoping to get event notifications from. These
    webhooks will need to point to the URL provided by Zapier for either of those
    trigger events. The app’s API documentation will normally give clear instructions
    on how to configure, authenticate, or authorize new webhook connections. For example,
    Trello’s API documentation, which covers webhooks, can be found at [https://developer.atlassian.com/cloud/trello/guides/rest-api/webhooks/](https://developer.atlassian.com/cloud/trello/guides/rest-api/webhooks/).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Catch Hook** 和 **Catch Raw Hook** 触发事件都需要您在希望接收事件通知的应用程序中设置webhook。这些webhook将需要指向Zapier为这些触发事件提供的URL。应用程序的API文档通常会清楚地说明如何配置、验证或授权新的webhook连接。例如，Trello的API文档，包括webhooks，可以在[https://developer.atlassian.com/cloud/trello/guides/rest-api/webhooks/](https://developer.atlassian.com/cloud/trello/guides/rest-api/webhooks/)找到。'
- en: If the app you are using does not have webhooks available in the API, then you
    will need to use the **Retrieve Poll** trigger event using an endpoint specified
    in the app’s API documentation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的应用程序在API中没有可用的webhook，那么您需要使用**Retrieve Poll**触发事件，使用应用程序API文档中指定的端点。
- en: Webhooks by Zapier action events
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Zapier的Webhooks动作事件
- en: Now, let’s have a look at how to use Webhooks by Zapier to make HTTP requests.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用Zapier的Webhooks来发出HTTP请求。
- en: 'The Webhooks by Zapier built-in app can be used with the following HTTP request
    action events:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Zapier内置应用程序可与以下HTTP请求动作事件一起使用：
- en: '**Custom Request** (action): This action event sends off a custom request by
    providing raw data'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Custom Request**（操作）：此动作事件通过提供原始数据发送自定义请求'
- en: '**POST** (action): This action event sends a single request to create a new
    resource'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**POST**（操作）：此动作事件发送单个请求以创建新资源'
- en: '**GET** (action): This action event sends a single request to retrieve an existing
    resource'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GET**（动作）：此动作事件发送单个请求以检索现有资源'
- en: '**PUT** (action): This action event sends a single request to update an existing
    resource'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PUT**（操作）：此操作事件发送单个请求以更新现有资源'
- en: Using Webhooks by Zapier is especially useful if your app or business tool does
    not support Zapier integration. Webhooks by Zapier allows developers who are familiar
    with your tools to create requests between different tools without the need to
    understand the new API documentation. For example, when a new user signs up to
    create a free trial account, you could create a `POST` request to create a new
    contact in your CRM and accounting system. If the integration with Zapier does
    not support a specific trigger, action, or search event that you need, it is always
    worth reviewing the API documentation to assess whether it is possible by using
    the Webhooks by Zapier built-in app.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的应用程序或业务工具不支持Zapier集成，使用Zapier的Webhooks特别有用。Zapier的Webhooks允许熟悉您工具的开发人员在不需要理解新API文档的情况下在不同工具之间创建请求。例如，当新用户注册以创建免费试用帐户时，您可以创建一个`POST`请求在CRM和会计系统中创建新联系人。如果与Zapier集成不支持您需要的特定触发器、动作或搜索事件，通过使用Zapier内置应用程序进行评估API文档是否可能实现总是值得的。
- en: Tip
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You can use the Webhooks by Zapier built-in app to combine one or more Zaps.
    For example, a limitation of the Looping by Zapier built-in app is that you can
    only have one loop in a Zap. If you have several paths in a Zap and each path
    requires a loop, you can use the Webhooks by Zapier **POST** action event at the
    end of each path to push data to different looping Zaps. This would give each
    a **Catch Hook** trigger event with a custom URL that you would specify in the
    **POST** action events.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Zapier内置应用程序中的Webhooks来合并一个或多个Zaps。例如，Zapier内置应用程序的Looping的一个限制是在Zap中只能有一个循环。如果在Zap中有几条路径，每条路径都需要一个循环，您可以在每条路径的末尾使用Zapier的Webhooks中的**POST**动作事件将数据推送到不同的循环Zaps。这将为每个**POST**动作事件指定一个**Catch
    Hook**触发事件与自定义URL。
- en: Zapier has created a few very useful help documents to help you get started
    with webhooks. You can find out more about webhooks in general at [https://zapier.com/help/doc/how-get-started-webhooks-zapier](https://zapier.com/help/doc/how-get-started-webhooks-zapier),
    and how to use webhooks in Zapier at [https://zapier.com/blog/what-are-webhooks/](https://zapier.com/blog/what-are-webhooks/).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Zapier已经创建了一些非常有用的帮助文档，以帮助您开始使用webhooks。您可以在[https://zapier.com/help/doc/how-get-started-webhooks-zapier](https://zapier.com/help/doc/how-get-started-webhooks-zapier)了解有关webhooks的更多信息，以及如何在Zapier中使用webhooks在[https://zapier.com/blog/what-are-webhooks/](https://zapier.com/blog/what-are-webhooks/)
- en: Important note
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Webhooks by Zapier is a premium app and can only be used with the Zapier Starter
    plan or higher.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Webhooks by Zapier 是一款高级应用程序，只能与 Zapier Starter 计划或更高版本一起使用。
- en: Let’s explore a few examples of when you can use Webhooks by Zapier to achieve
    more in your automations and not be limited by existing Zapier triggers and actions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再具体探讨一些使用 Webhooks by Zapier 实现自动化的例子，不受现有的 Zapier 触发器和操作的限制。
- en: An example of using the Catch Hook trigger event of Webhooks by Zapier
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Webhooks by Zapier 的 Catch Hook 触发器事件的示例
- en: You may want to kick off a workflow in Zapier when only the contact’s first
    name changes in an ActiveCampaign record. Although an **Updated Contact** trigger
    event exists in the ActiveCampaign integration with Zapier, it would be challenging
    to identify what the name changed from to filter out only a change in the first
    name. A good workaround for this is to create an automation in ActiveCampaign
    that contains a trigger with the right conditions, which then sends information
    to a webhook URL in Zapier. By using the **Catch Hook** trigger event in Zapier,
    you can generate a unique webhook URL that you can then copy and paste into the
    relevant automation step in ActiveCampaign.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当 ActiveCampaign 记录中联系人的名字仅更改时，你可能希望在 Zapier 中启动一个工作流程。尽管 ActiveCampaign 与 Zapier
    集成中存在一个 **更新联系人** 触发器事件，但很难确定名字改变了什么来过滤仅更改了名字的情况。这是一个很好的解决方法：在 ActiveCampaign
    中创建一个包含正确条件的触发器的自动化，然后在 Zapier 中的 webhook URL 中发送信息。通过使用 Zapier 中的 **Catch Hook**
    触发器事件，你可以生成一个唯一的 webhook URL，然后将其复制并粘贴到 ActiveCampaign 中相应的自动化步骤中。
- en: 'The following screenshot shows an example of what this would look like in the
    Webhooks by Zapier **Catch Hook** trigger event:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在 Webhooks by Zapier 的 **Catch Hook** 触发器事件中会出现什么样的示例：
- en: "![Figure 11.1 – \uFEFFOverview of using the Catch Hook trigger event in Webhooks\
    \ by Zapier](img/B18474_11_01.jpg)"
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: 图 11.1 – Webhooks by Zapier 中使用 Catch Hook 触发器事件的概述
- en: Figure 11.1 – Overview of using the Catch Hook trigger event in Webhooks by
    Zapier
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – Webhooks by Zapier 中使用 Catch Hook 触发器事件的概述
- en: 'The following screenshot shows the ActiveCampaign automation with the Zapier
    webhook URL:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了带有 Zapier webhook URL 的 ActiveCampaign 自动化：
- en: '![Figure 11.2 – Using a webhook step in ActiveCampaign to specify the webhook
    URL](img/B18474_11_02.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: 图 11.2 – 在 ActiveCampaign 中使用 webhook 步骤指定 webhook URL
- en: Figure 11.2 – Using a webhook step in ActiveCampaign to specify the webhook
    URL
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2 – 在 ActiveCampaign 中使用 webhook 步骤指定 webhook URL
- en: Let’s take a look at an example that involves an action event.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个涉及操作事件的示例。
- en: An example of using the PUT action event of Webhooks by Zapier
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Webhooks by Zapier 中的 PUT 操作事件的示例
- en: You may want to create a new company in `PUT` requests to update the company
    ([https://developers.freshdesk.com/api/#update_company](https://developers.freshdesk.com/api/#update_company)),
    which means you can use Webhooks by Zapier to do this using the **PUT** action
    event.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能希望在 `PUT` 请求中创建一个新公司以更新公司（[https://developers.freshdesk.com/api/#update_company](https://developers.freshdesk.com/api/#update_company)），这意味着你可以使用
    Webhooks by Zapier 通过 **PUT** 操作事件来完成此操作。
- en: 'The following screenshot shows an example of how you can set up the Webhooks
    by Zapier **PUT** action event:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了如何设置 Webhooks by Zapier 的 **PUT** 操作事件示例：
- en: "![Figure 11.3 – \uFEFFOverview of using the PUT action event in Webhooks by\
    \ Zapier](img/B18474_11_03.jpg)"
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: 图 11.3 – Webhooks by Zapier 中使用 PUT 操作事件的概述
- en: Figure 11.3 – Overview of using the PUT action event in Webhooks by Zapier
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – Webhooks by Zapier 中使用 PUT 操作事件的概述
- en: The **Authorization** field under **Headers** will contain the API key, as specified
    in the API documentation.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**Header** 下的 **Authorization** 字段将包含 API 密钥，如 API 文档中所示。'
- en: Tip
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: For more inspiration and access to pre-built templates, you can review the Webhooks
    by Zapier built-in app profile page at [https://zapier.com/apps/webhook/integrations](https://zapier.com/apps/webhook/integrations).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更多启发和访问预构建模板，请查看 Webhooks by Zapier 内置应用程序简介页面：[https://zapier.com/apps/webhook/integrations](https://zapier.com/apps/webhook/integrations)。
- en: You should now have a better understanding of how and when to use the Webhooks
    by Zapier built-in app.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该更好地了解了何时以及如何使用 Webhooks by Zapier 内置应用程序。
- en: Next, let’s review how to use the **API Request (beta)** action event.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看一下如何使用 **API 请求 (测试版)** 操作事件。
- en: Using the API Request action event (feature in beta)
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 API 请求操作事件（测试版功能）
- en: Using Webhooks by Zapier might seem quite complicated, especially if you have
    to decipher API documentation. A more straightforward approach is to use a new
    feature that is currently in beta throughout the platform. Zapier has begun upgrading
    certain integrations with the `PUT`, `GET`, and `POST` HTTP requests. The introduction
    of this new action event in many app integrations allows API requests to be made
    in a simpler, no-code-focused fashion. Unlike with using Webhooks by Zapier, you
    will have already connected the app to your Zapier account and will not need to
    provide any further authentication details, such as an API key. In many cases,
    you can make simple HTTP requests without having to understand complex API documentation
    jargon. You will just need to know how to find the endpoint URL required and what
    request parameters are essential.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Zapier的Webhooks可能会看起来相当复杂，特别是如果你不得不解读API文档。一个更简单的方法是在整个平台上使用当前处于Beta阶段的新功能。Zapier已经开始升级某些集成，使用`PUT`，`GET`和`POST`
    HTTP请求。在许多应用集成中引入这种新的操作事件允许以更简单、无需编码的方式进行API请求。与使用Zapier的Webhooks不同，你已经将应用程序连接到了你的Zapier帐户，并且不需要提供任何进一步的身份验证细节，比如API密钥。在许多情况下，你可以进行简单的HTTP请求，而无需理解复杂的API文档术语。你只需要知道如何找到所需的终点URL以及哪些请求参数是必不可少的。
- en: When discussing how to use Webhooks by Zapier, we looked at trigger and action
    examples. Now, let’s explore how to use the **API Request (beta)** action event
    to perform a search action that’s not available using Zapier integration.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论如何使用Zapier的Webhooks时，我们看了触发器和操作示例。现在，让我们探索如何使用**API请求（Beta）**操作事件来执行Zapier集成中无法进行的搜索操作。
- en: If you are a `https://api.clickup.com/api/v2/folder/{folder_id}/list`) that
    you need to achieve this. You can use the `GET` request using the API by specifying
    `folder_id` in the URL. `folder_id` is a required parameter for the success of
    the request.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个`https://api.clickup.com/api/v2/folder/{folder_id}/list`)，那么你需要实现这个操作。你可以在URL中指定`folder_id`，通过使用API进行`GET`请求。`folder_id`是请求成功所必要的参数。
- en: 'The following screenshot shows the **API Request (Beta)** action event on the
    ClickUp integration profile page ([https://zapier.com/apps/clickup/integrations](https://zapier.com/apps/clickup/integrations)):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了ClickUp集成配置页面上**API请求（Beta）**操作事件（[https://zapier.com/apps/clickup/integrations](https://zapier.com/apps/clickup/integrations)）：
- en: "![Figure 11.4 – \uFEFFOverview of the API Request action event on the ClickUp\
    \ integration profile page](img/B18474_11_04.jpg)"
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图11.4 – 在ClickUp集成配置页面上API请求操作事件的概述](img/B18474_11_04.jpg)'
- en: Figure 11.4 – Overview of the API Request action event on the ClickUp integration
    profile page
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4 – 在ClickUp集成配置页面上API请求操作事件的概述
- en: 'The following screenshot shows the ClickUp API documentation, with the **Get
    Lists** endpoint showing the required parameters and URL:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了ClickUp API文档，其中显示了**获取列表**终点的必需参数和URL：
- en: '![Figure 11.5 – The ClickUp API documentation showing the Get Lists endpoint](img/B18474_11_05.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图11.5 – 显示了ClickUp API文档中的获取列表终点](img/B18474_11_05.jpg)'
- en: Figure 11.5 – The ClickUp API documentation showing the Get Lists endpoint
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5 – 显示了ClickUp API文档中的获取列表终点
- en: 'The following screenshot shows how the **API Request (Beta)** action event
    can be used to retrieve the details of all the lists in a ClickUp folder:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了如何使用**API请求（Beta）**操作事件来检索ClickUp文件夹中所有列表的详细信息：
- en: "![Figure 11.6 – \uFEFFOverview of the API Request (\uFEFFBeta) action event\
    \ to retrieve all the lists in a ClickUp folder](img/B18474_11_06.jpg)"
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图11.6 – 在ClickUp文件夹中检索所有列表的API请求操作（Beta）的概述](img/B18474_11_06.jpg)'
- en: Figure 11.6 – Overview of the API Request (Beta) action event to retrieve all
    the lists in a ClickUp folder
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6 – 用于在ClickUp文件夹中检索所有列表的**API请求（Beta）**操作事件的概述
- en: 'You can find more detailed instructions on how to set up an API request action
    step using this Zapier resource: [https://help.zapier.com/hc/en-us/articles/12899607716493-Set-up-an-API-request-action-Beta](https://help.zapier.com/hc/en-us/articles/12899607716493-Set-up-an-API-request-action-Beta).'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Zapier资源中找到关于如何设置API请求操作步骤的更详细说明：[https://help.zapier.com/hc/en-us/articles/12899607716493-Set-up-an-API-request-action-Beta](https://help.zapier.com/hc/en-us/articles/12899607716493-Set-up-an-API-request-action-Beta)。
- en: You should now have a better understanding of how and when to use the **API
    Requests (beta)** action step. Next, let’s review how to create and use **App
    Extensions**.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该更好地了解了何时以及如何使用**API请求（Beta）**操作步骤。接下来，让我们回顾一下如何创建和使用**App Extensions**。
- en: Using App Extensions in multiple Zaps (feature in beta)
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在多个Zaps中使用App扩展（Beta功能）
- en: 'If you use the same **API Request (beta)** action steps in several different
    Zaps, you will need to replicate the information from one Zap to another normally.
    However, the **App Extensions** action event takes the capabilities of the **API
    Request (beta)** action event feature a few steps forward and allows you to create
    app extensions in the **App Extensions** builder, allowing you to set up API call
    settings that can be used in multiple Zaps. As with the **API Request (beta)**
    action event, the **App Extensions (beta)** action event allows you to use your
    already authenticated app connection information, so all you have to do is create
    an **App Extension template** that can be used in multiple Zaps, and shared in
    your team if you’re using a Team or Company account. As with the **API Request
    (beta)** action event, the **App Extensions (beta)** action event is currently
    available for use with a limited number of apps. You can find the list of supported
    apps here: [https://help.zapier.com/hc/en-us/articles/16276574838925](https://help.zapier.com/hc/en-us/articles/16276574838925).
    You will also need a basic understanding of how to read API documentation, send
    HTTP requests, and choose which API endpoint to use in the app extension.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在几个不同的Zaps中使用了相同的**API请求（测试版）**操作步骤，则通常需要将一个Zap中的信息复制到另一个Zap中。但是，**应用扩展**操作事件将**API请求（测试版）**操作事件功能的功能向前推进几步，并允许您在**应用扩展**构建器中创建应用扩展，从而允许您设置可以在多个Zaps中使用的API调用设置。与**API请求（测试版）**操作事件一样，**应用扩展（测试版）**操作事件允许您使用已通过认证的应用连接信息，因此您只需创建一个可用于多个Zaps的**应用扩展模板**，并在团队中共享，如果您使用的是团队或公司帐户。与**API请求（测试版）**操作事件一样，**应用扩展（测试版）**操作事件目前仅可用于有限数量的应用。您可以在此处找到支持的应用程序列表：[https://help.zapier.com/hc/en-us/articles/16276574838925](https://help.zapier.com/hc/en-us/articles/16276574838925)。您还需要基本了解如何阅读API文档、发送HTTP请求以及选择在应用扩展中使用哪个API端点。
- en: 'We will use the example discussed in the *Using the API Request action event
    (feature in beta)* section to illustrate the differences between the `GET` request
    using the API by specifying `folder_id` in the URL. `folder_id` is a required
    parameter for the success of the request. The following screenshot shows how the
    `Get lists in a folder in ClickUp` app extension to retrieve the details of all
    the lists in a ClickUp folder:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在“使用 API 请求操作事件（测试版功能）”部分讨论的示例来说明使用 API 请求时GET请求的差异，通过在URL中指定`folder_id`。
    `folder_id`是成功请求的必需参数。以下截图显示了`在ClickUp文件夹中获取列表`应用扩展来检索ClickUp文件夹中所有列表的详细信息：
- en: "![Figure 11.7 – \uFEFFOverview of using the App Extension\uFEFFs action event\
    \ to retrieve all the lists in a ClickUp folder](img/B18474_11_07.jpg)"
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图11.7 – 使用应用扩展操作事件概述，检索 ClickUp 文件夹中的所有列表](img/B18474_11_07.jpg)'
- en: Figure 11.7 – Overview of using the App Extensions action event to retrieve
    all the lists in a ClickUp folder
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.7 – 使用应用扩展操作事件概述，检索 ClickUp 文件夹中的所有列表
- en: 'You can find more detailed instructions on how to set up, edit, and use app
    extensions using these Zapier resources:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 Zapier 资源中找到有关如何设置、编辑和使用应用扩展的更详细说明：
- en: '[https://help.zapier.com/hc/en-us/articles/16277139110157](https://help.zapier.com/hc/en-us/articles/16277139110157)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.zapier.com/hc/en-us/articles/16277139110157](https://help.zapier.com/hc/en-us/articles/16277139110157)'
- en: '[https://help.zapier.com/hc/en-us/articles/16277147937805](https://help.zapier.com/hc/en-us/articles/16277147937805)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.zapier.com/hc/en-us/articles/16277147937805](https://help.zapier.com/hc/en-us/articles/16277147937805)'
- en: '[https://help.zapier.com/hc/en-us/articles/16277375114637](https://help.zapier.com/hc/en-us/articles/16277375114637)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.zapier.com/hc/en-us/articles/16277375114637](https://help.zapier.com/hc/en-us/articles/16277375114637)'
- en: Tip
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 温馨提示
- en: You can use the magic of AI to draft your App Extensions for you. We will cover
    AI-powered App Extensions in more detail in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216),
    *AI* *and Automation*.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 AI 的魔力为您起草应用扩展。我们将在[*第19章*](B18474_19.xhtml#_idTextAnchor2216)中更详细地介绍由
    AI 驱动的应用扩展，*AI* 和自动化。
- en: You should now have a better understanding of how and when to use **App Extensions**.
    Next, let’s review how to use the Code by Zapier built-in app.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该更好地了解如何何时使用**应用扩展**了。接下来，让我们回顾如何使用内置的 Code by Zapier 应用。
- en: "Code by Zapier – using JavaScript or Python code \Lin your Zaps"
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Code by Zapier – 在您的Zaps中使用JavaScript或Python代码
- en: The next step up from using webhooks and API requests in your Zaps is to use
    code when you can’t achieve what you need to with the no-code built-in apps, Webhooks
    by Zapier, or API Request action steps. You can write custom code in either the
    JavaScript or Python programming languages and use it in your Zaps with Code by
    Zapier to either trigger the workflow or perform various tasks to transform and
    customize your data.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的 Zap 中使用 Webhooks 和 API 请求的下一个步骤是在您无法通过无代码内置应用程序、Webhooks by Zapier 或 API
    请求动作步骤实现所需操作时使用代码。您可以使用 JavaScript 或 Python 编程语言编写自定义代码，并在 Code by Zapier 中使用它们以触发工作流程或执行各种任务以转换和定制您的数据。
- en: 'The Code by Zapier built-in app can be used via the following trigger and action
    events:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Code by Zapier 内置应用程序可通过以下触发器和动作事件使用：
- en: '**Run JavaScript** (trigger): This trigger event allows you to use JavaScript
    to start a workflow'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行 JavaScript**（触发器）：此触发器事件允许您使用 JavaScript 启动工作流程'
- en: '**Run Python** (trigger): This trigger event allows you to use Python to start
    a workflow'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行 Python**（触发器）：此触发器事件允许您使用 Python 启动工作流程'
- en: '**Run JavaScript** (action): This action event allows you to run JavaScript
    as an action step in your Zap'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行 JavaScript**（动作）：此动作事件允许您在 Zap 中作为动作步骤运行 JavaScript'
- en: '**Run Python** (action): This action event allows you to run Python as an action
    step in your Zap'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行 Python**（动作）：此动作事件允许您在 Zap 中作为动作步骤运行 Python'
- en: Let’s explore an example of when you can use Code by Zapier to achieve more
    in your automations and not be limited by existing Zapier trigger, action, and
    search events.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨一个示例，说明何时可以使用 Code by Zapier 在您的自动化中实现更多，并且不受现有 Zapier 触发器、动作和搜索事件的限制。
- en: An example of using the Run JavaScript action event of Code by Zapier
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Code by Zapier 的运行 JavaScript 动作事件的示例
- en: You may want to retrieve detailed information about a contact in Pipedrive,
    such as all the phone numbers associated with the contact, once your workflow
    has been triggered. You may then want to manipulate those phone numbers to extract
    the area code. The Pipedrive integration with Zapier has a **Find Person** search
    action event that only allows for one phone number to be retrieved. The Pipedrive
    API allows requests for information on a person ([https://developers.pipedrive.com/docs/api/v1/#!/Persons/getPerson](https://developers.pipedrive.com/docs/api/v1/#!/Persons/getPerson)),
    so you can use Code by Zapier to do this using the **Run JavaScript** or **Run
    Python** action events.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦触发了您的工作流程，您可能希望检索与 Pipedrive 联系人相关的详细信息，例如联系人关联的所有电话号码。然后，您可能希望操作这些电话号码以提取区号。Pipedrive
    与 Zapier 的集成具有一个 **查找联系人** 搜索动作事件，仅允许检索一个电话号码。Pipedrive API 允许请求有关联系人的信息（[https://developers.pipedrive.com/docs/api/v1/#!/Persons/getPerson](https://developers.pipedrive.com/docs/api/v1/#!/Persons/getPerson)），因此您可以使用
    Code by Zapier 使用 **运行 JavaScript** 或 **运行 Python** 动作事件来执行此操作。
- en: 'Let’s break this down into two steps. The following screenshot shows the first
    step in making an HTTP request to Pipedrive to retrieve the details of the person:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将其分解为两个步骤。以下截图显示了向 Pipedrive 发送 HTTP 请求以检索人员详情的第一步：
- en: "![Figure 11.8 – \uFEFFOverview of using the Run JavaScript action event in\
    \ Code by Zapier to retrieve phone numbers for a Pipedrive \uFEFFcontact](img/B18474_11_08.jpg)"
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: "![图 11.8 – \uFEFF在 Code by Zapier 中使用运行 JavaScript 动作事件的概述，以检索 Pipedrive \uFEFF\
    联系人的电话号码](img/B18474_11_08.jpg)"
- en: Figure 11.8 – Overview of using the Run JavaScript action event in Code by Zapier
    to retrieve phone numbers for a Pipedrive contact
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8 – 在 Code by Zapier 中使用运行 JavaScript 动作事件概述，以检索 Pipedrive 联系人的电话号码
- en: As per the API documentation, the API token in your Pipedrive account would
    be displayed in the `api_token` field and the URL for your Pipedrive account would
    be added to the code.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 API 文档，在您的 Pipedrive 帐户中的 API 令牌将显示在 `api_token` 字段中，并且您的 Pipedrive 帐户的 URL
    将添加到代码中。
- en: 'The next step would involve extracting only the area code from the phone number.
    This is shown in the following screenshot:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的步骤将涉及仅从电话号码中提取区号。如下截图所示：
- en: "![Figure 11.9 – \uFEFFOverview of using the Run JavaScript action event in\
    \ Code by Zapier to extract the area code from a phone number](img/B18474_11_09.jpg)"
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: "![图 11.9 – \uFEFF在 Code by Zapier 中使用运行 JavaScript 动作事件概述，以提取电话号码的区号](img/B18474_11_09.jpg)"
- en: Figure 11.9 – Overview of using the Run JavaScript action event in Code by Zapier
    to extract the area code from a phone number
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9 – 在 Code by Zapier 中使用运行 JavaScript 动作事件概述，以提取电话号码的区号
- en: Tip
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You can use Code by Zapier steps to combine multiple actions that would normally
    involve several steps. This, in turn, can reduce your task usage. It is important
    to bear in mind that Zapier does not support code used in Code by Zapier steps,
    and it is the responsibility of the user to maintain the code. For example, if
    changes are made to the API or the data received from the API, this could “break”
    the code step.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用Code by Zapier步骤来合并多个操作，这通常需要几个步骤。这可以减少任务使用量。需要注意的是，Zapier不支持Code by Zapier步骤中使用的代码，用户有责任维护代码。例如，如果对API或从API接收到的数据进行了更改，则可能会“打破”代码步骤。
- en: Let’s briefly cover how you can use AI to generate code for use in Code by Zapier
    code steps.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要地介绍一下如何使用人工智能来生成用于Code by Zapier的代码步骤。
- en: Generating JavaScript or Python code with ChatGPT
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用ChatGPT生成JavaScript或Python代码
- en: 'With the release of OpenAI’s ChatGPT, you can now ask the AI chatbot to generate
    code for you to use in your Code by Zapier steps. This is extremely useful if
    you are not a programmer and do not know how to write any code. Using the example
    that we previously discussed, we gave ChatGPT the following prompt:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 随着OpenAI的ChatGPT的发布，现在您可以要求AI chatbot为您生成代码，以在您的Code by Zapier步骤中使用。如果您不是程序员，不知道如何编写代码，那么这非常有用。使用我们之前讨论的示例，我们给ChatGPT提供了以下提示：
- en: '*“I want to retrieve detailed information about a contact in Pipedrive, such
    as all the phone numbers associated with the contact, using Code by Zapier. I
    also want to manipulate those phone numbers to extract the area code from the
    phone number and display these results as two separate values. The Pipedrive API
    allows requests for information on a person,* [*https://developers.pipedrive.com/docs/api/v1/#!/Persons/getPerson*](https://developers.pipedrive.com/docs/api/v1/#!/Persons/getPerson)*.
    Can you write me some code in Python to perform this* *action please?”*'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '*“我想使用Code by Zapier检索有关Pipedrive联系人的详细信息，例如与联系人相关的所有电话号码。我还想操纵这些电话号码，从电话号码中提取区号并将这些结果显示为两个单独的值。Pipedrive
    API允许请求有关人员的信息，* [*https://developers.pipedrive.com/docs/api/v1/#!/persons/getperson*](https://developers.pipedrive.com/docs/api/v1/#!/persons/getperson)*。请为我编写一些Python代码以执行此操作，好吗？”*'
- en: 'The result is shown in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下截图所示：
- en: "![Figure 11.10 – \uFEFFOverview of using ChatGPT to generate code in Python\
    \ to use in a Code by Zapier step](img/B18474_11_10.jpg)"
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图11.10-使用ChatGPT生成Python代码用于Code by Zapier步骤的概述](img/B18474_11_10.jpg)'
- en: Figure 11.10 – Overview of using ChatGPT to generate code in Python to use in
    a Code by Zapier step
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.10-使用ChatGPT生成Python代码用于Code by Zapier步骤的概述
- en: 'The following screenshot shows the additional instructions produced by ChatGPT:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的屏幕截图显示了ChatGPT生成的附加说明：
- en: '![Figure 11.11 – Instructions provided by ChatGPT on how to alter the code
    for use in Code by Zapier](img/B18474_11_11.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图11.11-ChatGPT提供的有关如何修改Code by Zapier中代码的说明](img/B18474_11_11.jpg)'
- en: Figure 11.11 – Instructions provided by ChatGPT on how to alter the code for
    use in Code by Zapier
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.11-ChatGPT提供的有关如何修改Code by Zapier中代码的说明
- en: Tip
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You can use the magic of AI to write code for you from within your Code by Zapier
    steps. We will cover AI-powered Code by Zapier steps in more detail in [*Chapter
    19*](B18474_19.xhtml#_idTextAnchor2216), *AI* *and Automation*.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用人工智能的魔力，从您的Code by Zapier步骤中编写代码。我们将在[*第19章*](B18474_19.xhtml#_idTextAnchor2216)更详细地介绍由人工智能驱动的Code
    by Zapier步骤。
- en: 'Zapier has created a few very useful help documents to help you get started
    with Code by Zapier:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Zapier创建了一些非常有用的帮助文档，以帮助您开始使用Code by Zapier：
- en: '[https://zapier.com/blog/code-by-zapier-guide/](https://zapier.com/blog/code-by-zapier-guide/)https://help.zapier.com/hc/en-us/articles/8496326417549'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://zapier.com/blog/code-by-zapier-guide/](https://zapier.com/blog/code-by-zapier-guide/)https://help.zapier.com/hc/en-us/articles/8496326417549'
- en: '[https://help.zapier.com/hc/en-us/articles/8496197098253-JavaScript-code-examples-in-Zaps](https://help.zapier.com/hc/en-us/articles/8496197098253-JavaScript-code-examples-in-Zaps)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.zapier.com/hc/en-us/articles/8496197098253-JavaScript-code-examples-in-Zaps](https://help.zapier.com/hc/en-us/articles/8496197098253-JavaScript-code-examples-in-Zaps)'
- en: '[https://help.zapier.com/hc/en-us/articles/8496197130893-Python-code-examples-in-Zaps](https://help.zapier.com/hc/en-us/articles/8496197130893-Python-code-examples-in-Zaps)'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.zapier.com/hc/en-us/articles/8496197130893-Python-code-examples-in-Zaps](https://help.zapier.com/hc/en-us/articles/8496197130893-Python-code-examples-in-Zaps)'
- en: Tip
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: For more inspiration and access to pre-built templates, you can review the Code
    by Zapier built-in app profile page at [https://zapier.com/apps/code/integrations](https://zapier.com/apps/code/integrations).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更多灵感并访问预构建的模板，您可以查看 [https://zapier.com/apps/code/integrations](https://zapier.com/apps/code/integrations)
    上的 Code by Zapier 内置应用程序配置页面。
- en: You should now have a better understanding of how and when to use the Code by
    Zapier built-in app.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该更好地了解何时以及如何使用内置的 Code by Zapier 应用程序。
- en: Next, let’s review how to use the Storage by Zapier built-in app.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们回顾一下如何使用内置的 Storage by Zapier 应用程序。
- en: Storage by Zapier – saving and storing data
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Storage by Zapier – 保存和存储数据
- en: There may be many scenarios where it would be useful to be able to store small
    sets of data for use in your workflows. The Storage by Zapier built-in app allows
    you to save and retrieve small data values. With it, you can store reference data
    each time a Zap runs and then share it with other Zaps by retrieving it.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有许多场景需要您能够存储小数据集以供工作流使用。内置的 Storage by Zapier 应用程序允许您保存和检索小数据值。使用它，您可以在每次运行
    Zap 时存储参考数据，然后通过检索它与其他 Zaps 共享。
- en: Storage by Zapier does not operate with user accounts. Instead, you must specify
    a **secret storage key** in the format of a **Universally Unique Identifier**
    (**UUID4**), which acts much like a password, to identify and group storage data.
    You would then use this secret storage key to identify where to add data to and
    retrieve data from. By doing this, you can have multiple storage keys that identify
    your storage locations.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Storage by Zapier 不与用户帐户一起使用。相反，您必须指定以 **UUID4** 格式的 **通用唯一标识符**（**UUID4**），它类似于密码，用于识别和分组存储数据的
    **秘密存储密钥**。然后，您将使用此秘密存储密钥来标识要从何处添加数据以及从何处检索数据。通过这样做，您可以有多个标识您存储位置的存储密钥。
- en: You can store individual values or lists of values. You can also use **child
    values** (nested values of data) if you want to store and retrieve several values
    related to a unique identifier – for example, the name and email address of a
    specific contact.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以存储单个值或值列表。如果您想要存储和检索与唯一标识符相关的多个值，您还可以使用 **子值**（数据的嵌套值）–例如，特定联系人的姓名和电子邮件地址。
- en: 'The Storage by Zapier built-in app can be used via the following action and
    search action events:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 内置的 Storage by Zapier 应用程序可通过以下操作和搜索操作事件使用：
- en: '**Set Child Value** (action): This action event allows you to set one or multiple
    child values that are stored at a specified key.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置子值**（操作）：此操作事件允许您设置存储在指定键上的一个或多个子值。'
- en: '**Set Value** (action): This action event allows you to set a value stored
    at a specified key.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置值**（操作）：此操作事件允许您设置存储在指定键上的值。'
- en: '**Increment Value** (action): This action event allows you to incrementally
    add a value at a specified key.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增量值**（操作）：此操作事件允许您逐渐在指定键上添加值。'
- en: '**Pop Value From List** (action): This action event allows you to remove a
    value from a list of values. If the list is empty, however, it will return a default
    value that you define.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从列表中弹出值**（操作）：此操作事件允许您从值列表中删除一个值。但是，如果列表为空，它将返回您定义的默认值。'
- en: '**Push Value Onto List** (action): This action event allows you to push a value
    onto an existing list of values.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将值推送到列表中**（操作）：此操作事件允许您将一个值推送到现有值列表中。'
- en: '**Remove All Values** (action): This action event allows you to remove all
    values from a Storage by Zapier-connected account.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除所有值**（操作）：此操作事件允许您从连接到 Storage by Zapier 的帐户中删除所有值。'
- en: '**Remove Child Value** (action): This action event allows you to remove one
    or multiple child values stored at a specified key.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除子值**（操作）：此操作事件允许您删除存储在指定键上的一个或多个子值。'
- en: '**Remove Value** (action): This action event allows you to remove a value or
    a list of values stored at a specified key.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除值**（操作）：此操作事件允许您删除存储在指定键上的值或值列表。'
- en: '**Set Multiple Values** (action): This action event allows you to set multiple
    values stored at specified keys.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置多个值**（操作）：此操作事件允许您设置存储在指定键上的多个值。'
- en: '**Set Value If** (action): This action event allows you to conditionally set
    a value stored at a specified key if the stored value matches a previously defined
    value.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果设置值**（操作）：此操作事件允许您在存储的值匹配先前定义的值的情况下有条件地设置存储在指定键上的值。'
- en: '**Get Child Value** (search action): This search action event allows you to
    retrieve a child value stored at a specified key. You can also create a new child
    value if none have been stored.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取子值**（搜索操作）：此搜索操作事件允许您检索存储在指定键上的子值。如果尚未存储任何子值，您还可以创建新的子值。'
- en: '**Get Value** (search action): This search action event allows you to retrieve
    a value stored at a specified key. You can also create a new value if none have
    been stored.'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取值**（搜索操作）：这个搜索操作事件允许你检索存储在指定键中的值。如果尚未存储任何值，你也可以创建一个新值。'
- en: '**Get All Values** (search action): This search action event allows you to
    retrieve all values stored.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取所有值**（搜索操作）：这个搜索操作事件允许你检索所有存储的值。'
- en: '**Get List Values** (search action): This search action event allows you to
    retrieve all values from a list and format the output as one value.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取列表值**（搜索操作）：这个搜索操作事件允许你检索列表中的所有值，并将输出格式化为一个值。'
- en: '**Get Multiple Values** (search action): This search action event allows you
    to retrieve multiple values stored at specified keys.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取多个值**（搜索操作）：这个搜索操作事件允许你检索存储在指定键中的多个值。'
- en: '**Get Secret** (search action): This search action event allows you to retrieve
    your secret storage key as a value so that it can be used in a Code by Zapier
    step.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取秘密**（搜索操作）：这个搜索操作事件允许你将你的秘密存储键检索为一个值，以便在 Code by Zapier 步骤中使用。'
- en: Important note
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When using the **Get Secret** search action, bear in mind that this will expose
    your secret key and should be used with caution.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**获取秘密**搜索操作时，请注意这将暴露你的秘钥，应谨慎使用。
- en: 'Here are a couple of examples of how you can use Storage by Zapier:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何使用 Storage by Zapier 的几个示例：
- en: You may want to keep a running tally of various key performance indicators and
    analytics, such as how many new leads have been added to your CRM in a day or
    how many sales you have made in a week. You can use the **Increment Value** action
    event to add the values to different keys cumulatively, and then in a separate
    Zap use the **Remove Value** action event with a Schedule by Zapier trigger event
    to erase the value periodically (every day or month, for example). You can then
    display the values in a dashboard reporting tool such as Databox or Geckoboard.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可能想要对各种关键绩效指标和分析进行持续汇总，比如一天内有多少个新潜在客户添加到你的 CRM 中，或者你一周内的销售量。你可以使用**增加值**操作事件来将值累积添加到不同的键中，然后在一个单独的
    Zap 中使用**删除值**操作事件和 Schedule by Zapier 触发事件来定期清除值（例如，每天或每月）。然后，你可以在诸如 Databox
    或 Geckoboard 这样的仪表板报告工具中显示这些值。
- en: You may want to store the name and email address of every new user who subscribes
    to your email list. You can use the **Set Child Value** action event and specify
    the user ID as the secret storage key and the name and email address as child
    values. Then, you can use the **Get Child Value** search action event in a separate
    Zap to retrieve those values.
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可能想要存储每个订阅你的电子邮件列表的新用户的姓名和电子邮件地址。你可以使用**设置子值**操作事件，并将用户 ID 指定为秘密存储键，将姓名和电子邮件地址作为子值。然后，你可以在一个单独的
    Zap 中使用**获取子值**搜索操作事件来检索这些值。
- en: 'The following screenshot shows an example of where the `automation_survey_list`
    as the key value for the list:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了`automation_survey_list`作为列表的键值的示例：
- en: "![Figure 11.12 – \uFEFFOverview of using Storage by Zapier to add values to\
    \ a list](img/B18474_11_12.jpg)"
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.12 – 使用 Storage by Zapier 向列表添加值的概述](img/B18474_11_12.jpg)'
- en: Figure 11.12 – Overview of using Storage by Zapier to add values to a list
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12 – 使用 Storage by Zapier 向列表添加值的概述
- en: You could then use the **Get Value**, **Get All Values**, or **Get List Values**
    search action events to retrieve the data, depending on how you would like it
    presented.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以使用**获取值**、**获取所有值**或**获取列表值**搜索操作事件来检索数据，具体取决于你希望如何呈现它。
- en: Zapier has created useful help documents to help you get started with Storage
    by Zapier, which you can find at [https://help.zapier.com/hc/en-us/articles/8496293271053](https://help.zapier.com/hc/en-us/articles/8496293271053).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Zapier 创建了有用的帮助文档，帮助你开始使用 Storage by Zapier，你可以在这里找到：[https://help.zapier.com/hc/en-us/articles/8496293271053](https://help.zapier.com/hc/en-us/articles/8496293271053)。
- en: You can also access your storage data by using Code by Zapier steps in your
    workflows, as described in the Zapier help document at [https://help.zapier.com/hc/en-us/articles/8496062115597](https://help.zapier.com/hc/en-us/articles/8496062115597).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过在工作流程中使用 Code by Zapier 步骤来访问你的存储数据，如在 Zapier 帮助文档中描述的那样：[https://help.zapier.com/hc/en-us/articles/8496062115597](https://help.zapier.com/hc/en-us/articles/8496062115597)。
- en: Tip
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: For more inspiration and access to pre-built templates, you can review the Code
    by Zapier built-in app profile page at [https://zapier.com/apps/storage/integrations](https://zapier.com/apps/storage/integrations).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 获取更多灵感和访问预构建模板，你可以查看 Code by Zapier 内置应用程序配置页面：[https://zapier.com/apps/storage/integrations](https://zapier.com/apps/storage/integrations)。
- en: You should now have a better understanding of how and when to use the Storage
    by Zapier built-in app.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该更好地了解如何和何时使用Zapier内置应用中的Storage by Zapier。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed three advanced built-in apps by Zapier and a new
    feature in beta. We began by reviewing how to use webhooks in your Zaps with Webhooks
    by Zapier and make HTTP requests. Then, we explored how to use the **API Request**
    action event feature (in beta). Next, we covered how to use JavaScript or Python
    code with Code by Zapier, and generate code with ChatGPT. Lastly, we explored
    how to use Storage by Zapier to store and retrieve data.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了三个由Zapier开发的高级内置应用和一个新的测试功能。我们首先回顾了使用Webhooks by Zapier和进行HTTP请求的方法。然后，我们探讨了如何使用**API请求**动作事件功能（测试版）。接下来，我们介绍了如何使用JavaScript或Python代码与Code
    by Zapier一起使用，并使用ChatGPT生成代码。最后，我们探讨了如何使用Storage by Zapier来存储和检索数据。
- en: You now understand what the Webhooks by Zapier, Code by Zapier, and Storage
    by Zapier built-in apps, as well as the **API Request** action event, can be used
    for.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在了解了Webhooks by Zapier、Code by Zapier和Storage by Zapier内置应用，以及**API请求**动作事件的用途。
- en: 'In the next chapter, you will learn about the two built-in apps that can be
    used for managing your Zapier account: App Status by Zapier and Zapier Manager.
    We will cover how to use App Status by Zapier to get notifications of integration
    issues and review the various trigger, action, and search action events that Zapier
    Manager has for managing errors and changes in your Zapier account.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何使用两个Zapier内置应用来管理你的Zapier帐户：App Status by Zapier和Zapier Manager。我们将介绍如何使用App
    Status by Zapier来获取集成问题的通知，并回顾Zapier Manager的各种触发器、动作和搜索动作事件，以便管理你的Zapier帐户中的错误和变更。
- en: Questions
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which three built-in apps or features in Zapier can be used to make HTTP requests?
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪三个内置应用或功能可以用于进行HTTP请求？
- en: If you would like to store small values secretly and securely, what Zapier built-in
    app can you use?
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想要秘密且安全地存储小的数值，你可以使用哪个Zapier内置应用？
