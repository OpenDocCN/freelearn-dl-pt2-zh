- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building Your First Automated Workflow (Zap)
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we’ll cover all the need-to-know information to enable you
    to start automating manual and repetitive tasks in your business. We will start
    by covering how to strategize and plan individual workflows before automating
    them. We will then dive into working through a step-by-step process of connecting
    your apps to Zapier, introduce the two versions of the Zap editor, and work through
    an example to help you create your first Zap from scratch. Then, we will show
    you how to edit your Zaps and switch between versions, and how you can access
    a wide range of pre-built or guided workflows created by Zapier to speed up your
    Zap-building process. We will explain the different field types you may see in
    your action steps, and how to use the correct data formats for their fields. We
    will conclude this chapter by delving into the best practices to ensure the continuous
    improvement of your processes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following key topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Strategizing your first workflow
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting your apps to Zapier
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating your first Zap in the Zap editor
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding field data types
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensuring your processes and automations stay current
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have worked through each of these topics, you will have successfully
    built your first workflow automation using Zapier.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To work through the content in this chapter, you will need access to a Zapier
    account. The Zapier Free plan will be adequate to work through the content in
    this chapter. To use Versions, you must be subscribed to a paid Zapier plan. You
    can get access to the **Zap templates** used in this chapter here: [https://bit.ly/zapier-book](B18474_03.xhtml#_idTextAnchor374).
    Using these templates will help you visualize how the process works.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Strategizing your first workflow
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far in this book, we have worked through how to simplify your processes,
    establish what can be automated, and assess how your business apps integrate with
    Zapier. You are now suitably prepared to start planning your first workflow.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps are required to strategize your workflows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing your process and app information
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating a step-by-step workflow plan
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let’s take a look at each of these.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing your process and app information
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From your list of processes, choose one of your five top-priority processes
    that satisfy the following criteria:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: The process can be automated partly or fully
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One or more apps associated with the process integrate with Zapier
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You have made a list of triggers, actions, and searches for each of your apps
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s explore how to create a workflow plan.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Creating a step-by-step workflow plan
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: From your chosen process, select one of the most straightforward quick-win solutions
    that you identified earlier that could be automated. Use this part of your process
    to work through the following steps to strategize the workflow. We will then create
    this workflow automation in Zapier in the next part of this chapter.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: We will use an example of a sales process to illustrate the steps we need to
    take to strategize the workflow.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Your company does not have a complex sales process. You have two salespeople
    who are using **ActiveCampaign** to manage your sales pipeline. New deals are
    created in the pipeline when marketing leads hit a certain lead score from automated
    marketing campaign opens and link clicks. There are also members of your admin
    team that do not need access to ActiveCampaign but need to know a summary of specific
    details associated with these new deals. This information is manually added to
    a Google Sheets spreadsheet by the sales team after they have created the deal
    in ActiveCampaign. The admin team has identified that, on occasion, deals have
    not been added to the spreadsheet, and there are often transcription errors in
    the data. The sales team has mentioned that the process is time-consuming and
    error-prone, which increases with volume. You have already worked through all
    the steps in the previous sections to simplify this process, establish whether
    it can be automated, and assess whether ActiveCampaign and Google Sheets integrate
    with Zapier and in what way.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows the preceding example as a mapped-out process with
    the 5W1H method, which we covered in [*Chapter 2*](B18474_02.xhtml#_idTextAnchor225),
    *Preparing to Automate* *Your Processes*:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1 – A process map to visualize the example](img/B18474_03_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
- en: Figure 3.1 – A process map to visualize the example
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use this example to work through a step-by-step process to strategize
    a workflow:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify your trigger app**: In our example, the trigger app is **ActiveCampaign**.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Identify your trigger step event**: In our example, the Zapier trigger step
    is **New Deal Added or Updated**. This event triggers the start of the workflow
    in Zapier when a new deal is created in ActiveCampaign. This is shown in the following
    screenshot:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 3.2 – \uFEFFOverview of the ActiveCampaign app profile showing the\
    \ New Deal Added or Updated trigger event](img/B18474_03_02.jpg)"
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: Figure 3.2 – Overview of the ActiveCampaign app profile showing the New Deal
    Added or Updated trigger event
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify whether the trigger is scheduled or instant**: In our example, this
    trigger is instant, which means that immediately after a deal is created in ActiveCampaign,
    the workflow in Zapier will be triggered.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: It is handy to know how often your workflows will update. If you have noted
    that your trigger is scheduled rather than instant, review your Zapier pricing
    plan to establish how often your workflow is likely to start. For example, if
    you are using the Free plan, the update time is every 15 minutes, which means
    that Zapier will look for new data in that trigger app every 15 minutes so that
    it can start your workflow. This was discussed in [*Chapter 1*](B18474_01.xhtml#_idTextAnchor014),
    *Introduction to Business Process Automation* *with Zapier.*
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify your action app**: In our example, the action app is **Google Sheets**.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Review the data you require for your action step**: In our example, we want
    to capture the following information from the deal in ActiveCampaign and add it
    to our Google Sheets spreadsheet:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deal name
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Company
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Contact
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Contact’s email
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Deal value (in US$)
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Expected close date
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Deal owner
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Our ActiveCampaign deal is shown in the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – An ActiveCampaign deal to be used as a working example (courtesy
    of ActiveCampaign)](img/B18474_03_03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: Figure 3.3 – An ActiveCampaign deal to be used as a working example (courtesy
    of ActiveCampaign)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify your action step event**: In our example, the Zapier action step
    is **Create Spreadsheet Row**. This action will create a new row in a spreadsheet
    that you will specify. This is shown in the following screenshot:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 3.4 – \uFEFFOverview of the Google Sheets app profile showing the\
    \ Create Spreadsheet Row action event](img/B18474_03_04.jpg)"
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: Figure 3.4 – Overview of the Google Sheets app profile showing the Create Spreadsheet
    Row action event
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to understand what data we need to capture in our action app.
    In this case, it is a Google Sheets spreadsheet. Its structure is shown in the
    following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5 – A Google Sheets spreadsheet to be used in our example (courtesy
    of Google)](img/B18474_03_05.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
- en: Figure 3.5 – A Google Sheets spreadsheet to be used in our example (courtesy
    of Google)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 'It is often the case that your data headings may have slightly different wording
    in your various apps; thus, it is good practice to make a note of what you may
    want to map between the two apps. This exercise will make our **data mapping**
    steps more straightforward to follow when we start building out the workflows
    in Zapier. Our example is shown in the following figure:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Data mapping between the trigger and action steps](img/B18474_03_06.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
- en: Figure 3.6 – Data mapping between the trigger and action steps
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have strategized your workflow, you can start connecting your apps
    to Zapier and then create your first workflow automation on the Zapier platform.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Connecting your apps to Zapier
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we can start building our automations, we need to connect our apps to
    Zapier to allow Zapier to retrieve and post data in them.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 'Knowing how your data and security are handled by Zapier is an important topic.
    Allowing Zapier access to your apps using authentication protocols is essential
    for Zapier to be able to perform task automations on your behalf. The credentials
    that you use to authenticate your apps so that Zapier can connect with them are
    stored with bank-level encryption. Zapier has created a comprehensive resource
    on data privacy and security, which you can read here: [https://zapier.com/help/account/data-management/security-at-zapier](B18474_03.xhtml#_idTextAnchor519).'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: 'App connection can be performed from two places:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: The **My Apps** link in the left sidebar.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Zap editor in our trigger, action, or search steps. We will cover this in
    more detail in the *Creating your first Zap in the Zap editor* section of *Setting
    up your* *trigger step*.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s look at the **My Apps** method first.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Connecting your apps in My Apps
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to connect each of your apps:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'Start typing in the name of your app in the search bar to reveal a drop-down
    list. Then, select your app and click the **Connect** button. You can also just
    click the **Add connection** button to reveal a popup where you can use the search
    bar to search for an app. This is shown in the following screenshot:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 3.7 – \uFEFFOverview of connecting a new account in My Apps](img/B18474_03_07.jpg)"
  id: totrans-72
  prefs: []
  type: TYPE_IMG
- en: Figure 3.7 – Overview of connecting a new account in My Apps
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have chosen your app, a new window will open, giving you instructions
    on how to authorize the app. You may be asked to enter some of the following details:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Google account details (to use **Sign in** **with Google**)
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Username and password
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: App domain or subdomain URL
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: API key or token
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Zapier provides instructions to explain the fields you will need to fill in
    and how you can find this information if it is not immediately apparent.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows an example of a subdomain and API key request
    for **Freshdesk**:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Authorizing your app with a subdomain and API key in Freshdesk](img/B18474_03_08.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
- en: Figure 3.8 – Authorizing your app with a subdomain and API key in Freshdesk
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: If a new browser tab or window does not appear when you select the app that
    you want to connect to, try to disable your browser’s pop-up blocker.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: 'You will then be taken to an approval page, advising you that Zapier wants
    to access your account and what Zapier will be allowed to do if you approve access.
    You can read more about privacy and risks, and if you are happy to continue, click
    on **Allow**. This text may differ between apps. An example of using a Google
    account is shown in the following screenshot:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.9 – Google approval page to confirm allowing Zapier to access the
    app](img/B18474_03_09.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: Figure 3.9 – Google approval page to confirm allowing Zapier to access the app
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: 'You might need to reconnect your app if you have connected the app to Zapier
    using a username and password and you have changed your password in the app. Here
    are more details on app authentication and reconnection requirements: [https://zapier.com/help/manage/app-connections/what-should-i-do-in-zapier-if-i-change-an-app-account-password](B18474_03.xhtml#_idTextAnchor518).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: Follow *Steps 1* to *3* for all apps involving a trigger and an action step.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: You will now be able to use your connected apps in your workflows, which means
    you can focus on creating your first Zap. We will discuss how to connect apps
    from within the Zap editor next.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: Creating your first Zap in the Zap editor
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are three ways that you can create a Zap:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '**Create a Zap (beta) feature**: This is an AI Zap builder feature that is
    currently in beta. It allows you to use a prompt that will use AI functionality
    to produce a draft Zap for you. We will discuss this feature in more detail in
    [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216), *AI* *and Automation*.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Suggested workflow templates**: Once you have added the apps you use, in
    your dashboard, you will be shown some suggestions of workflow templates you can
    use to quickly get started with Zapier. We will cover this later in this chapter.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build from scratch**: The best way to learn how to use Zapier to automate
    your processes is to build your Zaps from scratch.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All workflows are created, edited, and maintained in the Zap editor. The Zap
    editor can be accessed at any time from the expandable left sidebar menu, by clicking
    on the **+ Create Zap** button. First, let’s have a look at how to navigate the
    Zap editor.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Navigating the Zap editor
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Zap editor consists of two views where you can build your Zaps:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '**Classic Editor**: This was the original user interface of the Zap editor
    for many years and shows steps in static blocks that are vertically stacked. This
    is shown in the following screenshot:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.10 – The structure of the Classic Editor view](img/B18474_03_10.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
- en: Figure 3.10 – The structure of the Classic Editor view
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '**Visual Editor**: This is a newly released feature that allows you to fully
    visualize your Zap, move and reposition the entire Zap around the screen, zoom
    in and out to change the view, and export an image of your Zap. Most new user
    accounts will default to **Visual Editor**. This is shown in the following screenshot:'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.11 – The structure of the Visual Editor view](img/B18474_03_11.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
- en: Figure 3.11 – The structure of the Visual Editor view
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Both Zap editors are structured with text fields, icons, and buttons along the
    top bar and either in the right-hand side expandable panel in the case of **Classic
    Editor** or the left-hand side expandable panel in the case of **Visual Editor**.
    Let’s take a look at this structure in more detail to understand what each section
    offers us.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: The top bar
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The top bar contains the following text fields, icons, and buttons, from left
    to right:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '**Back arrow**: Clicking on this icon takes you to the Zap management area.
    We will discuss this area in more detail in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520),
    *Managing* *Your Zaps*.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Untitled Zap**: This is an editable text field that allows you to give a
    custom name to your Zap. Adequately naming your Zap is an important part of managing
    your workflows. We will discuss this in more detail in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520),
    *Managing* *Your Zaps*.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Classic Editor/Visual Editor dropdown**: This dropdown allows you to navigate
    between **Classic Editor** and **Visual Editor**.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The “On/Off” button**: This button becomes usable once you have created your
    Zap, tested it, and eliminated any errors. You must turn your Zap **On** to use
    it with live data.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Fix to Publish button**: This button allows you to edit your Zap after
    it has been published. It will only be visible once your Zap has been published
    for the first time.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The three dots menu**: Clicking on this menu item exposes the **Share this
    Zap** button, which allows you to share the Zap you have created with anyone who
    has a Zapier account. It will only be visible once you have published your Zap.
    We will discuss Zap sharing in more detail in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520),
    *Managing* *Your Zaps*.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The left-hand side panel in **Visual Editor** and right-hand side panel in
    **Classic Editor** contain several icons that, once highlighted with your cursor,
    show the text that follows, from top to bottom:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '**Status**: This section is represented by an exclamation mark icon in the
    menu. Any errors related to specific steps in your Zap will be highlighted here.
    You can get more information on the specifics of the error by clicking on the
    notification. It is important to address any errors that have been highlighted
    before you attempt to turn your Zap on.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outline**: This section is represented by a list icon in the menu. It will
    only be visible in **Visual Editor** once you have published your Zap. It shows
    a summary of all of your steps in your Zap, as built out in Visual Editor. Selecting
    any of the steps in this section highlights the step in the editor. Once you start
    to create complex multi-step Zaps, using this section as a quick-reference tool
    is handy for identifying where certain steps are in the workflow and for managing
    steps in your Zaps (renaming, deleting, reordering, and duplicating). The search
    bar is just as important to use for searching for steps based on their title.
    We will discuss how to best name your Zaps in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520),
    *Managing Your Zaps*. We will apply these naming principles to steps when you
    start creating multi-step Zaps and also cover how to rename, delete, duplicate,
    and reorder steps in [*Chapter 6*](B18474_06.xhtml#_idTextAnchor795), *Creating
    Multi-Step Zaps and Using* *Built-In Apps*.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Settings**: This section is represented by a cog icon in the menu and allows
    you to manage your Zap from within either editor. You can edit the Zap’s name,
    change the folder it is stored in, add or alter its description (this is useful
    for making notes), and change the timezone settings of the Zap. We will discuss
    this in detail in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520), *Managing*
    *Your Zaps*.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versions**: This section is represented by a box and two lines in the menu
    and will only be visible once you have published your Zap. Users of paid plans
    will be able to see each saved draft and published version of their Zap. Users
    on the Professional plan and higher will be able to revert to previous versions
    as well. We will discuss this in more detail in the *Editing your Zaps – Drafts
    and* *Versions* section.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本**: 此部分由菜单中的框和两条线表示，只有在您发布了您的 Zap 后才可见。付费计划的用户将能够查看每个保存的草稿和已发布版本的 Zap。专业计划及以上用户还可以恢复以前的版本。我们将在*编辑您的
    Zaps - 草稿和* *版本*部分进行更详细的讨论。'
- en: '**History**: This section is represented by a clock icon in the menu and links
    to the **Zap History** module. It will only be visible once your Zap has been
    published for the first time. We will cover **Zap History** in detail in [*Chapter
    5*](B18474_05.xhtml#_idTextAnchor635), *Troubleshooting and Handling* *Zap Errors*.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**历史**: 此部分由菜单中的时钟图标表示，并链接到**Zap 历史**模块。只有在您的 Zap 第一次被发布后才会可见。我们将在[*第五章*](B18474_05.xhtml#_idTextAnchor635)中详细介绍**Zap
    历史**，*故障排除和处理* *Zap 错误*。'
- en: '**Details**: This section is represented by a page and lightning bolt icon
    and will only be visible once your Zap has been published. Clicking on this icon
    will take you to the **Zap Details** page for the Zap. We will discuss this in
    detail in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520), *Managing* *Your Zaps*.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**详情**: 该部分以页面和闪电图标表示，只有在您的 Zap 发布后才可见。点击该图标将带您到 Zap 的**详情**页面。我们将在[*第四章*](B18474_04.xhtml#_idTextAnchor520)中详细讨论这一点，*管理*
    *您的 Zap*。'
- en: '**Help**: This section is represented by a question mark icon in the menu.
    It is a useful built-in helpdesk that shows “how-to” help articles and videos
    that can be viewed from within the Zap editor. If you are having a problem with
    your Zap, at the bottom of the page, you will find a **Get Help** link, which
    will take you to the Zapier support page where you can submit a support query.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**帮助**: 该部分由菜单中的问号图标表示。这是一个有用的内置帮助台，显示可以从 Zap 编辑器内查看的“如何”帮助文章和视频。如果您在使用 Zap
    时遇到问题，在页面底部，您会找到一个**获取帮助**链接，它将带您到 Zapier 支持页面，您可以在那里提交支持请求。'
- en: '**Notes**: This section is represented by a comment box icon and can be used
    to add more information about the steps in your Zap. The following Zapier help
    article provides further context on how to use this feature: [https://help.zapier.com/hc/en-us/articles/16791272000525](B18474_03.xhtml#_idTextAnchor510).
    We will explore how to use AI-powered features to generate Zap notes in [*Chapter
    19*](B18474_19.xhtml#_idTextAnchor2216), *AI* *and Automation*.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注释**: 该部分由一个评论框图标表示，可用于添加有关 Zap 中步骤的更多信息。以下 Zapier 帮助文章提供了如何使用此功能的更多背景信息：[https://help.zapier.com/hc/en-us/articles/16791272000525](B18474_03.xhtml#_idTextAnchor510)。我们将在[*第十九章*](B18474_19.xhtml#_idTextAnchor2216)中探讨如何使用
    AI 功能生成 Zap 注释，*AI* *和自动化*。'
- en: '**Show**: An arrow icon is shown at the bottom of either panel. In **Classic
    Editor**, the arrow icon is left-pointing, while in **Visual Editor**, the arrow
    icon is right-pointing. Clicking on this icon expands the view of the panel to
    show the other icons and their names.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示**: 底部的任一面板上显示一个箭头图标。在**经典编辑器**中，箭头图标是向左的，而在**可视编辑器**中，箭头图标是向右的。点击这个图标可以展开面板的视图，显示其他图标和它们的名称。'
- en: The bottom-left section in the Visual Editor view
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可视编辑器视图的左下部分
- en: 'The bottom-left section of **Visual Editor** shows controls that allow you
    to perform the following actions:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**可视编辑器**视图的左下部分显示了可以执行以下操作的控件：'
- en: '**Zoom in**: You can increase the screen zoom percentage using the **+** icon.
    The zoom percentage is shown between the **+** and **-** icons.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**放大**: 您可以使用**+**图标来增加屏幕缩放百分比。缩放百分比显示在**+**和**-**图标之间。'
- en: '**Zoom out**: You can decrease the screen zoom percentage using the **-** icon.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩小**: 您可以使用**-**图标减少屏幕缩放百分比。'
- en: '**Fit to view**: This control is represented by an icon of four arrows pointing
    outward to each corner of a box. Clicking on this control allows you to fit your
    Zap so that you can view it in full.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**适合查看**: 这个控件由一个指向盒子每个角的四个箭头图标表示。点击这个控件可以让您调整您的 Zap，以便全屏查看。'
- en: '**Export to image**: This control is represented by a downward-facing arrow
    and line icon. It allows you to download an image of your current view to your
    device.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导出为图像**: 这个控件由一个向下的箭头和一条线图标表示。它允许您将当前视图的图像下载到您的设备上。'
- en: 'This is shown in the following screenshot:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示：
- en: '![Figure 3.12 – The Visual Editor controls in the bottom-left section](img/B18474_03_12.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
- en: Figure 3.12 – The Visual Editor controls in the bottom-left section
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: The editing area
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The editing area is where the real magic of Zapier happens. This is where you
    can create workflow automations step by step. The editing area is structured as
    follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '**Create a Zap AI builder feature (beta)**: New Zapier account users might
    not see this feature displayed as it is currently still in beta. We will discuss
    this feature in more detail in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216),
    *AI* *and Automation*.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trigger step box**: This is your trigger step. You can start building your
    Zap by searching for or selecting an app to add to your trigger step. The trigger
    step might be shown as a popup when you’re creating a new Zap.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Plus sign (+) icon**: These icons appear between all steps and after the
    last step. Clicking on this icon allows you to add action, search, filter, delay,
    and formatter steps between existing steps, as well as paths after the last step.
    We will discuss this in more detail from [*Chapter 6*](B18474_06.xhtml#_idTextAnchor795),
    *Creating Multi-Step Zaps and Using Built-In* *Apps*, onward.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Action step box**: This is your action step. Click on the step to begin setting
    up your action step.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In **Classic Editor**, Zap customization is made in the main editing area, whereas
    in **Visual Editor**, the right-hand side panel expands to allow you to make edits
    to your steps. Once you have added an app to your trigger or action step, an icon
    will be revealed in the top-right corner of the step box, which is represented
    by a **three dots icon**. Clicking on this icon will allow you to rename, reorder,
    copy and paste, and deduplicate steps. For action steps, you also have the option
    to delete this step. You cannot delete a trigger step but you can edit it. We
    will discuss this in more detail later in this chapter.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a better understanding of how to navigate through both editors,
    we can start creating our Zap. We previously identified our trigger and action
    apps, our related steps, and the data we will map between our apps.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: All screenshots displayed in the rest of the chapters in this book have been
    taken from the **Classic Editor** view for simplicity. Where relevant, we will
    discuss the differences between the **Classic Editor** and **Visual** **Editor**
    views.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: We will now use our working example from earlier in this chapter to illustrate
    how to create a Zap. You can work through these steps using the workflow you strategized
    earlier.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Setting up your trigger step
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Firstly, we will start with the trigger step. Let’s work through a step-by-step
    guide to set up our trigger step using our example:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '**Start editing the trigger step**: When you open the **Classic Editor** view,
    the trigger step will already be open. In the **Visual Editor** view, this will
    be in the form of a popup.'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Choose your trigger app**: From the list of apps presented in the trigger
    step, choose one to connect as the trigger app. If you don’t see it in the list,
    search for it in the search bar just above. The search bar allows you to search
    for your chosen app if it is not shown in the list of apps. Selecting any of the
    apps will allow you to start customizing your trigger and action steps. In our
    example, we will select **ActiveCampaign**. In the **Classic Editor** view, the
    changes are made within the main editing area, whereas in the **Visual Editor**
    view, the right-hand side panel expands for you to perform the editing.'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Choose your trigger event**: Now, select your trigger event. In our example,
    we will select **New Deal Added or Updated** as our trigger event, as shown in
    the following screenshot:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.13 – Using the ActiveCampaign app’s New Deal Added or Updated trigger
    event in the Zap editor](img/B18474_03_13.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: Figure 3.13 – Using the ActiveCampaign app’s New Deal Added or Updated trigger
    event in the Zap editor
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Click the **Continue** button.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '**Choose your trigger app account**: Select your app account from the drop-down
    list. The list will only show accounts specific to the app you selected in *step
    2*, and those you have previously connected to Zapier. You can also click on the
    **Change** button and then the **Connect a New Account** button to connect and
    authenticate a new app account. This will take you through the same procedure
    that we discussed in the *Connecting your apps to Zapier* section of this chapter.
    Another option is to click on the **Manage all of your connected accounts here**
    link, which will enable you to edit your connections in the **My Apps** module.
    This is shown in the following screenshot:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.14 – Connecting an ActiveCampaign account to Zapier in the trigger
    step](img/B18474_03_14.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
- en: Figure 3.14 – Connecting an ActiveCampaign account to Zapier in the trigger
    step
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Click the **Continue** button.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '**Choose your sample data and test your trigger**: Next, we need to find sample
    data from our app (ActiveCampaign, in our example) to test our trigger. This will
    confirm that we are using the right app account and that the trigger step is working
    correctly. Click the **Test** button. Zapier will search for data in your app,
    which, after a few seconds, will be pulled through into the editor, which will
    show the date the record was pulled in.'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: We recommend creating test data, sample sets of data, or dummy data wherever
    possible when you are testing your Zaps. This can help you avoid live data corruption
    in your app accounts.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '`Test Company deal`, associated with the `deal_title` data label. We will use
    the name of this deal as the **unique identifier** to check that we have the correct
    sample data to use in the test. You can scroll through the data or use the search
    bar to find your data. Using the search bar will highlight how many data values
    contain that text; you can easily find them using the arrow keys and the scroll
    bar. This is shown in the following screenshot:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.15 – Using a unique identifier to search for data in the sample](img/B18474_03_15.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
- en: Figure 3.15 – Using a unique identifier to search for data in the sample
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '**Change your sample data**: You can change your sample data by selecting the
    sample header with the up and down arrows (for our example, *Figure 3**.15* shows
    this labeled as **Deal G**) and selecting another option if available. To retrieve
    more sample data, select **Find** **new records**.'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Finalize your trigger step**: Select **Continue with selected record** to
    move on to your action step. If your trigger has been set up correctly, you will
    see a green check mark next to the app logo, as shown in the following screenshot:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.16 – A completed trigger step in the Zap editor](img/B18474_03_16.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
- en: Figure 3.16 – A completed trigger step in the Zap editor
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Some app integrations only allow a limited number of sample datasets to be brought
    through. In some cases, only recently created data will be pulled through. You
    may have to create additional sample sets as you are testing your trigger. Also,
    some app integrations have issues pulling through any existing sample data from
    the app and will provide you with dummy sample data to use instead. In these situations,
    use the dummy sample data to test your trigger step. Your Zap will work correctly
    with “live” data when the Zap is turned on. Contact Zapier support if this does
    not work.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll set up our action step.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Setting up your action step
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the action steps, you will find two main field types:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '**Choose value…**, from which you can choose set values from a drop-down list
    brought in from our action app or add **custom values**. We will discuss using
    custom values in more detail when we explore multi-step Zaps in [*Chapter 6*](B18474_06.xhtml#_idTextAnchor795),
    *Creating Multi-Step Zaps and Using* *Built-In Apps*.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Deal name` cell in the Google Sheets spreadsheet to always display `Test Deal`
    when a new row is created, we would enter `Test Deal` into the field in that step.
    Using dynamic data, on the other hand, means that the value will represent live
    data when the Zap runs. This data is retrieved from your trigger app (or previous
    action steps if you’re using multi-step Zaps).'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: Mapping out your data in a table helps you identify the dynamic data names in
    the different apps. Often, the title of the data may be named differently from
    what you expect. These naming conventions are based on what title the API field
    is given in the app. Concerning the data table in *Figure 3**.6* and trigger data
    in *Figure 3**.15*, in our example, we may expect to see a value for `deal_title`
    instead, and for `contact_orgname` or `deal_orgname` instead. As you become more
    familiar with how field data is named and presented from your trigger and action
    steps, you can add an additional column to your data mapping table that shows
    the API field’s name.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'An example is shown in the following screenshot, where static text and dynamic
    text are used in the **Deal name** field in two separate action steps:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.17 – Using dynamic data (in the box) and typing in static text (indicated
    by the arrow) to map a Google Sheets action step field](img/B18474_03_17.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
- en: Figure 3.17 – Using dynamic data (in the box) and typing in static text (indicated
    by the arrow) to map a Google Sheets action step field
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s work through a step-by-step guide to set up our action step, as
    follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '**Start a new step**: Click on the second step marked as **2\. Action** to
    reveal the app list.'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Choose your action app**: Select your action app from the list of displayed
    apps. If you don’t see it in the list, search for it in the search bar just above.
    In our example, we will select **Google Sheets**.'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Choose your action event**: Now, select your action event. In our example,
    we will select **Create Spreadsheet Row** as our action event. Click the **Continue**
    button.'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Choose your action app account**: Select your app account from the drop-down
    list. This step functions in the same way as in the trigger app account step.
    Click the **Continue** button.'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Customize your action step**: Next, we need to customize our action step.
    In our example, the first thing we need to do is choose which spreadsheet we want
    Zapier to add data to. Using the **Choose value…** fields, Zapier will bring in
    a list of fixed values from our action app. In the case of our example, Zapier
    will bring in a list of spreadsheets, and once a spreadsheet has been selected,
    a list of worksheets within that sheet. This is shown in the following screenshot:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.18 – Choosing a Google Sheets spreadsheet and worksheet to use in
    a Zapier action step](img/B18474_03_18.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
- en: Figure 3.18 – Choosing a Google Sheets spreadsheet and worksheet to use in a
    Zapier action step
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: In our example, the rest of the field types are **Enter text or insert data…**;
    we will use this to describe how to map your fields.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have selected the field you want to map (using an **Enter text or
    insert data…** field in this case), a drop-down list of dynamic data will be shown.
    This dynamic data will be presented in the following format:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '**An icon**, which represents the originating app (in our example, ActiveCampaign).
    It will look similar to the app’s logo.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`1.`. In multi-step Zaps, this numbering will help you identify which step
    to map data from.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Text styled in bold with a colon**, which represents the name of the field
    as coded within the app – that is, the **API** **field name**.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Text styled normally**, which represents the dynamic data from the app.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is shown in the following screenshot:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.19 – The structure of dynamic data](img/B18474_03_19.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
- en: Figure 3.19 – The structure of dynamic data
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: You can select **Show all options** to show all data, which you can scroll through,
    or use the search bar to search for specific text.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now use the information from *Figure 3**.6* to assist us with mapping
    our field data. Using our example, we can search for the `Test Company` `deal`
    title by typing this in the search bar, as shown in the following screenshot:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.20 – Searching for dynamic data in an action step](img/B18474_03_20.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
- en: Figure 3.20 – Searching for dynamic data in an action step
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Identify the correct dataset to map to that field and select the relevant one.
    Repeat this for each field.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Fill in any fields that are marked as **required**. You will not be able to
    test your action step without these fields.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have mapped all the fields, the resulting action step form will look
    similar to what is shown in the following screenshot (using our example):'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.21 – A completed action step form with mapped fields](img/B18474_03_21.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
- en: Figure 3.21 – A completed action step form with mapped fields
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: As you can see from *Figure 3**.21*, you can map into the field two or more
    values dynamically to form a new word. For example, in the `Deal Owner First Name`
    data value and the `Deal Owner Last Name` data value to show the full name.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '**Test your data**: Once you are satisfied that your **field mappings** are
    correct, click **Continue**. Next, we need to test our data by sending it to our
    action app, Google Sheets. You can review the data that we will send and click
    the **Test action** button. Fields that have not been filled out will be highlighted
    in the **Empty fields** section. This is shown in the following screenshot:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.22 – The data testing options in the Test action block of an action
    step](img/B18474_03_22.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
- en: Figure 3.22 – The data testing options in the Test action block of an action
    step
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: You can also select **Skip test** if you do not want test data to be sent.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: If your request is successful, you will be shown a highlighted success message.
    You can choose **Retest action** to stay in the **Test** block to see another
    result or **Publish** to publish your draft and turn your Zap **On**.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: A pop-up box will appear stating **Ready to publish your Zap?** and a **Publish**
    button. Click the **Publish** button to publish and turn on your Zap.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '**Check your data in your action app**: Always check that your data has been
    sent correctly to your action. This is shown in the following screenshot, including
    the expected close date filled in:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.23 – Successfully sent test data from the action step shown in Google
    Sheets (courtesy of Google)](img/B18474_03_23.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
- en: Figure 3.23 – Successfully sent test data from the action step shown in Google
    Sheets (courtesy of Google)
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: Zapier assigns a standard name to trigger and action steps based on what the
    step does. Get into the habit of changing these standard names and renaming your
    action steps with keywords applicable to your workflow. You can then search for
    steps using the **Outline** icon in the right-hand side menu. This is handy when
    you have complex multi-step Zaps and you’re working with a team.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: 'You can get a template of this Zap here and add it to your Zapier account:
    https://bit.ly/zapier-book. Using this Zap template will help you visualize how
    the process works.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: With our example, you need to bear in mind that the trigger will run every time
    a new deal is added or updated in ActiveCampaign. This means that we will also
    be adding updated deals to the Google Sheets spreadsheet as new rows. You can
    use a search action step to check the Google Sheets spreadsheet to see whether
    the deal already exists on the sheet, then a Filter by Zapier step straight after
    to only allow the Zap to continue if the deal is not on the sheet. We will discuss
    using search action steps in [*Chapter 6*](B18474_06.xhtml#_idTextAnchor795),
    *Creating Multi-Step Zaps and Using Built-In Apps*, and using Filter by Zapier
    in [*Chapter 7*](B18474_07.xhtml#_idTextAnchor905), *Getting Started with* *Built-In
    Apps*.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Understanding statuses in steps
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'While you’re building your Zap, be aware of statuses within your steps. This
    will help you identify whether there are functionality problems in your Zap and
    ensure that your Zap can be published without errors. Statuses are indicated in
    two places:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '**Within step blocks**: These are indicated by a **green tick icon** if the
    section of the step is in working order, or a **yellow exclamation icon** if action
    is required. This is shown in the following screenshot:'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.24 – Statuses within step blocks](img/B18474_03_24.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
- en: Figure 3.24 – Statuses within step blocks
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '**In the Status section in the right-hand side panel**: Issues in your Zaps
    are highlighted in this section and indicate which step has a problem, a description
    of what the problem might be, and how it could be solved. This is shown in the
    following screenshot:'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 3.25 – Statuses in the right-hand side panel in the Classic Editor
    view](img/B18474_03_25.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
- en: Figure 3.25 – Statuses in the right-hand side panel in the Classic Editor view
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: Address any status issues before attempting to publish your Zap.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have created your trigger and action steps, addressed any status
    issues, and tested your Zap, you will need to name it and turn it on so that it
    can trigger on the selected event in your trigger app and run with live data.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Naming your Zap and turning it “On”
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s name the Zap so that it can be identified easily. We can do this in the
    top panel’s `Create new Google Sheets row when new deal is added in ActiveCampaign`.
    We will discuss the best way to name Zaps in more detail in [*Chapter 4*](B18474_04.xhtml#_idTextAnchor520),
    *Managing* *Your Zaps*.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: The last thing you need to do is turn your Zap on. This can be done using the
    **Publish** button in the top menu, or the popup at the bottom of the Zap editor.
    Once published, your Zap will be in read-only mode, and cannot be adjusted.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Well done, you have just created your first workflow automation from scratch!
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s cover how to edit your Zap and understand the Drafts and Versions
    features.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: Editing your Zap – Drafts and Versions
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you start creating a Zap, Zapier will automatically save any changes as
    **Drafts**. Once the Zap has been published for the first time, you can make edits
    to it without turning it **Off**. This means that the Zap will continue to trigger
    and run while you are making changes to your Zap in the background. Changes to
    the Zap will not be live until the draft has been published but will be saved
    even if you exit the Zap editor for the specific Zap.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: 'When editing your Zap, the last time a draft was saved will be indicated by
    the text below the Zap title, as shown in the following screenshot:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.26 – Draft saving timestamp](img/B18474_03_26.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
- en: Figure 3.26 – Draft saving timestamp
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: 'To make edits to your Zap, click the **Edit** button at the bottom of the Zap
    editor or the **Edit Zap** button in the top-right panel. This is shown in the
    following screenshot:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.27 – Editing a Zap](img/B18474_03_27.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
- en: Figure 3.27 – Editing a Zap
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have previously edited your Zap and have a saved draft, a popup will
    appear, giving you the option to delete the draft by clicking on the **Discard**
    button. You can also continue to use and edit your previously created draft by
    clicking on the **Edit** **draft** button:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.28 – Editing a Zap with an existing saved draft](img/B18474_03_28.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
- en: Figure 3.28 – Editing a Zap with an existing saved draft
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: You can then continue to edit your previously saved draft.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: It is not possible to save notes on the overall changes that have been made
    to saved but unpublished drafts, and it is easy to forget the changes that were
    made if you have not published them. If you plan to work further on a draft in
    the future before publishing it, make notes of your changes in the **Description**
    box under **Settings** in the right-hand side panel. This will ensure that you
    have a record of your unpublished changes.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: Publishing a new version of a Zap
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When you are ready to publish your changes, click the **Publish** button. You
    will be presented with a popup so that you can publish your new version by entering
    a **Version** name. Fill in the **Version name** field with as much descriptive
    information as possible to help you remember what you changed. Click the **Cancel**
    button to cancel the publishing operation or **Publish** to proceed to publish
    the new version of your Zap:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.29 – Publishing a new version of a Zap](img/B18474_03_29.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
- en: Figure 3.29 – Publishing a new version of a Zap
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: The **Version** feature is not available with the Free plan. Version history
    is kept for 1 week on the Starter plan, 1 month on the Professional plan, 6 months
    on the Team plan, and 1 year on the Company plan. Version rollback is only available
    with Professional plans and higher.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have published a new version of your Zap, let’s explore how to
    manage the version history of a Zap.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Managing versions of a Zap
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can manage the different published versions of your Zap by clicking the
    **Versions** button in the right-hand side panel in the **Classic Editor** view
    or the left-hand side panel in the **Visual Editor** view. This will show you
    a list of previously published versions of your Zap, with the first version at
    the bottom and your latest version at the top, normally denoted by the **In use**
    label. The user that published the version and when it was published will also
    be displayed. You can then do the following:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '**Rename a version**: Click on the **three dots icon** next to any version
    to reveal a drop-down menu where you can click on the **Rename version** option
    to change the name of the version'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Revert to a previous version**: Click on the version to display that version
    in the editor, then click on the drop-down menu and choose the **Edit from this
    version** option to bring that version into the editor to make changes or publish
    without changes'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is shown in the following screenshot:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.30 – Managing versions of a Zap](img/B18474_03_30.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
- en: Figure 3.30 – Managing versions of a Zap
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s discuss the benefits of using pre-built workflows.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: Using Zapier’s guided workflows (Zap templates)
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using either Zap editor to start building out your Zaps is the best way to learn
    how to use Zapier. You can save time, however, by exploring and using pre-built
    templates or guided workflows called Zap templates. Zapier has created thousands
    of single-step Zaps using popular combinations of apps and corresponding trigger
    or action events. These Zap templates can be accessed from various locations,
    as we have mentioned throughout this chapter; however, the most practical place
    to start using guided workflows is from the main dashboard and using the **Make
    a Zap** interactive tool.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: 'All you need to do is enter the two apps you want to connect, as well as your
    trigger and action events. Zapier will then present you with a pre-built Zap to
    use. Select **Try it** to continue, which will take you directly to the Zap editor,
    or **Cancel** to start again. This is shown in the following screenshot, which
    is using our working example:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.31 – Using the Make a Zap pre-built workflow tool](img/B18474_03_31.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
- en: Figure 3.31 – Using the Make a Zap pre-built workflow tool
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: Zapier provides variations of the interactive tool, such as with the **Recommended
    workflows for you** option on the main dashboard. This offers a more specific
    approach by naming the objective. For example, you could choose a template to
    post new WordPress posts to your Facebook page, then follow the steps to connect
    your WordPress and Facebook Pages accounts, customize the Zap, test it, and publish
    it.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: Some accounts might show the **Create a Zap (beta)** AI feature in the dashboard,
    therefore replacing the **Make a Zap** interactive tool. We will explore this
    feature in more detail in [*Chapter 19*](B18474_19.xhtml#_idTextAnchor2216), *AI*
    *and Automation*.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of how to create a Zap from scratch,
    and how to use pre-built workflows created by Zapier. Now, let’s take a look at
    the different field types that may be shown in action steps.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: Understanding field data types
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we’ve created our first Zap, we must elaborate on the different types
    of fields that you may see in Zapier action steps.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: 'In the previous section, we covered the two general types of fields, **Choose
    value…** and **Enter text or insert data…**, and how to use them to map fields
    in your Zaps. In addition to these two general field types, five different field
    data types allow you to add data in specific formats. Each field data type is
    represented by an icon, as shown in the following table:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 3.32 – Action step field data ty\uFEFFpes](img/B18474_03_32.jpg)"
  id: totrans-279
  prefs: []
  type: TYPE_IMG
- en: Figure 3.32 – Action step field data types
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: These field data types are dictated by the data posting format requirements
    of your action app. For example, if your action app is Xero (an accounting app),
    and you want to create a new invoice, your invoice date field will only allow
    you to add date/time data values for the request to be successful.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: We will discuss each of these field data types in turn.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: Date/time
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **date/time field** type is represented by a calendar and clock icon side
    by side. This field requires data in the form of a date with or without a time.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of a date/time field from an accounting app action step is shown
    in the following screenshot:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.33 – A date/time field from an accounting app action step](img/B18474_03_33.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
- en: Figure 3.33 – A date/time field from an accounting app action step
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: Supported formats
  id: totrans-288
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Zapier recognizes and supports various time/date formats, as follows:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: '**Standard international** (**ISO**) format – for example, 2020-07-15T13:05'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unix timestamps (the number of seconds since January 1, 1970) – for example,
    1591537509
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Today at noon
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next Monday at 5 P.M.
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5/15/2020 9 P.M. EST
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezone settings
  id: totrans-295
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In [*Chapter 1*](B18474_01.xhtml#_idTextAnchor014), *Introduction to Business
    Process Automation with Zapier*, and earlier in this chapter, we discussed altering
    your account time zone settings and your Zap time zone settings. If you do not
    specify a time zone in the time/date data, such as `today at noon`, Zapier will
    use your account or Zap time zone settings.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: The format you should use in the field is needed for the action app. Every app
    has a different required date/time format and time zone setting. Each app will
    recognize certain time formats/time zone settings and not others. If you’re unsure
    of the exact format needed for your action app or if the data is not posted as
    expected, you should contact Zapier support.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: We will cover how to format date and time values in [*Chapter 14*](B18474_14.xhtml#_idTextAnchor1580),
    *Formatting Date* *and Time*.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: Number (integer)
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **number (integer)** field type is represented by the numbers **1 2 3**.
    This field requires data in the form of an integer, which is a positive or negative
    whole number (which can also be zero). This field is often used for selecting
    unique identifier records, such as ID numbers for users, companies, and projects,
    as well as posting strings of numbers in number-specific fields in the action
    app.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of a number (integer) field from an SMS messaging app action step
    is shown in the following screenshot:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 3.34 – A number (integer) field from a CRM app action step indicat\uFEFF\
    \uFEFFing the input for an ID value](img/B18474_03_34.jpg)"
  id: totrans-302
  prefs: []
  type: TYPE_IMG
- en: Figure 3.34 – A number (integer) field from a CRM app action step indicating
    the input for an ID value
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: Boolean (true/false)
  id: totrans-304
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `true` or `false` value and denotes how the field is represented in the
    action app. These values may be converted as follows:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: '`true`, `yes`, `t`, or `1`'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`false`, `no`, `f`, or `0`'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the example shown in the following screenshot, when creating an invoice
    in the Xero accounting software, you can choose to mark the invoice as **Sent
    To Contact**. A value of **True** would signify yes, while a value of **False**
    would signify no:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 3.35 – A Boolean (true/false) field from a Xe\uFEFF\uFEFFro accounting\
    \ app action\uFEFF step](img/B18474_03_35.jpg)"
  id: totrans-309
  prefs: []
  type: TYPE_IMG
- en: Figure 3.35 – A Boolean (true/false) field from a Xero accounting app action
    step
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: File
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **file** field type is represented by a **document icon**. These fields
    require data in the form of an online accessible document file and not the name
    of a document. Often, these document files are represented by the text in the
    dynamic data (labeled **(Exists but not shown)**) and can be in various file formats.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: 'Two examples of a file field from an email app action step mapped with two
    different formats are shown in the following screenshots:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.36 – A file field from an email app action step with two different
    formats mapped](img/B18474_03_36.jpg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
- en: Figure 3.36 – A file field from an email app action step with two different
    formats mapped
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: It is only possible to add a single file to one field.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: You can type text into the field and it will be converted by Zapier into a `.txt`
    file containing the filled contents. This will then be uploaded to the action
    app. You can also add a URL and Zapier will inspect the content, attempt to name
    it accordingly, and upload it to the action app – for example, if you added the
    URL to an image, rather than the image file itself.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: Decimal
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A **decimal** field type is represented by **1.0**. These fields require data
    in the form of a number with a decimal and can be of variable decimal places.
    The theory is similar to the number (integer) field; however, if the decimal is
    missing, Zapier will add it before posting the data in the action app.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of a decimal field from an accounting app action step is shown in
    the following screenshot:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.37 – A decimal field from an accounting app action step](img/B18474_03_37.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
- en: Figure 3.37 – A decimal field from an accounting app action step
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: You should now have a better understanding of the different types of field data
    that are used in action steps. Now, let’s explore how to keep your workflow automations
    current.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: Ensuring your processes and automations stay current
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 1*](B18474_01.xhtml#_idTextAnchor014), *Introduction to Business
    Process Automation with Zapier*, and [*Chapter 2*](B18474_02.xhtml#_idTextAnchor225),
    *Preparing to Automate Your Processes*, we covered using business process automation
    principles to improve the way you manage your processes and make them more efficient
    with automation. We now need to discuss the importance of building your workflows
    with continuous improvement in mind.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: Businesses continually change due to economic influences, staff turnover, priorities
    and goals, and growth. Thus, the way companies work and how tasks are performed
    is bound to change often. In addition, app integrations are frequently updated
    and improved. Regularly reviewing your processes will ensure you benefit from
    these upgrades and align with the way your business functions currently. Business
    process automation principles take into consideration that businesses and technology
    evolve constantly, and promote having a plan for continuous improvement.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the five key steps for implementing effective workflow automation
    in your business successfully:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '**Discover**: Analyze and simplify your processes and plan your workflows step
    by step.'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Create**: Build your workflows and test them. Adjust your workflows as required.'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Implement**: Document your workflows, train all users, and make other relevant
    team members aware of the new process. Set your workflows to live.'
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Review**: Continually monitor workflow performance. Regularly review your
    processes to assess whether they can be improved. You can do this by repeating
    the exercise described in the *Analyzing and simplifying your processes* section
    of [*Chapter 2*](B18474_02.xhtml#_idTextAnchor225), *Preparing to Automate Your
    Processes*, and checking whether they are still relevant, useful, and not redundant
    or wasteful.'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Improve**: Evaluate what steps can be changed and improved.'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once all five steps have been completed, repeat them from *step 1* at planned,
    regular intervals.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: By reassessing your Zapier workflows regularly, you will be able to remove unnecessary
    steps, which will ultimately reduce your task usage. Following these principles
    will ensure that your processes and subsequent automations align with the current
    situation, and remain lean and error-free.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we started by discussing how to strategize individual workflows
    before diving into working through the step-by-step process of connecting your
    apps to Zapier and creating your first workflow automation (Zap) in Zapier. We
    explored how to edit your Zaps and utilize the version history to switch between
    different versions and how you can access and use a wide range of pre-built workflows.
    We also explored the different types of fields that can be found in action steps
    and how to use these fields correctly. We concluded this chapter by delving into
    best practices for ensuring the continuous improvement of your processes.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: You now know how to plan your workflows and create them in Zapier from scratch
    or using Zap templates. You also know how to use different types of field data
    and perform continuous improvement in your processes. You also created your first
    automated workflow.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will cover the best ways you can organize your Zaps
    by naming them and using folders. We will discuss how to manage individual Zaps
    and help you understand Zap statuses. We will also cover how to manage the apps
    you have connected to your Zapier account before describing how to share copies
    of individual Zaps with other Zapier users and how to share Zaps and folders with
    your team.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What three ways can Zapier ask you to connect and authenticate your apps?
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the three options for adding data to your action steps?
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Other than the two general types of data fields, what are the five specific
    field data types?
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
