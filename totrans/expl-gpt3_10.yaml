- en: '*Chapter 7*: Generating and Transforming Text'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While we've looked at some text generation and transformation examples in earlier
    chapters, in this chapter, we're going to look at a whole lot more. There are
    tons of possible uses for text generation and transformation, including article
    writing, correcting grammar, generating lists, translating text from one language
    to another, extracting keywords, and summarizing text – to name a few. While we
    won't even come close to covering all of the different ways you can use GPT-3
    to generate and transform text, we'll take a look at 15 fun examples to get your
    wheels turning.
  prefs: []
  type: TYPE_NORMAL
- en: 'The topics we''ll cover are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the examples
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating content and lists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Translating and transforming text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracting text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating chatbots
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s look at the requirements we need in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Access to the **OpenAI API**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An account on [replit.com](http://replit.com)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we'll be looking at a lot of examples – 15 to be exact. We'll
    be using the completions endpoint for all of the examples in this chapter – so
    most of the code for the examples is similar. The main difference will be the
    prompt text and the values for the endpoint parameters. So, to save space, we'll
    look at the complete JavaScript and Python code for the first example. After that,
    we'll just duplicate the first example and edit the endpoint and parameters.
  prefs: []
  type: TYPE_NORMAL
- en: To get things started, we'll look at generating original content and lists.
  prefs: []
  type: TYPE_NORMAL
- en: Generating content and lists
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's start with a few examples for creating original content and generating
    lists. Of all the things GPT-3 can do, the possibilities with content and list
    generation are probably the most impressive – and the most fun. GPT-3 can write
    original stories, create product descriptions, produce study notes, help you brainstorm
    ideas, or create recipes – and that's only the beginning.
  prefs: []
  type: TYPE_NORMAL
- en: Dumb joke generator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We''ll start with an example to lighten the mood – a dumb joke generator. Spoiler
    alert: not all of the jokes might be that funny, but whose are? Alright, here
    is the prompt we''ll use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We'll start with an example using Node.js/JavaScript. Remember, for this first
    example, we'll walk through creating all of the code. For the following examples,
    we'll just be modifying a copy of this first example.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create this example in your **exploring-gpt3-node** repl on [replit.com](http://replit.com),
    complete the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [https://replit.com](https://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new folder named `chapter07` in the project root.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new file named `dumb-joke-generator.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following code to the `dumb-joke-generator.js` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the `.replit` file in the root folder with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Click the `chapter07/dumb-joke-generator.js`, you should see a result that is
    similar to the following screenshot. How funny is that? Right?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.1 – Example output from chapter07/dumb-joke-generator.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_001.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.1 – Example output from chapter07/dumb-joke-generator.js
  prefs: []
  type: TYPE_NORMAL
- en: Now let's look at the same example using Python.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the dumb joke generator in Python, complete the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new folder named `chapter07` in the project root.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new file named `dumb-joke-generator.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following code to the `dumb-joke-generator.py` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Click the `chapter07/dumb-joke-generator.py`, you should see a result similar
    to the console output in the following screenshot. Did you laugh?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.2 – Example output from chapter07/dumb-joke-generator.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_002.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.2 – Example output from chapter07/dumb-joke-generator.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's stop joking around and move on to a more serious example.
  prefs: []
  type: TYPE_NORMAL
- en: Mars facts (in most cases)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For our next example, we''ll look at using GPT-3 to learn some things about
    the planet Mars. In most cases, we''ll get back facts, but recall from previous
    chapters that you can''t depend on them being true all of the time. We''ll use
    the following prompt to generate a list of 10 facts about Mars:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Starting with this example, we won't walk through all the code. We'll just copy
    the code from our dumb joke generator and modify it.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the Mars facts example in Node.js/JavaScript, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new file named `mars-facts-list.js` in the `chapter07` folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.js` file into `mars-facts-list.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `mars-facts-list.js` with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Click the `chapter07/mars-facts-list.js`, you should see a result similar to
    the console output in the following screenshot. Did you know all of those things
    about Mars?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.3 – Example output from chapter07/mars-facts-list.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_003.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.3 – Example output from chapter07/mars-facts-list.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Mars facts list example in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the Mars facts example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new file named `mars-facts-list.py` in the `chapter07` folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `mars-facts-list.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `mars-facts-list.py` with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Click the `chapter07/mars-facts-list.py`, you should see a result similar to
    the console output in the following screenshot. Some interesting facts, aren't
    they?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.4\. – Example output from chapter07/mars-facts-list.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_004.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.4\. – Example output from chapter07/mars-facts-list.py
  prefs: []
  type: TYPE_NORMAL
- en: We've looked at entertainment and education examples, now let's get some work
    done with a business example – a webinar description generator.
  prefs: []
  type: TYPE_NORMAL
- en: Webinar description generator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this example, we''ll use GPT-3 to help write a description for an event.
    We''ll be using the following prompt to write a description for a mindfulness
    webinar:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the webinar description generator in Node.js/JavaScript, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new file named `webinar-description-generator.js` in the `chapter07`
    folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.js` file into `webinar-description-generator.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `webinar-description-generator.js` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/webinar-description-generator.js`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.5 – Example output from chapter07/webinar-description-generator.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_005.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.5 – Example output from chapter07/webinar-description-generator.js
  prefs: []
  type: TYPE_NORMAL
- en: Now let's create the webinar description generator example in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the webinar description generator example in Python, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new file named `webinar-description-generator.py` in the `chapter07`
    folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `webinar-description-generator.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `webinar-description-generator.py` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/webinar-description-generator.py`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.6 – Example output from chapter07/webinar-description-generator.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_006.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.6 – Example output from chapter07/webinar-description-generator.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's move on and get some suggestions from GPT-3 on books we might consider
    reading.
  prefs: []
  type: TYPE_NORMAL
- en: Book suggestions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'How about a list of books that you should read? Let''s give that a try. We''ll
    use the following prompt. This prompt will be completed with a numbered list of
    book suggestions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Now let's implement the book suggestions prompt in code.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the book suggestions list example in Node.js/JavaScript, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/book-suggestions-list.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/book-suggestions-list.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/book-suggestions-list.js` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/book-suggestions-list.js`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.7 – Example output from chapter07/book-suggestions-list.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_007.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.7 – Example output from chapter07/book-suggestions-list.js
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in *Figure 7.7*, the completion is a list of book suggestions.
    Now let's move on and look at the same example using Python.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the book suggestions list example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/book-suggestions-list.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/book-suggestions-list.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/book-suggestions-list.js` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/book-suggestions-list.py`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.8 – Example output from chapter07/book-suggestions-list.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_008.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.8 – Example output from chapter07/book-suggestions-list.py
  prefs: []
  type: TYPE_NORMAL
- en: Now let's take a look at another example.
  prefs: []
  type: TYPE_NORMAL
- en: Children's book generator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let''s do something creative for the kids. How about a custom bedtime storybook?
    Here is the prompt we''ll use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: In our code example that follows, we'll just be implementing the prompt to generate
    the book. However, in a real-world version, you'd want to also include content
    filtering as we discussed in [*Chapter 6*](B16854_06_ePub_AM.xhtml#_idTextAnchor126),
    *Content Filtering*.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the children''s book generator example in Node.js/JavaScript, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/childrens-book-generator.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/childrens-book-generator.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/childrens-book-generator.js` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/childrens-book-generator.js`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.9 – Example output from chapter07/childrens-book-generator.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_009.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.9 – Example output from chapter07/childrens-book-generator.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python version.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the children''s book generator example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/childrens-book-generator.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/childrens-book-generator.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/childrens-book-generator.py` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/childrens-book-generator.py`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.10 – Example output from chapter07/childrens-book-generator.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_010.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.10 – Example output from chapter07/childrens-book-generator.py
  prefs: []
  type: TYPE_NORMAL
- en: Now let's move on and look at some examples that translate and transform text.
    We'll look at some examples you'd expect such as translating spoken language.
    We'll also look at some translations with a twist.
  prefs: []
  type: TYPE_NORMAL
- en: Translating and transforming text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you think about translating text, systems such as Google Translate might
    come to mind. But with GPT-3, you can also translate – and not just between spoken
    languages. You can translate between just about anything. Let's take a look.
  prefs: []
  type: TYPE_NORMAL
- en: Acronym translator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For our first translation example, we''ll convert acronyms to their meanings.
    The following is the prompt text we''ll be using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: The prompt provides a few examples of acronyms and their meanings. Try it out
    with the following Node.js/JavaScript code.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the acronym translator example in Node.js/JavaScript, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/acronym-translator.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/acronym-translator.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/acronym-translator.js` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/acronym-translator.js`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.11 – Example output from chapter07/acronym-translator.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_011.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.11 – Example output from chapter07/acronym-translator.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python example.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the acronym translator example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to `replit.com` and open your **exploring-gpt3-python** repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/acronym-translator.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/acronym-translator.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/acronym-translator.py` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/acronym-translator.py`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.12 – Example output from chapter07/acronym-translator.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_012.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.12 – Example output from chapter07/acronym-translator.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at another example.
  prefs: []
  type: TYPE_NORMAL
- en: English to Spanish
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now let''s look at translating between spoken languages. In this example, we''ll
    create a simple translator that converts text from English to Spanish:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: GPT-3 is quite good at translating between languages. This is especially true
    when translating between popular languages such as English and Spanish. So, even
    a simple prompt like this one is usually enough to get an accurate completion.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the English to Spanish translator example in Node.js/JavaScript,
    follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/english-spanish-translator.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/english-spanish-translator.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/english-spanish-translator.js`
    with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/english-spanish-translator.js`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.13 – Example output from chapter07/english-spanish-translator.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_013.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.13 – Example output from chapter07/english-spanish-translator.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the same example using Python to translate from English
    to Spanish.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the English to Spanish translator example in Python, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/english-spanish-translator.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/english-spanish-translator.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/english-spanish-translator.py`
    with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/english-spanish-translator.py`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.14 – Example output from chapter07/english-spanish-translator.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_014.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.14 – Example output from chapter07/english-spanish-translator.py
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in *Figure 7.14*, GPT-3 translated the English text to Spanish.
    But what's even more impressive is that GPT-3 can also translate between computer
    programming languages. We'll look at that next with a prompt that translates code
    from JavaScript to Python.
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript to Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Translating doesn''t just need to be between human languages. Since GPT-3 was
    trained using data from the internet, it can also translate between programming
    languages. The following prompt provides an example that shows how to translate
    JavaScript code to Python:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: This is a fairly simple code translation example, but it does a good job of
    showing the potential. More complex code translations might require a few-shot
    prompt with more samples but let's give this one a try using Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the JavaScript to Python translator example in Node.js/JavaScript,
    follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/javascript-python-translator.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/javascript-python-translator.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/javascript-python-translator.js`
    with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/javascript-python-translator.js`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.15 – Example output from chapter07/javascript-python-translator.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_015.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.15 – Example output from chapter07/javascript-python-translator.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python version.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the JavaScript to Python translator example in Python, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/javascript-python-translator.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/javascript-python-translator.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/javascript-python-translator.py`
    with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/javascript-python-translator.py`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.16 – Example output from chapter07/javascript-python-translator.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_016.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.16 – Example output from chapter07/javascript-python-translator.py
  prefs: []
  type: TYPE_NORMAL
- en: In the next example, we'll look at summarizing text. We looked at summarizing
    text in [*Chapter 7*](B16854_07_ePub_AM.xhtml#_idTextAnchor136), *Generating and
    Transforming Text*, using TLDR, but that's not the only way to summarize text.
    You can also provide text summaries for a provided reading level/grade.
  prefs: []
  type: TYPE_NORMAL
- en: Fifth-grade summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'GPT-3 can summarize text for a given grade or reading level. Although the *grade*
    levels are not exactly precise and can be subjective, you''ll notice the text
    gets simpler as the grade level gets lower. The following prompt provides an example
    of how you can approach doing that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Let's try this example in Node.js/JavaScript and review the results.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the fifth-grade summary example in Node.js/JavaScript, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/fith-grade-summary.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/fith-grade-summary.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/fith-grade-summary.js` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/fith-grade-summary.js`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.17 – Example output from chapter07/fith-grade-summary.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_017.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.17 – Example output from chapter07/fith-grade-summary.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python code.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the fifth-grade summary example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/fith-grade-summary.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/fith-grade-summary.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/fith-grade-summary.py` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/fith-grade-summary.py`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.18 – Example output from chapter07/fith-grade-summary.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_018.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.18 – Example output from chapter07/fith-grade-summary.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at another example. This time we'll see how GPT-3 does with
    grammar correction.
  prefs: []
  type: TYPE_NORMAL
- en: Grammar correction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'English grammar correction can be accomplished with a very simple prompt such
    as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Let's test out this grammar correction prompt using Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the grammar correction converter example in Node.js/JavaScript, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/grammar-correction-converter.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/grammar-correction-converter.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/grammar-correction-converter.js`
    with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/grammar-correction-converter.js`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.19 – Example output from chapter07/grammar-correction-converter.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_019.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.19 – Example output from chapter07/grammar-correction-converter.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python code.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the grammar correction converter example in Python, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/grammar-correction-converter.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/grammar-correction-converter.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/grammar-correction-converter.py`
    with the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/gramar-correction-converter.py`, you should see a result
    similar to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.20 – Example output from chapter07/grammar-correction-converter.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_020.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.20 – Example output from chapter07/grammar-correction-converter.py
  prefs: []
  type: TYPE_NORMAL
- en: Alright, we've covered a lot of examples in this chapter, but we're not done
    yet. Let's keep moving and look at extracting information from text next.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting text
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can also use GPT-3 to extract text values from a larger text. This is commonly
    referred to as entity extraction where the entity is the item or pattern that
    you want to extract. Or you might want to extract keywords. For that, you could
    use the following prompt.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting keywords
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following prompt provides an example of how to extract keywords from text.
    In this case, the text is from [https://en.wikipedia.org/wiki/Quantum_mechanics](https://en.wikipedia.org/wiki/Quantum_mechanics),
    but of course, this could be done with any text:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: Now try extracting keywords using Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the keyword extractor example in Node.js/JavaScript, follow these
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/keyword-extractor.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/keyword-extractor.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/keyword-extractor.js` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/keyword-extractor.js`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.21 – Example output from chapter07/keyword-extractor.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_021.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.21 – Example output from chapter07/keyword-extractor.js
  prefs: []
  type: TYPE_NORMAL
- en: Now the Python example.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the keyword extractor example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/keyword-extractor.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/keyword-extractor.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/keyword-extractor.py` with the
    following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/keyword-extractor.py`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.22 – Example output from chapter07/keyword-extractor.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_022.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.22 – Example output from chapter07/keyword-extractor.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at another example.
  prefs: []
  type: TYPE_NORMAL
- en: HTML parsing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this example, we will extract text from HTML. Specifically, the following
    prompt extracts the value of the title tag (the text between `<title>` and `</title>`).
    As you can see, the prompt is pretty simple. It just provides some simple directions,
    the HTML to extract from, and a label for the title:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Now, let's try HTML parsing using Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the text from HTML example in Node.js/JavaScript, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/text-from-html.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/text-from-html.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/text-from-html.js` with the following
    code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/text-from-html.js`, you should see a result similar to
    the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.23 – Example output from chapter07/text-from-html.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_023.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.23 – Example output from chapter07/text-from-html.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python code.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the text from HTML example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/text-from-html.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/text-from-html.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/text-from-html.py` with the following
    code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/text-from-html.py`, you should see a result similar to
    the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.24 – Example output from chapter07/text-from-html.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_024.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.24 – Example output from chapter07/text-from-html.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at another example.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting a postal address
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's look at an example that extracts the postal address from an email. The
    following prompt shows how you could accomplish this.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: This example uses the **davinci-instruct-beta** engine, which is in beta at
    the time of publishing.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see the prompt provides basic instructions and the postal address in
    the email is provided in a standard way so GPT-3 will likely be able to identify
    the address:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Now try this prompt out with Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the extracting a postal address example in Node.js/JavaScript, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/extract-postal-address.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/extract-postal-address.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/extract-postal-address.js` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/extract-postal-address.js`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.25 – Example output from chapter07/extract-postal-address.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_025.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.25 – Example output from chapter07/extract-postal-address.js
  prefs: []
  type: TYPE_NORMAL
- en: Now let's try the same example using Python.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the extracting a postal address example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/extract-postal-address.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/extract-postal-address.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/extract-postal-address.py` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/extract-postal-address.py`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.26 – Example output from chapter07/extract-postal-address.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_026.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.26 – Example output from chapter07/extract-postal-address.py
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at a similar example – extracting an email address.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting an email address
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This prompt is similar to the postal address example but this time we''re instructing
    GPT-3 to extract an email address:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Now, let's try this prompt out with Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the extracting an email address example in Node.js/JavaScript, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/extract-email-address.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/extract-email-address.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/extract-email-address.js` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/extract-email-address.js`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.27 – Example output from chapter07/extract-email-address.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_027.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.27 – Example output from chapter07/extract-email-address.js
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the Python code.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the extracting an email address example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/extract-email-address.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/extract-email-address.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/extract-email-address.py` with
    the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/extract-email-address.py`, you should see a result similar
    to the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.28 – Example output from chapter07/extract-email-address.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_028.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.28 – Example output from chapter07/extract-email-address.py
  prefs: []
  type: TYPE_NORMAL
- en: For our last example, we're going to close out with a chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: Creating chatbots
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the last set of examples, we'll look at creating chatbots. Technically,
    this would be classified as generating text so it could have been covered in *Generating
    content and lists*. But creating chatbots with GPT-3 is so much fun it deserves
    a section of its own. We'll start with a simple conversational chatbot.
  prefs: []
  type: TYPE_NORMAL
- en: A simple chatbot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For our simple chatbot, we'll be using the following prompt. We'll look at code
    for both Node.js/JavaScript and Python but the prompt for both is the same.
  prefs: []
  type: TYPE_NORMAL
- en: The first part of the prompt provides instructions for how the bot should respond
    and the general conversational style. You can change a lot about how the bot responds
    by changing the instructions and the example dialog. For instance, you could change
    the conversational tone by changing the words *friendly and polite* to *rude and
    sarcastic*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the prompt text for our simple bot:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Now, let's take a look at using to implement a simple bot in Node.js/JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Node.js/JavaScript example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the simple chatbot example in Node.js/JavaScript, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-node**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/simple-chatbot.js`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/simple-chatbot.js`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/simple-chatbot.js` with the following
    code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/simple-chatbot.js`, you should see a result similar to
    the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.29 – Example output from chapter07/simple-chatbot.js'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_029.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.29 – Example output from chapter07/simple-chatbot.js
  prefs: []
  type: TYPE_NORMAL
- en: Now the Python version.
  prefs: []
  type: TYPE_NORMAL
- en: Python example
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create the simple chatbot example in Python, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [replit.com](http://replit.com) and open your **exploring-gpt3-python**
    repl.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new file: `chapter07/simple-chatbot.py`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the code from the `dumb-joke-generator.py` file into `chapter07/simple-chatbot.py`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Replace the `params` variable in `chapter07/simple-chatbot.py` with the following
    code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Change the `.replit` file in your root folder to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the `chapter07/simple-chatbot.py`, you should see a result similar to
    the console output in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.30 – Example output from chapter07/simple-chatbot.py'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B16854_07_030.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.30 – Example output from chapter07/simple-chatbot.py
  prefs: []
  type: TYPE_NORMAL
- en: That's our last example. Let's wrap up with a quick summary.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered generating and transforming text. We walked through
    15 examples in both Node.js/JavaScript and Python. The examples included generating
    content and lists, translating and transforming text, extracting text, and creating
    simple chatbots.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll walk through examples of classifying and categorizing
    text.
  prefs: []
  type: TYPE_NORMAL
